import{_ as i,c as a,b as e,o as n}from"./app-BYwbaC_O.js";const t={};function l(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="logstash-运维" tabindex="-1"><a class="header-anchor" href="#logstash-运维"><span>Logstash 运维</span></a></h1><blockquote><p><a href="https://github.com/elastic/logstash" target="_blank" rel="noopener noreferrer">Logstash</a> 是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。</p></blockquote><h2 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装"><span>1. 安装</span></a></h2><h3 id="_1-1-安装步骤" tabindex="-1"><a class="header-anchor" href="#_1-1-安装步骤"><span>1.1. 安装步骤</span></a></h3><p>安装步骤如下：</p><p>（1）在 <a href="https://www.elastic.co/downloads/logstash" target="_blank" rel="noopener noreferrer">logstash 官方下载地址</a>下载所需版本包并解压到本地。</p><p>（2）添加一个 <code>logstash.conf</code> 文件，指定要使用的插件以及每个插件的设置。举个简单的例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input { stdin { } }</span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span>  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }</span></span>
<span class="line"><span>  stdout { codec =&gt; rubydebug }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）运行 <code>bin/logstash -f logstash.conf</code> （Windows 上运行<code>bin/logstash.bat -f logstash.conf</code>）</p><h2 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置"><span>2. 配置</span></a></h2><h3 id="_2-1-设置文件" tabindex="-1"><a class="header-anchor" href="#_2-1-设置文件"><span>2.1. 设置文件</span></a></h3><ul><li><strong><code>logstash.yml</code></strong>：logstash 的默认启动配置文件</li><li><strong><code>jvm.options</code></strong>：logstash 的 JVM 配置文件。</li><li><strong><code>startup.options</code></strong> (Linux)：包含系统安装脚本在 <code>/usr/share/logstash/bin</code> 中使用的选项为您的系统构建适当的启动脚本。安装 Logstash 软件包时，系统安装脚本将在安装过程结束时执行，并使用 <code>startup.options</code> 中指定的设置来设置用户，组，服务名称和服务描述等选项。</li></ul><h3 id="_2-2-logstash-yml-设置项" tabindex="-1"><a class="header-anchor" href="#_2-2-logstash-yml-设置项"><span>2.2. logstash.yml 设置项</span></a></h3><p>节选部分设置项，更多项请参考：<a href="https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/current/logstash-settings-file.html</a></p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>node.name</code></td><td>节点名</td><td>机器的主机名</td></tr><tr><td><code>path.data</code></td><td>Logstash 及其插件用于任何持久性需求的目录。</td><td><code>LOGSTASH_HOME/data</code></td></tr><tr><td><code>pipeline.workers</code></td><td>同时执行管道的过滤器和输出阶段的工作任务数量。如果发现事件正在备份，或 CPU 未饱和，请考虑增加此数字以更好地利用机器处理能力。</td><td>Number of the host’s CPU cores</td></tr><tr><td><code>pipeline.batch.size</code></td><td>尝试执行过滤器和输出之前，单个工作线程从输入收集的最大事件数量。较大的批量处理大小一般来说效率更高，但是以增加的内存开销为代价。您可能必须通过设置 <code>LS_HEAP_SIZE</code> 变量来有效使用该选项来增加 JVM 堆大小。</td><td><code>125</code></td></tr><tr><td><code>pipeline.batch.delay</code></td><td>创建管道事件批处理时，在将一个尺寸过小的批次发送给管道工作任务之前，等待每个事件需要多长时间（毫秒）。</td><td><code>5</code></td></tr><tr><td><code>pipeline.unsafe_shutdown</code></td><td>如果设置为 true，则即使在内存中仍存在 inflight 事件时，也会强制 Logstash 在关闭期间退出。默认情况下，Logstash 将拒绝退出，直到所有接收到的事件都被推送到输出。启用此选项可能会导致关机期间数据丢失。</td><td><code>false</code></td></tr><tr><td><code>path.config</code></td><td>主管道的 Logstash 配置路径。如果您指定一个目录或通配符，配置文件将按字母顺序从目录中读取。</td><td>Platform-specific. See [<a href="https://github.com/elastic/logstash/blob/6.1/docs/static/settings-file.asciidoc#dir-layout" target="_blank" rel="noopener noreferrer">dir-layout]</a>.</td></tr><tr><td><code>config.string</code></td><td>包含用于主管道的管道配置的字符串。使用与配置文件相同的语法。</td><td>None</td></tr><tr><td><code>config.test_and_exit</code></td><td>设置为 true 时，检查配置是否有效，然后退出。请注意，使用此设置不会检查 grok 模式的正确性。 Logstash 可以从目录中读取多个配置文件。如果将此设置与 log.level：debug 结合使用，则 Logstash 将记录组合的配置文件，并注掉其源文件的配置块。</td><td><code>false</code></td></tr><tr><td><code>config.reload.automatic</code></td><td>设置为 true 时，定期检查配置是否已更改，并在配置更改时重新加载配置。这也可以通过 SIGHUP 信号手动触发。</td><td><code>false</code></td></tr><tr><td><code>config.reload.interval</code></td><td>Logstash 检查配置文件更改的时间间隔。</td><td><code>3s</code></td></tr><tr><td><code>config.debug</code></td><td>设置为 true 时，将完全编译的配置显示为调试日志消息。您还必须设置<code>log.level：debug</code>。警告：日志消息将包括任何传递给插件配置作为明文的“密码”选项，并可能导致明文密码出现在您的日志！</td><td><code>false</code></td></tr><tr><td><code>config.support_escapes</code></td><td>当设置为 true 时，带引号的字符串将处理转义字符。</td><td><code>false</code></td></tr><tr><td><code>modules</code></td><td>配置时，模块必须处于上表所述的嵌套 YAML 结构中。</td><td>None</td></tr><tr><td><code>http.host</code></td><td>绑定地址</td><td><code>&quot;127.0.0.1&quot;</code></td></tr><tr><td><code>http.port</code></td><td>绑定端口</td><td><code>9600</code></td></tr><tr><td><code>log.level</code></td><td>日志级别。有效选项：fatal &gt; error &gt; warn &gt; info &gt; debug &gt; trace</td><td><code>info</code></td></tr><tr><td><code>log.format</code></td><td>日志格式。json （JSON 格式）或 plain （原对象）</td><td><code>plain</code></td></tr><tr><td><code>path.logs</code></td><td>Logstash 自身日志的存储路径</td><td><code>LOGSTASH_HOME/logs</code></td></tr><tr><td><code>path.plugins</code></td><td>在哪里可以找到自定义的插件。您可以多次指定此设置以包含多个路径。</td><td></td></tr></tbody></table><h2 id="_3-启动" tabindex="-1"><a class="header-anchor" href="#_3-启动"><span>3. 启动</span></a></h2><h3 id="_3-1-命令行" tabindex="-1"><a class="header-anchor" href="#_3-1-命令行"><span>3.1. 命令行</span></a></h3><p>通过命令行启动 logstash 的方式如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bin/logstash [options]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>其中 <code>options</code> 是您可以指定用于控制 Logstash 执行的命令行标志。</p><p>在命令行上设置的任何标志都会覆盖 Logstash 设置文件（<code>logstash.yml</code>）中的相应设置，但设置文件本身不会更改。</p><blockquote><p><strong>注</strong></p><p>虽然可以通过指定命令行参数的方式，来控制 logstash 的运行方式，但显然这么做很麻烦。</p><p>建议通过指定配置文件的方式，来控制 logstash 运行，启动命令如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bin/logstash -f logstash.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>若想了解更多的命令行参数细节，请参考：<a href="https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/current/running-logstash-command-line.html</a></p></blockquote><h3 id="_3-2-配置文件" tabindex="-1"><a class="header-anchor" href="#_3-2-配置文件"><span>3.2. 配置文件</span></a></h3><p>上节，我们了解到，logstash 可以执行 <code>bin/logstash -f logstash.conf</code> ，按照配置文件中的参数去覆盖默认设置文件（<code>logstash.yml</code>）中的设置。</p><p>这节，我们就来学习一下这个配置文件如何配置参数。</p><h4 id="_3-2-1-配置文件结构" tabindex="-1"><a class="header-anchor" href="#_3-2-1-配置文件结构"><span>3.2.1. 配置文件结构</span></a></h4><p>在工作原理一节中，我们已经知道了 Logstash 主要有三个工作阶段 input 、filter、output。而 logstash 配置文件文件结构也与之相对应：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input {}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>filter {}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>output {}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>每个部分都包含一个或多个插件的配置选项。如果指定了多个过滤器，则会按照它们在配置文件中的显示顺序应用它们。</p></blockquote><h4 id="_3-2-2-插件配置" tabindex="-1"><a class="header-anchor" href="#_3-2-2-插件配置"><span>3.2.2. 插件配置</span></a></h4><p>插件的配置由插件名称和插件的一个设置块组成。</p><p>下面的例子中配置了两个输入文件配置：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input {</span></span>
<span class="line"><span>  file {</span></span>
<span class="line"><span>    path =&gt; &quot;/var/log/messages&quot;</span></span>
<span class="line"><span>    type =&gt; &quot;syslog&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  file {</span></span>
<span class="line"><span>    path =&gt; &quot;/var/log/apache/access.log&quot;</span></span>
<span class="line"><span>    type =&gt; &quot;apache&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>您可以配置的设置因插件类型而异。你可以参考： <a href="https://www.elastic.co/guide/en/logstash/current/input-plugins.html" target="_blank" rel="noopener noreferrer">Input Plugins</a>, <a href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html" target="_blank" rel="noopener noreferrer">Output Plugins</a>, <a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html" target="_blank" rel="noopener noreferrer">Filter Plugins</a>, 和 <a href="https://www.elastic.co/guide/en/logstash/current/codec-plugins.html" target="_blank" rel="noopener noreferrer">Codec Plugins</a> 。</p><h4 id="_3-2-3-值类型" tabindex="-1"><a class="header-anchor" href="#_3-2-3-值类型"><span>3.2.3. 值类型</span></a></h4><p>一个插件可以要求设置的值是一个特定的类型，比如布尔值，列表或哈希值。以下值类型受支持。</p><ul><li>Array</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  users =&gt; [ {id =&gt; 1, name =&gt; bob}, {id =&gt; 2, name =&gt; jane} ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Lists</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  path =&gt; [ &quot;/var/log/messages&quot;, &quot;/var/log/*.log&quot; ]</span></span>
<span class="line"><span>  uris =&gt; [ &quot;http://elastic.co&quot;, &quot;http://example.net&quot; ]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Boolean</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  ssl_enable =&gt; true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Bytes</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  my_bytes =&gt; &quot;1113&quot;   # 1113 bytes</span></span>
<span class="line"><span>  my_bytes =&gt; &quot;10MiB&quot;  # 10485760 bytes</span></span>
<span class="line"><span>  my_bytes =&gt; &quot;100kib&quot; # 102400 bytes</span></span>
<span class="line"><span>  my_bytes =&gt; &quot;180 mb&quot; # 180000000 bytes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Codec</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  codec =&gt; &quot;json&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Hash</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>match =&gt; {</span></span>
<span class="line"><span>  &quot;field1&quot; =&gt; &quot;value1&quot;</span></span>
<span class="line"><span>  &quot;field2&quot; =&gt; &quot;value2&quot;</span></span>
<span class="line"><span>  ...</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Number</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  port =&gt; 33</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Password</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  my_password =&gt; &quot;password&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>URI</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  my_uri =&gt; &quot;http://foo:bar@example.net&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>Path</li></ul><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>  my_path =&gt; &quot;/tmp/logstash&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>String</p></li><li><p>转义字符</p></li></ul><h2 id="_4-插件" tabindex="-1"><a class="header-anchor" href="#_4-插件"><span>4. 插件</span></a></h2><h3 id="_4-1-input" tabindex="-1"><a class="header-anchor" href="#_4-1-input"><span>4.1. input</span></a></h3><blockquote><p>Logstash 支持各种输入选择 ，可以在同一时间从众多常用来源捕捉事件。能够以连续的流式传输方式，轻松地从您的日志、指标、Web 应用、数据存储以及各种 AWS 服务采集数据。</p></blockquote><h4 id="_4-1-1-常用-input-插件" tabindex="-1"><a class="header-anchor" href="#_4-1-1-常用-input-插件"><span>4.1.1. 常用 input 插件</span></a></h4><ul><li><strong>file</strong>：从文件系统上的文件读取，就像 UNIX 命令 <code>tail -0F</code> 一样</li><li>**syslog：**在众所周知的端口 514 上侦听系统日志消息，并根据 RFC3164 格式进行解析</li><li>**redis：**从 redis 服务器读取，使用 redis 通道和 redis 列表。 Redis 经常用作集中式 Logstash 安装中的“代理”，它将来自远程 Logstash“托运人”的 Logstash 事件排队。</li><li>**beats：**处理由 Filebeat 发送的事件。</li></ul><p>更多详情请见：<a href="https://www.elastic.co/guide/en/logstash/current/input-plugins.html" target="_blank" rel="noopener noreferrer">Input Plugins</a></p><h3 id="_4-2-filter" tabindex="-1"><a class="header-anchor" href="#_4-2-filter"><span>4.2. filter</span></a></h3><blockquote><p>过滤器是 Logstash 管道中的中间处理设备。如果符合特定条件，您可以将条件过滤器组合在一起，对事件执行操作。</p></blockquote><h4 id="_4-2-1-常用-filter-插件" tabindex="-1"><a class="header-anchor" href="#_4-2-1-常用-filter-插件"><span>4.2.1. 常用 filter 插件</span></a></h4><ul><li><p>**grok：**解析和结构任意文本。 Grok 目前是 Logstash 中将非结构化日志数据解析为结构化和可查询的最佳方法。</p></li><li><p>**mutate：**对事件字段执行一般转换。您可以重命名，删除，替换和修改事件中的字段。</p></li><li><p>**drop：**完全放弃一个事件，例如调试事件。</p></li><li><p>**clone：**制作一个事件的副本，可能会添加或删除字段。</p></li><li><p>**geoip：**添加有关 IP 地址的地理位置的信息（也可以在 Kibana 中显示惊人的图表！）</p></li></ul><p>更多详情请见：<a href="https://www.elastic.co/guide/en/logstash/current/filter-plugins.html" target="_blank" rel="noopener noreferrer">Filter Plugins</a></p><h3 id="_4-3-output" tabindex="-1"><a class="header-anchor" href="#_4-3-output"><span>4.3. output</span></a></h3><blockquote><p>输出是 Logstash 管道的最后阶段。一个事件可以通过多个输出，但是一旦所有输出处理完成，事件就完成了执行。</p></blockquote><h4 id="_4-3-1-常用-output-插件" tabindex="-1"><a class="header-anchor" href="#_4-3-1-常用-output-插件"><span>4.3.1. 常用 output 插件</span></a></h4><ul><li>**elasticsearch：**将事件数据发送给 Elasticsearch（推荐模式）。</li><li>**file：**将事件数据写入文件或磁盘。</li><li>**graphite：**将事件数据发送给 graphite（一个流行的开源工具，存储和绘制指标。 <a href="http://graphite.readthedocs.io/en/latest/%EF%BC%89%E3%80%82" target="_blank" rel="noopener noreferrer">http://graphite.readthedocs.io/en/latest/）。</a></li><li>**statsd：**将事件数据发送到 statsd （这是一种侦听统计数据的服务，如计数器和定时器，通过 UDP 发送并将聚合发送到一个或多个可插入的后端服务）。</li></ul><p>更多详情请见：<a href="https://www.elastic.co/guide/en/logstash/current/output-plugins.html" target="_blank" rel="noopener noreferrer">Output Plugins</a></p><h3 id="_4-4-codec" tabindex="-1"><a class="header-anchor" href="#_4-4-codec"><span>4.4. codec</span></a></h3><p>用于格式化对应的内容。</p><h4 id="_4-4-1-常用-codec-插件" tabindex="-1"><a class="header-anchor" href="#_4-4-1-常用-codec-插件"><span>4.4.1. 常用 codec 插件</span></a></h4><ul><li>**json：**以 JSON 格式对数据进行编码或解码。</li><li>**multiline：**将多行文本事件（如 java 异常和堆栈跟踪消息）合并为单个事件。</li></ul><p>更多插件请见：<a href="https://www.elastic.co/guide/en/logstash/current/codec-plugins.html" target="_blank" rel="noopener noreferrer">Codec Plugins</a></p><h2 id="_5-实战" tabindex="-1"><a class="header-anchor" href="#_5-实战"><span>5. 实战</span></a></h2><p>前面的内容都是对 Logstash 的介绍和原理说明。接下来，我们来实战一些常见的应用场景。</p><h3 id="_5-1-传输控制台数据" tabindex="-1"><a class="header-anchor" href="#_5-1-传输控制台数据"><span>5.1. 传输控制台数据</span></a></h3><blockquote><p>stdin input 插件从标准输入读取事件。这是最简单的 input 插件，一般用于测试场景。</p></blockquote><p><strong>应用</strong></p><p>（1）创建 <code>logstash-input-stdin.conf</code> ：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input { stdin { } }</span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span>  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }</span></span>
<span class="line"><span>  stdout { codec =&gt; rubydebug }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多配置项可以参考：<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-stdin.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/current/plugins-inputs-stdin.html</a></p><p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>bin/logstash -f logstash-input-stdin.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5-2-传输-logback-日志" tabindex="-1"><a class="header-anchor" href="#_5-2-传输-logback-日志"><span>5.2. 传输 logback 日志</span></a></h3><blockquote><p>elk 默认使用的 Java 日志工具是 log4j2 ，并不支持 logback 和 log4j。</p><p>想使用 logback + logstash ，可以使用 <a href="https://github.com/logstash/logstash-logback-encoder" target="_blank" rel="noopener noreferrer">logstash-logback-encoder</a> 。<a href="https://github.com/logstash/logstash-logback-encoder" target="_blank" rel="noopener noreferrer">logstash-logback-encoder</a> 提供了 UDP / TCP / 异步方式来传输日志数据到 logstash。</p><p>如果你使用的是 log4j ，也不是不可以用这种方式，只要引入桥接 jar 包即可。如果你对 log4j 、logback ，或是桥接 jar 包不太了解，可以参考我的这篇博文：<a href="https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md" target="_blank" rel="noopener noreferrer">细说 Java 主流日志工具库</a> 。</p></blockquote><h4 id="_5-2-1-tcp-应用" tabindex="-1"><a class="header-anchor" href="#_5-2-1-tcp-应用"><span>5.2.1. TCP 应用</span></a></h4><p>logstash 配置：</p><p>（1）创建 <code>logstash-input-tcp.conf</code> ：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input {</span></span>
<span class="line"><span>  # stdin { }</span></span>
<span class="line"><span>  tcp {</span></span>
<span class="line"><span>    # host:port就是上面appender中的 destination，</span></span>
<span class="line"><span> # 这里其实把logstash作为服务，开启9250端口接收logback发出的消息</span></span>
<span class="line"><span>    host =&gt; &quot;127.0.0.1&quot; port =&gt; 9250 mode =&gt; &quot;server&quot; tags =&gt; [&quot;tags&quot;] codec =&gt; json_lines</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span>  elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }</span></span>
<span class="line"><span>  stdout { codec =&gt; rubydebug }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多配置项可以参考：<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/current/plugins-inputs-tcp.html</a></p><p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-udp.conf</code></p><p>java 应用配置：</p><p>（1）在 Java 应用的 pom.xml 中引入 jar 包：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;net.logstash.logback&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;logstash-logback-encoder&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.11&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- logback 依赖包 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;ch.qos.logback&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;logback-core&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.2.3&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;ch.qos.logback&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;logback-classic&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.2.3&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;ch.qos.logback&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;logback-access&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.2.3&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）接着，在 logback.xml 中添加 appender</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">appender</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ELK-TCP&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;net.logstash.logback.appender.LogstashTcpSocketAppender&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> &lt;!--</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> destination 是 logstash 服务的 host:port，</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 相当于和 logstash 建立了管道，将日志数据定向传输到 logstash</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">destination</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;192.168.28.32:9251&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">destination</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">encoder</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> charset</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;net.logstash.logback.encoder.LogstashEncoder&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">appender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">logger</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;io.github.dunwu.spring&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;TRACE&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> additivity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">appender-ref</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ELK-TCP&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">logger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大功告成，此后，<code>io.github.dunwu.spring</code> 包中的 TRACE 及以上级别的日志信息都会被定向输出到 logstash 服务。</p><figure><img src="http://upload-images.jianshu.io/upload_images/3101171-cd876d79a14955b0.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>接下来，就是 logback 的具体使用 ，如果对此不了解，不妨参考一下我的这篇博文：<a href="https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md" target="_blank" rel="noopener noreferrer">细说 Java 主流日志工具库</a> 。</p><p><strong>实例：</strong><a href="https://github.com/dunwu/JavaStack/blob/master/codes/javatool/src/main/resources/logback.xml" target="_blank" rel="noopener noreferrer">我的 logback.xml</a></p><h4 id="_5-2-2-udp-应用" tabindex="-1"><a class="header-anchor" href="#_5-2-2-udp-应用"><span>5.2.2. UDP 应用</span></a></h4><p>UDP 和 TCP 的使用方式大同小异。</p><p>logstash 配置：</p><p>（1）创建 <code>logstash-input-udp.conf</code> ：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input {</span></span>
<span class="line"><span>udp {</span></span>
<span class="line"><span>  port =&gt; 9250</span></span>
<span class="line"><span>  codec =&gt; json</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span> elasticsearch { hosts =&gt; [&quot;localhost:9200&quot;] }</span></span>
<span class="line"><span> stdout { codec =&gt; rubydebug }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多配置项可以参考：<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/current/plugins-inputs-udp.html</a></p><p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-udp.conf</code></p><p>java 应用配置：</p><p>（1）在 Java 应用的 pom.xml 中引入 jar 包：</p><p>与 <strong>TCP 应用</strong> 一节中的引入依赖包完全相同。</p><p>（2）接着，在 logback.xml 中添加 appender</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">appender</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ELK-UDP&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;net.logstash.logback.appender.LogstashSocketAppender&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;192.168.28.32&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;9250&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">appender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">logger</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;io.github.dunwu.spring&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> level</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;TRACE&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> additivity</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;false&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">appender-ref</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ELK-UDP&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">logger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）接下来，就是 logback 的具体使用 ，如果对此不了解，不妨参考一下我的这篇博文：<a href="https://github.com/dunwu/JavaStack/blob/master/docs/javalib/java-log.md" target="_blank" rel="noopener noreferrer">细说 Java 主流日志工具库</a> 。</p><p><strong>实例：</strong><a href="https://github.com/dunwu/JavaStack/blob/master/codes/javatool/src/main/resources/logback.xml" target="_blank" rel="noopener noreferrer">我的 logback.xml</a></p><h3 id="_5-3-传输文件" tabindex="-1"><a class="header-anchor" href="#_5-3-传输文件"><span>5.3. 传输文件</span></a></h3><blockquote><p>在 Java Web 领域，需要用到一些重要的工具，例如 Tomcat 、Nginx 、Mysql 等。这些不属于业务应用，但是它们的日志数据对于定位问题、分析统计同样很重要。这时无法使用 logback 方式将它们的日志传输到 logstash。</p><p>如何采集这些日志文件呢？别急，你可以使用 logstash 的 file input 插件。</p><p>需要注意的是，传输文件这种方式，必须在日志所在的机器上部署 logstash 。</p></blockquote><p><strong>应用</strong></p><p>logstash 配置</p><p>（1）创建 <code>logstash-input-file.conf</code> ：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>input {</span></span>
<span class="line"><span> file {</span></span>
<span class="line"><span>  path =&gt; [&quot;/var/log/nginx/access.log&quot;]</span></span>
<span class="line"><span>  type =&gt; &quot;nginx-access-log&quot;</span></span>
<span class="line"><span>  start_position =&gt; &quot;beginning&quot;</span></span>
<span class="line"><span> }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>output {</span></span>
<span class="line"><span> if [type] == &quot;nginx-access-log&quot; {</span></span>
<span class="line"><span>  elasticsearch {</span></span>
<span class="line"><span>   hosts =&gt; [&quot;localhost:9200&quot;]</span></span>
<span class="line"><span>   index =&gt; &quot;nginx-access-log&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span> }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）执行 logstash，使用 <code>-f</code> 来指定你的配置文件：<code>bin/logstash -f logstash-input-file.conf</code></p><p>更多配置项可以参考：<a href="https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html" target="_blank" rel="noopener noreferrer">https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html</a></p><h2 id="_6-小技巧" tabindex="-1"><a class="header-anchor" href="#_6-小技巧"><span>6. 小技巧</span></a></h2><h3 id="_6-1-启动、终止应用" tabindex="-1"><a class="header-anchor" href="#_6-1-启动、终止应用"><span>6.1. 启动、终止应用</span></a></h3><p>如果你的 logstash 每次都是通过指定配置文件方式启动。不妨建立一个启动脚本。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># cd xxx 进入 logstash 安装目录下的 bin 目录</span></span>
<span class="line"><span>logstash -f logstash.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的 logstash 运行在 linux 系统下，不妨使用 nohup 来启动一个守护进程。这样做的好处在于，即使关闭终端，应用仍会运行。</p><p>创建 <a href="http://startup.sh" target="_blank" rel="noopener noreferrer">startup.sh</a>：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>nohup ./logstash -f logstash.conf &gt;&gt; nohup.out 2&gt;&amp;1 &amp;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>终止应用没有什么好方法，你只能使用 ps -ef | grep logstash ，查出进程，将其 kill 。不过，我们可以写一个脚本来干这件事：</p><p>创建 <a href="http://shutdown.sh" target="_blank" rel="noopener noreferrer">shutdown.sh</a>：</p><p>脚本不多解释，请自行领会作用。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>PID=\`ps -ef | grep logstash | awk &#39;{ print $2}&#39; | head -n 1\`</span></span>
<span class="line"><span>kill -9 \${PID}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-参考资料" tabindex="-1"><a class="header-anchor" href="#_7-参考资料"><span>7. 参考资料</span></a></h2><ul><li><a href="https://www.elastic.co/cn/products/logstash" target="_blank" rel="noopener noreferrer">Logstash 官网</a></li><li><a href="https://github.com/elastic/logstash" target="_blank" rel="noopener noreferrer">Logstash Github</a></li><li><a href="https://www.elastic.co/guide/en/logstash/current/index.html" target="_blank" rel="noopener noreferrer">Logstash 官方文档</a></li><li><a href="https://github.com/logstash/logstash-logback-encoder" target="_blank" rel="noopener noreferrer">logstash-logback-encoder</a></li><li><a href="https://github.com/chenryn/logstash-best-practice-cn" target="_blank" rel="noopener noreferrer">ELK Stack 权威指南</a></li><li><a href="https://github.com/judasn/Linux-Tutorial/blob/master/ELK-Install-And-Settings.md" target="_blank" rel="noopener noreferrer">ELK（Elasticsearch、Logstash、Kibana）安装和配置</a></li></ul>`,140)]))}const d=i(t,[["render",l],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/pages/92df30/","title":"Logstash 运维","lang":"zh-CN","frontmatter":{"title":"Logstash 运维","date":"2020-06-16T07:10:44.000Z","order":7,"categories":["数据库","搜索引擎数据库","Elastic"],"tags":["数据库","搜索引擎数据库","Elastic","Logstash"],"permalink":"/pages/92df30/","description":"Logstash 运维 Logstash 是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。 1. 安装 1.1. 安装步骤 安装步骤如下： （1）在 logstash 官方下载地址下载所需版本包并解压到本地。 （2）添加一个 logstash.conf 文件，指定要使用的插件以及每个插件的设置...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/92df30/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Logstash 运维"}],["meta",{"property":"og:description","content":"Logstash 运维 Logstash 是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。 1. 安装 1.1. 安装步骤 安装步骤如下： （1）在 logstash 官方下载地址下载所需版本包并解压到本地。 （2）添加一个 logstash.conf 文件，指定要使用的插件以及每个插件的设置..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"http://upload-images.jianshu.io/upload_images/3101171-cd876d79a14955b0.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T02:31:38.000Z"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"搜索引擎数据库"}],["meta",{"property":"article:tag","content":"Elastic"}],["meta",{"property":"article:tag","content":"Logstash"}],["meta",{"property":"article:published_time","content":"2020-06-16T07:10:44.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T02:31:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Logstash 运维\\",\\"image\\":[\\"http://upload-images.jianshu.io/upload_images/3101171-cd876d79a14955b0.png\\"],\\"datePublished\\":\\"2020-06-16T07:10:44.000Z\\",\\"dateModified\\":\\"2025-02-18T02:31:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"1. 安装","slug":"_1-安装","link":"#_1-安装","children":[{"level":3,"title":"1.1. 安装步骤","slug":"_1-1-安装步骤","link":"#_1-1-安装步骤","children":[]}]},{"level":2,"title":"2. 配置","slug":"_2-配置","link":"#_2-配置","children":[{"level":3,"title":"2.1. 设置文件","slug":"_2-1-设置文件","link":"#_2-1-设置文件","children":[]},{"level":3,"title":"2.2. logstash.yml 设置项","slug":"_2-2-logstash-yml-设置项","link":"#_2-2-logstash-yml-设置项","children":[]}]},{"level":2,"title":"3. 启动","slug":"_3-启动","link":"#_3-启动","children":[{"level":3,"title":"3.1. 命令行","slug":"_3-1-命令行","link":"#_3-1-命令行","children":[]},{"level":3,"title":"3.2. 配置文件","slug":"_3-2-配置文件","link":"#_3-2-配置文件","children":[]}]},{"level":2,"title":"4. 插件","slug":"_4-插件","link":"#_4-插件","children":[{"level":3,"title":"4.1. input","slug":"_4-1-input","link":"#_4-1-input","children":[]},{"level":3,"title":"4.2. filter","slug":"_4-2-filter","link":"#_4-2-filter","children":[]},{"level":3,"title":"4.3. output","slug":"_4-3-output","link":"#_4-3-output","children":[]},{"level":3,"title":"4.4. codec","slug":"_4-4-codec","link":"#_4-4-codec","children":[]}]},{"level":2,"title":"5. 实战","slug":"_5-实战","link":"#_5-实战","children":[{"level":3,"title":"5.1. 传输控制台数据","slug":"_5-1-传输控制台数据","link":"#_5-1-传输控制台数据","children":[]},{"level":3,"title":"5.2. 传输 logback 日志","slug":"_5-2-传输-logback-日志","link":"#_5-2-传输-logback-日志","children":[]},{"level":3,"title":"5.3. 传输文件","slug":"_5-3-传输文件","link":"#_5-3-传输文件","children":[]}]},{"level":2,"title":"6. 小技巧","slug":"_6-小技巧","link":"#_6-小技巧","children":[{"level":3,"title":"6.1. 启动、终止应用","slug":"_6-1-启动、终止应用","link":"#_6-1-启动、终止应用","children":[]}]},{"level":2,"title":"7. 参考资料","slug":"_7-参考资料","link":"#_7-参考资料","children":[]}],"git":{"createdTime":1739845898000,"updatedTime":1739845898000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":11.62,"words":3487},"filePathRelative":"posts/02.database/07.搜索引擎数据库/02.Elastic/07.Logstash运维.md","localizedDate":"2020年6月16日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/elastic/logstash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Logstash</a> 是开源的服务器端数据处理管道，能够同时从多个来源采集数据，转换数据，然后将数据发送到您最喜欢的“存储库”中。</p>\\n</blockquote>\\n<h2>1. 安装</h2>\\n<h3>1.1. 安装步骤</h3>\\n<p>安装步骤如下：</p>\\n<p>（1）在 <a href=\\"https://www.elastic.co/downloads/logstash\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">logstash 官方下载地址</a>下载所需版本包并解压到本地。</p>","autoDesc":true}');export{d as comp,r as data};
