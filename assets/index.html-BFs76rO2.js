import{_ as a,c as i,e as t,b as s,d as l,f as n,h as r,r as E,o as d}from"./app-MqdbryXy.js";const p={},u={id:"分布式综合",tabindex:"-1"},B={class:"header-anchor",href:"#分布式综合"},g={id:"分布式理论",tabindex:"-1"},f={class:"header-anchor",href:"#分布式理论"},m={id:"分布式协同",tabindex:"-1"},C={class:"header-anchor",href:"#分布式协同"},b={id:"分布式调度",tabindex:"-1"},A={class:"header-anchor",href:"#分布式调度"},F={id:"分布式通信",tabindex:"-1"},k={class:"header-anchor",href:"#分布式通信"},h={id:"rpc",tabindex:"-1"},P={class:"header-anchor",href:"#rpc"},w={id:"rpc-综合",tabindex:"-1"},D={class:"header-anchor",href:"#rpc-综合"},S={id:"dubbo",tabindex:"-1"},y={class:"header-anchor",href:"#dubbo"},v={id:"mq",tabindex:"-1"},x={class:"header-anchor",href:"#mq"},R={id:"mq-综合",tabindex:"-1"},K={class:"header-anchor",href:"#mq-综合"},M={id:"kafka",tabindex:"-1"},T={class:"header-anchor",href:"#kafka"},Q={id:"rocketmq",tabindex:"-1"},z={class:"header-anchor",href:"#rocketmq"},Z={id:"分布式存储",tabindex:"-1"},L={class:"header-anchor",href:"#分布式存储"};function G(I,e){const o=E("RouteLink");return d(),i("div",null,[e[164]||(e[164]=t("h1",{id:"分布式",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分布式"},[t("span",null,"分布式")])],-1)),e[165]||(e[165]=t("blockquote",null,[t("p",null,"大型软件为了应对海量数据、高并发，一般都会被设计为分布式系统。"),t("p",null,"分布式系统需要解决很多不同领域的问题。")],-1)),e[166]||(e[166]=t("h2",{id:"📖-内容",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#📖-内容"},[t("span",null,"📖 内容")])],-1)),t("h3",u,[t("a",B,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/00.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BB%BC%E5%90%88/"},{default:n(()=>e[0]||(e[0]=[r("分布式综合")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/00.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BB%BC%E5%90%88/99.%E5%88%86%E5%B8%83%E5%BC%8F%E9%9D%A2%E8%AF%95.html"},{default:n(()=>e[1]||(e[1]=[r("分布式面试总结")])),_:1})])]),t("h3",g,[t("a",f,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/"},{default:n(()=>e[2]||(e[2]=[r("分布式理论")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%9F%BA%E7%A1%80%E7%90%86%E8%AE%BA.html"},{default:n(()=>e[3]||(e[3]=[r("分布式基础理论")])),_:1}),e[4]||(e[4]=r(" - 关键词：")),e[5]||(e[5]=t("code",null,"错误的分布式假设",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/02.%E9%80%BB%E8%BE%91%E6%97%B6%E9%92%9F.html"},{default:n(()=>e[6]||(e[6]=[r("逻辑时钟")])),_:1}),e[7]||(e[7]=r(" - 关键词：")),e[8]||(e[8]=t("code",null,"逻辑时钟",-1)),e[9]||(e[9]=r("、")),e[10]||(e[10]=t("code",null,"向量时钟",-1)),e[11]||(e[11]=r("、")),e[12]||(e[12]=t("code",null,"版本时钟",-1)),e[13]||(e[13]=r("、")),e[14]||(e[14]=t("code",null,"全序",-1)),e[15]||(e[15]=r("、")),e[16]||(e[16]=t("code",null,"偏序",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/03.CAP%E5%92%8CBASE.html"},{default:n(()=>e[17]||(e[17]=[r("CAP 和 BASE")])),_:1}),e[18]||(e[18]=r(" - 关键词：")),e[19]||(e[19]=t("code",null,"ACID",-1)),e[20]||(e[20]=r("、")),e[21]||(e[21]=t("code",null,"CAP",-1)),e[22]||(e[22]=r("、")),e[23]||(e[23]=t("code",null,"BASE",-1)),e[24]||(e[24]=r("、")),e[25]||(e[25]=t("code",null,"一致性",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/10.%E6%8B%9C%E5%8D%A0%E5%BA%AD%E5%B0%86%E5%86%9B%E9%97%AE%E9%A2%98.html"},{default:n(()=>e[26]||(e[26]=[r("拜占庭将军问题")])),_:1}),e[27]||(e[27]=r(" - 关键词：")),e[28]||(e[28]=t("code",null,"共识",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/11.Paxos%E7%AE%97%E6%B3%95.html"},{default:n(()=>e[29]||(e[29]=[r("分布式算法 Paxos")])),_:1}),e[30]||(e[30]=r(" - 关键词：")),e[31]||(e[31]=t("code",null,"共识",-1)),e[32]||(e[32]=r("、")),e[33]||(e[33]=t("code",null,"Paxos",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/12.Raft%E7%AE%97%E6%B3%95.html"},{default:n(()=>e[34]||(e[34]=[r("分布式算法 Raft")])),_:1}),e[35]||(e[35]=r(" - 关键词：")),e[36]||(e[36]=t("code",null,"共识",-1)),e[37]||(e[37]=r("、")),e[38]||(e[38]=t("code",null,"Raft",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/13.Gossip%E7%AE%97%E6%B3%95.html"},{default:n(()=>e[39]||(e[39]=[r("分布式算法 Gossip")])),_:1}),e[40]||(e[40]=r(" - 关键词：")),e[41]||(e[41]=t("code",null,"Gossip",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%90%86%E8%AE%BA/14.Zab%E5%8D%8F%E8%AE%AE.html"},{default:n(()=>e[42]||(e[42]=[r("ZAB 协议")])),_:1}),e[43]||(e[43]=r(" - 关键词：")),e[44]||(e[44]=t("code",null,"共识",-1)),e[45]||(e[45]=r("、")),e[46]||(e[46]=t("code",null,"ZAB",-1)),e[47]||(e[47]=r("、")),e[48]||(e[48]=t("code",null,"ZooKeeper",-1))])]),t("h3",m,[t("a",C,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/"},{default:n(()=>e[49]||(e[49]=[r("分布式协同")])),_:1})])])]),t("ul",null,[t("li",null,[e[72]||(e[72]=t("strong",null,"分布式协同综合",-1)),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C%E7%BB%BC%E5%90%88/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%A4%8D%E5%88%B6.html"},{default:n(()=>e[50]||(e[50]=[r("分布式复制")])),_:1}),e[51]||(e[51]=r(" - 关键词：")),e[52]||(e[52]=t("code",null,"主从",-1)),e[53]||(e[53]=r("、")),e[54]||(e[54]=t("code",null,"多主",-1)),e[55]||(e[55]=r("、")),e[56]||(e[56]=t("code",null,"无主",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C%E7%BB%BC%E5%90%88/02.%E5%88%86%E5%B8%83%E5%BC%8F%E5%88%86%E5%8C%BA.html"},{default:n(()=>e[57]||(e[57]=[r("分布式分区")])),_:1}),e[58]||(e[58]=r(" - 关键词：")),e[59]||(e[59]=t("code",null,"分区再均衡",-1)),e[60]||(e[60]=r("、")),e[61]||(e[61]=t("code",null,"路由",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C%E7%BB%BC%E5%90%88/04.%E5%88%86%E5%B8%83%E5%BC%8F%E5%85%B1%E8%AF%86.html"},{default:n(()=>e[62]||(e[62]=[r("分布式共识")])),_:1}),e[63]||(e[63]=r(" - 关键词：")),e[64]||(e[64]=t("code",null,"共识",-1)),e[65]||(e[65]=r("、")),e[66]||(e[66]=t("code",null,"广播",-1)),e[67]||(e[67]=r("、")),e[68]||(e[68]=t("code",null,"epoch",-1)),e[69]||(e[69]=r("、")),e[70]||(e[70]=t("code",null,"quorum",-1))]),e[71]||(e[71]=s('<li><a href="11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C%E7%BB%BC%E5%90%88/05.%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1">分布式事务</a> - 关键词：<code>2PC</code>、<code>3PC</code>、<code>TCC</code>、<code>本地消息表</code>、<code>消息事务</code>、<code>SAGA</code></li><li><a href="11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/01.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C%E7%BB%BC%E5%90%88/06.%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81">分布式锁</a> - 关键词：<code>互斥</code>、<code>可重入</code>、<code>死锁</code>、<code>容错</code>、<code>自旋尝试</code>、<code>公平性</code></li>',2))])]),t("li",null,[e[78]||(e[78]=t("strong",null,"ZooKeeper",-1)),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/01.ZooKeeper%E5%8E%9F%E7%90%86.html"},{default:n(()=>e[73]||(e[73]=[r("ZooKeeper 原理")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/02.ZooKeeperJavaApi.html"},{default:n(()=>e[74]||(e[74]=[r("ZooKeeper Java Api")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/03.ZooKeeper%E5%91%BD%E4%BB%A4.html"},{default:n(()=>e[75]||(e[75]=[r("ZooKeeper 命令")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/04.ZooKeeper%E8%BF%90%E7%BB%B4.html"},{default:n(()=>e[76]||(e[76]=[r("ZooKeeper 运维")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/05.ZooKeeperAcl.html"},{default:n(()=>e[77]||(e[77]=[r("ZooKeeper Acl")])),_:1})])])])]),t("h3",b,[t("a",A,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/12.%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6/"},{default:n(()=>e[79]||(e[79]=[r("分布式调度")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/12.%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6/03.%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6.html"},{default:n(()=>e[80]||(e[80]=[r("流量控制")])),_:1}),e[81]||(e[81]=s(" - 关键词：<code>限流</code>、<code>熔断</code>、<code>降级</code>、<code>计数器法</code>、<code>时间窗口法</code>、<code>令牌桶法</code>、<code>漏桶法</code>",14))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/12.%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6/02.%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1.html"},{default:n(()=>e[82]||(e[82]=[r("负载均衡")])),_:1}),e[83]||(e[83]=r(" - 关键词：")),e[84]||(e[84]=t("code",null,"轮询",-1)),e[85]||(e[85]=r("、")),e[86]||(e[86]=t("code",null,"随机",-1)),e[87]||(e[87]=r("、")),e[88]||(e[88]=t("code",null,"最少连接",-1)),e[89]||(e[89]=r("、")),e[90]||(e[90]=t("code",null,"源地址哈希",-1)),e[91]||(e[91]=r("、")),e[92]||(e[92]=t("code",null,"一致性哈希",-1)),e[93]||(e[93]=r("、")),e[94]||(e[94]=t("code",null,"虚拟 hash 槽",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/12.%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6/01.%E6%9C%8D%E5%8A%A1%E8%B7%AF%E7%94%B1.html"},{default:n(()=>e[95]||(e[95]=[r("服务路由")])),_:1}),e[96]||(e[96]=r(" - 关键词：")),e[97]||(e[97]=t("code",null,"路由",-1)),e[98]||(e[98]=r("、")),e[99]||(e[99]=t("code",null,"条件路由",-1)),e[100]||(e[100]=r("、")),e[101]||(e[101]=t("code",null,"脚本路由",-1)),e[102]||(e[102]=r("、")),e[103]||(e[103]=t("code",null,"标签路由",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/12.%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6/10.%E5%88%86%E5%B8%83%E5%BC%8F%E4%BC%9A%E8%AF%9D.html"},{default:n(()=>e[104]||(e[104]=[r("分布式会话")])),_:1}),e[105]||(e[105]=r(" - 关键词：")),e[106]||(e[106]=t("code",null,"粘性 Session",-1)),e[107]||(e[107]=r("、")),e[108]||(e[108]=t("code",null,"Session 复制共享",-1)),e[109]||(e[109]=r("、")),e[110]||(e[110]=t("code",null,"基于缓存的 session 共享",-1))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/12.%E5%88%86%E5%B8%83%E5%BC%8F%E8%B0%83%E5%BA%A6/04.%E5%88%86%E5%B8%83%E5%BC%8FID.html"},{default:n(()=>e[111]||(e[111]=[r("分布式 ID")])),_:1}),e[112]||(e[112]=r(" - 关键词：")),e[113]||(e[113]=t("code",null,"UUID",-1)),e[114]||(e[114]=r("、")),e[115]||(e[115]=t("code",null,"自增序列",-1)),e[116]||(e[116]=r("、")),e[117]||(e[117]=t("code",null,"雪花算法",-1)),e[118]||(e[118]=r("、")),e[119]||(e[119]=t("code",null,"Leaf",-1))])]),e[167]||(e[167]=t("h3",{id:"分布式高可用",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#分布式高可用"},[t("span",null,"分布式高可用")])],-1)),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/13.%E5%88%86%E5%B8%83%E5%BC%8F%E9%AB%98%E5%8F%AF%E7%94%A8/02.%E6%9C%8D%E5%8A%A1%E5%AE%B9%E9%94%99.html"},{default:n(()=>e[120]||(e[120]=[r("服务容错")])),_:1})])]),t("h3",F,[t("a",k,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/"},{default:n(()=>e[121]||(e[121]=[r("分布式通信")])),_:1})])])]),t("h4",h,[t("a",P,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/"},{default:n(()=>e[122]||(e[122]=[r("RPC")])),_:1})])])]),t("h5",w,[t("a",D,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/00.RPC%E7%BB%BC%E5%90%88/"},{default:n(()=>e[123]||(e[123]=[r("RPC 综合")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/00.RPC%E7%BB%BC%E5%90%88/01.RPC%E5%9F%BA%E7%A1%80.html"},{default:n(()=>e[124]||(e[124]=[r("RPC 基础")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/00.RPC%E7%BB%BC%E5%90%88/02.RPC%E8%BF%9B%E9%98%B6.html"},{default:n(()=>e[125]||(e[125]=[r("RPC 进阶")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/00.RPC%E7%BB%BC%E5%90%88/03.RPC%E9%AB%98%E7%BA%A7.html"},{default:n(()=>e[126]||(e[126]=[r("RPC 高级")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/00.RPC%E7%BB%BC%E5%90%88/11.%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0.html"},{default:n(()=>e[127]||(e[127]=[r("服务注册和发现")])),_:1})])]),t("h5",S,[t("a",y,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/01.RPC/01.Dubbo/"},{default:n(()=>e[128]||(e[128]=[r("Dubbo")])),_:1})])])]),t("h4",v,[t("a",x,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/"},{default:n(()=>e[129]||(e[129]=[r("MQ")])),_:1})])])]),t("h5",R,[t("a",K,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/00.MQ%E7%BB%BC%E5%90%88/"},{default:n(()=>e[130]||(e[130]=[r("MQ 综合")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/00.MQ%E7%BB%BC%E5%90%88/01.%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E9%9D%A2%E8%AF%95.html"},{default:n(()=>e[131]||(e[131]=[r("消息队列面试")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/00.MQ%E7%BB%BC%E5%90%88/02.%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.html"},{default:n(()=>e[132]||(e[132]=[r("消息队列基本原理")])),_:1})])]),t("h5",M,[t("a",T,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/"},{default:n(()=>e[133]||(e[133]=[r("Kafka")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/01.Kafka%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html"},{default:n(()=>e[134]||(e[134]=[r("Kafka 快速入门")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/02.Kafka%E7%94%9F%E4%BA%A7%E8%80%85.html"},{default:n(()=>e[135]||(e[135]=[r("Kafka 生产者")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/03.Kafka%E6%B6%88%E8%B4%B9%E8%80%85.html"},{default:n(()=>e[136]||(e[136]=[r("Kafka 消费者")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/04.Kafka%E9%9B%86%E7%BE%A4.html"},{default:n(()=>e[137]||(e[137]=[r("Kafka 集群")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/05.Kafka%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93.html"},{default:n(()=>e[138]||(e[138]=[r("Kafka 可靠传输")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/06.Kafka%E5%AD%98%E5%82%A8.html"},{default:n(()=>e[139]||(e[139]=[r("Kafka 存储")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/07.Kafka%E6%B5%81%E5%BC%8F%E5%A4%84%E7%90%86.html"},{default:n(()=>e[140]||(e[140]=[r("Kafka 流式处理")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/01.Kafka/08.Kafka%E8%BF%90%E7%BB%B4.html"},{default:n(()=>e[141]||(e[141]=[r("Kafka 运维")])),_:1})])]),t("h5",Q,[t("a",z,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/02.RocketMQ/"},{default:n(()=>e[142]||(e[142]=[r("RocketMQ")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/02.RocketMQ/01.RocketMQ%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html"},{default:n(()=>e[143]||(e[143]=[r("RocketMQ 快速入门")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/02.RocketMQ/02.RocketMQ%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.html"},{default:n(()=>e[144]||(e[144]=[r("RocketMQ 基本原理")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/02.RocketMQ/99.RocketMQFaq.html"},{default:n(()=>e[145]||(e[145]=[r("RocketMQ Faq")])),_:1})])]),e[168]||(e[168]=t("h5",{id:"其他-mq",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#其他-mq"},[t("span",null,"其他 MQ")])],-1)),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/21.%E5%88%86%E5%B8%83%E5%BC%8F%E9%80%9A%E4%BF%A1/02.MQ/99.%E5%85%B6%E4%BB%96MQ/01.ActiveMQ.html"},{default:n(()=>e[146]||(e[146]=[r("ActiveMQ")])),_:1})])]),t("h3",Z,[t("a",L,[t("span",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/22.%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/"},{default:n(()=>e[147]||(e[147]=[r("分布式存储")])),_:1})])])]),t("ul",null,[t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/22.%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/01.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%93%E5%AD%98.html"},{default:n(()=>e[148]||(e[148]=[r("分布式缓存")])),_:1}),e[149]||(e[149]=s(" - 关键词：<code>进程内缓存</code>、<code>分布式缓存</code>、<code>缓存雪崩</code>、<code>缓存穿透</code>、<code>缓存击穿</code>、<code>缓存更新</code>、<code>缓存预热</code>、<code>缓存降级</code>",16))]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/22.%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/02.%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB.html"},{default:n(()=>e[150]||(e[150]=[r("读写分离")])),_:1})]),t("li",null,[l(o,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/22.%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8/03.%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html"},{default:n(()=>e[151]||(e[151]=[r("分库分表")])),_:1}),e[152]||(e[152]=r(" - 关键词：")),e[153]||(e[153]=t("code",null,"分片",-1)),e[154]||(e[154]=r("、")),e[155]||(e[155]=t("code",null,"路由",-1)),e[156]||(e[156]=r("、")),e[157]||(e[157]=t("code",null,"迁移",-1)),e[158]||(e[158]=r("、")),e[159]||(e[159]=t("code",null,"扩容",-1)),e[160]||(e[160]=r("、")),e[161]||(e[161]=t("code",null,"双写",-1)),e[162]||(e[162]=r("、")),e[163]||(e[163]=t("code",null,"聚合",-1))])]),e[169]||(e[169]=s('<h2 id="📚-资料" tabindex="-1"><a class="header-anchor" href="#📚-资料"><span>📚 资料</span></a></h2><h3 id="分布式理论资料" tabindex="-1"><a class="header-anchor" href="#分布式理论资料"><span>分布式理论资料</span></a></h3><h4 id="分布式理论综合资料" tabindex="-1"><a class="header-anchor" href="#分布式理论综合资料"><span>分布式理论综合资料</span></a></h4><ul><li><strong>教程</strong><ul><li><a href="https://pdos.csail.mit.edu/6.824/index.html" target="_blank" rel="noopener noreferrer"><strong>MIT-6.824</strong></a> - 麻省理工分布式系统课程</li><li><a href="http://www.cs.cmu.edu/~dga/15-440/S14/" target="_blank" rel="noopener noreferrer"><strong>CMU-15-440</strong></a> - 卡内基梅隆分布式系统课程</li><li><a href="https://www.scs.stanford.edu/14au-cs244b/" target="_blank" rel="noopener noreferrer"><strong>Standford-CS244b</strong></a> - 斯坦福分布式系统课程</li><li><a href="https://people.eecs.berkeley.edu/~alig/cs294-91/" target="_blank" rel="noopener noreferrer"><strong>UC Berkley-CS294-91</strong></a>- 伯克利分布式计算课程</li><li><a href="https://time.geekbang.org/column/intro/100036401" target="_blank" rel="noopener noreferrer"><strong>分布式技术原理与算法解析</strong></a> - 极客时间教程</li><li><a href="https://time.geekbang.org/column/intro/100046101" target="_blank" rel="noopener noreferrer"><strong>分布式协议与算法实战</strong></a> - 极客时间教程</li></ul></li><li><strong>书籍</strong><ul><li><a href="https://book.douban.com/subject/11691266/" target="_blank" rel="noopener noreferrer"><strong>分布式系统原理与范型</strong></a>：书原名 Distributed Systems Principles and Paradigms。经典分布式教程，介绍了分布式系统的七大核心原理，并给出了大量的例子；系统讲述了分布式系统的概念和技术，包括通信、进程、命名、同步化、一致性和复制、容错以及安全等。</li></ul></li><li><strong>文章</strong><ul><li><a href="https://dl.acm.org/doi/pdf/10.1145/365559.365617" target="_blank" rel="noopener noreferrer"><strong>Solution of a Problem in Concurrent Programming Control</strong></a>，<a href="http://duanple.com/?p=1022" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a> - Dijkstra 首次提出并解决了互斥执行问题</li><li><a href="https://lamport.azurewebsites.net/pubs/time-clocks.pdf" target="_blank" rel="noopener noreferrer"><strong>Time, Clocks, and the Ordering of Events in a Distributed System</strong></a>，<a href="https://cloud.tencent.com/developer/article/1163428" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a>，<a href="https://zhuanlan.zhihu.com/p/56146800" target="_blank" rel="noopener noreferrer"><strong>解读</strong></a> - Lamport 介绍 happened before、偏序关系（partial ordering）、逻辑时钟（Logical Clocks）概念，提出解决分布式系统中区分事件发生的时序问题的方法。</li><li><a href="http://courses.csail.mit.edu/6.852/01/papers/VirtTime_GlobState.pdf" target="_blank" rel="noopener noreferrer"><strong>Virtual Time and Global States of Distributed Systems</strong></a>，<a href="https://zhuanlan.zhihu.com/p/56886156" target="_blank" rel="noopener noreferrer"><strong>解读</strong></a> - 逻辑时钟无法描述事件的因果关系。本文提出了向量时钟，这种算法利用了向量这种数据结构将全局各个进程的逻辑时间戳广播给各个进程，通过向量时间戳就能够比较任意两个事件的因果关系。</li><li><a href="https://www.comp.nus.edu.sg/~gilbert/pubs/BrewersConjecture-SigAct.pdf" target="_blank" rel="noopener noreferrer"><strong>Brewer’s Conjecture and the Feasibility of Consistent, Available, Partition-Tolerant Web Services</strong></a>，<a href="https://juejin.cn/post/6844903936718012430" target="_blank" rel="noopener noreferrer"><strong>解读</strong></a> - 经典的 CAP 理论，即：在一个分布式系统中，当发生网络分区时，那么强一致性和可用性只能二选一。</li><li><a href="https://www.infoq.com/articles/cap-twelve-years-later-how-the-rules-have-changed/" target="_blank" rel="noopener noreferrer"><strong>CAP Twelve Years Later: How the “Rules” Have Changed</strong></a> - CAP 理论的新解读，并阐述 CAP 理论的一些常见误区。</li><li><a href="https://www.semanticscholar.org/paper/BASE%3A-An-Acid-Alternative-Pritchett/2e72e6c022dd33115304ecfcb6dad7ea609534a4" target="_blank" rel="noopener noreferrer"><strong>BASE: An Acid Alternative</strong></a>，<a href="https://www.cnblogs.com/savorboard/p/base-an-acid-alternative.html" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a> - BASE 理论是对 CAP 中一致性和可用性的权衡，提出采用适当的方式来使系统达到最终一致性。</li><li><a href="https://diyhpl.us/~bryan/papers2/distributed/distributed-systems/zab.totally-ordered-broadcast-protocol.2008.pdf" target="_blank" rel="noopener noreferrer"><strong>A Simple Totally Ordered Broadcast Protocol</strong></a> - 概述 ZooKeeper 的全序广播协议（Zab）</li><li><a href="https://web.archive.org/web/20171107014323/http://blog.fogcreek.com/eight-fallacies-of-distributed-computing-tech-talk/" target="_blank" rel="noopener noreferrer"><strong>The Eight Fallacies of Distributed Computing - Tech Talk</strong></a> - 分布式系统新手常犯的 8 个错误，并探讨了其会带来的影响。</li><li><a href="http://book.mixu.net/distsys/" target="_blank" rel="noopener noreferrer"><strong>Distributed Systems for Fun and Profit</strong></a> - 一本学习小册，涵盖了分布式系统中的关键问题，包括时间的作用和不同的复制策略。</li><li><a href="https://scholar.harvard.edu/files/waldo/files/waldo-94.pdf" target="_blank" rel="noopener noreferrer"><strong>A Note on Distributed System</strong>s</a> - 这是一篇经典的论文，讲述了为什么在分布式系统中，远程交互不能像本地对象那样进行。</li><li><a href="https://zhuanlan.zhihu.com/p/338161857" target="_blank" rel="noopener noreferrer"><strong>深度探索分布式理论经典论文</strong></a> - 分布式理论论文的导读文章</li><li><a href="http://book.mixu.net/distsys/single-page.html" target="_blank" rel="noopener noreferrer"><strong>Distributed Systems for fun and profit</strong></a>：分为五章，讲述了扩展性、可用性、性能和容错等基础知识，FLP 不可能性和 CAP 定理，探讨了大量的一致性模型；讨论了时间和顺序，及时钟的各种用法。随后，探讨了复制问题，如何防止差异，以及如何接受差异。此外，每章末尾都给出了针对本章内容的扩展阅读资源列表，这些资料是对本书内容的很好补充。</li><li><a href="https://github.com/aphyr/distsys-class" target="_blank" rel="noopener noreferrer"><strong>An introduction to distributed systems</strong></a> - 这是一份分布式系统的提纲挈领的介绍，几乎涵盖了所有知识点，并辅以简洁并切中要害的说明文字，适合初学者了解知识全貌，快速与现有知识结合，形成知识体系。</li></ul></li></ul><h4 id="分布式算法资料" tabindex="-1"><a class="header-anchor" href="#分布式算法资料"><span>分布式算法资料</span></a></h4><ul><li><strong>视频</strong><ul><li><a href="https://www.bilibili.com/video/av78588312/" target="_blank" rel="noopener noreferrer"><strong>拜占庭将军问题视频讲解</strong></a> - 李永乐老师通俗讲解拜占庭问题</li><li><a href="https://www.youtube.com/watch?v=d7nAGI_NZPk" target="_blank" rel="noopener noreferrer"><strong>Paxos 算法讲解视频</strong></a></li><li><a href="https://www.bilibili.com/video/av36556594" target="_blank" rel="noopener noreferrer"><strong>Raft 作者讲解 Paxos 视频</strong></a></li><li><a href="https://www.youtube.com/watch?v=YbZ3zDzDnrw&amp;feature=youtu.be" target="_blank" rel="noopener noreferrer"><strong>Raft 作者讲解视频</strong></a></li><li><a href="http://www2.cs.uh.edu/~paris/6360/PowerPoint/Raft.ppt" target="_blank" rel="noopener noreferrer"><strong>Raft 作者讲解视频对应的 PPT</strong></a></li><li><a href="https://www.bilibili.com/video/BV1TW411M7Fx?from=search&amp;seid=11524608198747599965" target="_blank" rel="noopener noreferrer"><strong>一致性算法（Paxos、Raft、Zab）</strong></a></li></ul></li><li><strong>动画</strong><ul><li><a href="http://thesecretlivesofdata.com/raft" target="_blank" rel="noopener noreferrer"><strong>Raft: Understandable Distributed Consensus</strong></a> - 分布式一致性算法 Raft 的动画教程</li><li><a href="https://raft.github.io/" target="_blank" rel="noopener noreferrer"><strong>The Raft Consensus Algorithm</strong></a> - 分布式一致性算法 Raft 的交互式动画教程</li><li><a href="https://flopezluis.github.io/gossip-simulator/" target="_blank" rel="noopener noreferrer"><strong>Goosip 协议仿真动画</strong></a></li></ul></li><li><strong>文章</strong><ul><li><a href="https://lamport.azurewebsites.net/pubs/byz.pdf" target="_blank" rel="noopener noreferrer"><strong>The Byzantine Generals Problem</strong></a> - Lamport 提出拜占庭将军问题——一种解决分布式系统一致性问题的理论。</li><li><a href="https://lamport.azurewebsites.net/pubs/lamport-paxos.pdf" target="_blank" rel="noopener noreferrer"><strong>The Part-Time Parliament</strong></a> - Lamport 提出分布式一致性算法 Paxos。</li><li><a href="https://lamport.azurewebsites.net/pubs/paxos-simple.pdf" target="_blank" rel="noopener noreferrer"><strong>Paxos Made Simple</strong></a>，<a href="http://duanple.com/?p=166" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a>，<a href="https://zhuanlan.zhihu.com/p/31780743" target="_blank" rel="noopener noreferrer"><strong>解读</strong></a> - Lamport 重新阐述 Paxos。</li><li><a href="https://www.cs.utexas.edu/users/lorenzo/corsi/cs380d/papers/paper2-1.pdf" target="_blank" rel="noopener noreferrer"><strong>Paxos Made Live: An Engineering Perspective</strong></a>，<a href="https://blog.mrcroxx.com/posts/paper-reading/paxos-made-live/" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a> - 讲述了 Google 在最初实现 Paxos 碰到的一系列问题及解决方案。</li><li><a href="http://bwl-website.s3-website.us-east-2.amazonaws.com/58-Consensus/Acrobat.pdf" target="_blank" rel="noopener noreferrer"><strong>How to Build a Highly Availability System using Consensus</strong></a>，<a href="http://duanple.com/?p=63" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a> - 以 Paxos 为实例，讲述了如何描述、解决、理解、证明分布式算法。</li><li><a href="https://arxiv.org/pdf/1103.2408" target="_blank" rel="noopener noreferrer"><strong>Using Paxos to Build a Scalable, Consistent, and Highly Available Datastore</strong></a> - 讲述了 LinkedIn 是如何利用 Paxos 和 ZooKeeper 构建一个名为 Spinnaker 的 KV 数据库。</li><li><a href="https://ramcloud.atlassian.net/wiki/download/attachments/6586375/raft.pdf" target="_blank" rel="noopener noreferrer"><strong>Raft: In Search of an Understandable Consensus Algorithm</strong></a>，<a href="https://github.com/maemual/raft-zh_cn/blob/master/raft-zh_cn.md" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a>，<a href="https://zhuanlan.zhihu.com/p/32052223" target="_blank" rel="noopener noreferrer"><strong>解读</strong></a> - 分布式一致性算法 Raft</li><li><a href="https://betathoughts.blogspot.com/2007/06/brief-history-of-consensus-2pc-and.html" target="_blank" rel="noopener noreferrer"><strong>A Brief History of Consensus, 2PC and Transaction Commit</strong></a> - 一致性, 两阶段提交和事务提交的发展史</li><li><a href="https://dl.acm.org/doi/pdf/10.1145/42282.42283" target="_blank" rel="noopener noreferrer"><strong>Consensus in the Presence of Partial Synchrony</strong></a> - 部分同步的一致性</li><li><a href="http://bitsavers.trailing-edge.com/pdf/xerox/parc/techReports/CSL-89-1_Epidemic_Algorithms_for_Replicated_Database_Maintenance.pdf" target="_blank" rel="noopener noreferrer"><strong>Epidemic Algorithms for Replicated Database Maintenance</strong></a>，<a href="https://zhuanlan.zhihu.com/p/41228196" target="_blank" rel="noopener noreferrer"><strong>解读</strong></a> - 论文提出 Gossip 协议及应用</li><li><a href="https://managementfromscratch.wordpress.com/2016/04/01/introduction-to-gossip/" target="_blank" rel="noopener noreferrer"><strong>INTRODUCTION TO GOSSIP</strong></a> - Gossip 协议介绍</li></ul></li><li><strong>工具</strong><ul><li><a href="https://github.com/sofastack/sofa-jraft" target="_blank" rel="noopener noreferrer">sofa-jraft</a> - 蚂蚁金服的 Raft 算法实现库（Java 版）</li></ul></li></ul><h3 id="分布式通信资料" tabindex="-1"><a class="header-anchor" href="#分布式通信资料"><span>分布式通信资料</span></a></h3><h4 id="rpc-资料" tabindex="-1"><a class="header-anchor" href="#rpc-资料"><span>RPC 资料</span></a></h4><ul><li><a href="https://time.geekbang.org/column/intro/100046201" target="_blank" rel="noopener noreferrer"><strong>RPC 实战与核心原理</strong></a> - 极客时间教程</li></ul><h4 id="mq-资料" tabindex="-1"><a class="header-anchor" href="#mq-资料"><span>MQ 资料</span></a></h4><ul><li><strong>教程</strong><ul><li><a href="https://time.geekbang.org/column/intro/100032301" target="_blank" rel="noopener noreferrer"><strong>消息队列高手课</strong></a></li><li><a href="https://github.com/apachecn/kafka-doc-zh" target="_blank" rel="noopener noreferrer"><strong>Kafka 中文文档</strong></a></li><li><a href="https://time.geekbang.org/column/intro/100029201" target="_blank" rel="noopener noreferrer"><strong>Kafka 核心技术与实战</strong></a> - 极客时间教程</li><li><a href="https://time.geekbang.org/column/intro/304" target="_blank" rel="noopener noreferrer"><strong>Kafka 核心源码解读</strong></a> - 极客时间教程</li></ul></li><li><strong>文章</strong><ul><li><a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying" target="_blank" rel="noopener noreferrer"><strong>The Log: What every software engineer should know about real-time data’s unifying abstraction</strong></a>，<a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a></li><li><a href="https://www.slideshare.net/mumrah/kafka-talk-tri-hug" target="_blank" rel="noopener noreferrer"><strong>Introduction and Overview of Apache Kafka</strong></a> - Kafka 简介 PPT</li></ul></li><li><strong>官方</strong><ul><li><a href="http://kafka.apache.org/" target="_blank" rel="noopener noreferrer">Kafka 官网</a></li><li><a href="https://github.com/apache/kafka" target="_blank" rel="noopener noreferrer">Kafka Github</a></li><li><a href="https://kafka.apache.org/documentation/" target="_blank" rel="noopener noreferrer">Kafka 官方文档</a></li><li><a href="http://kafka.apache.org/" target="_blank" rel="noopener noreferrer">Kafka Confluent 官网</a></li><li><a href="https://issues.apache.org/jira/projects/KAFKA?selectedItem=com.atlassian.jira.jira-projects-plugin:components-page" target="_blank" rel="noopener noreferrer">Kafka Jira</a></li></ul></li><li><strong>书籍</strong><ul><li><a href="https://item.jd.com/12270295.html" target="_blank" rel="noopener noreferrer">《Kafka 权威指南》</a></li><li><a href="https://item.jd.com/12489649.html" target="_blank" rel="noopener noreferrer">《深入理解 Kafka：核心设计与实践原理》</a></li><li><a href="https://item.jd.com/12234113.html" target="_blank" rel="noopener noreferrer">《Kafka 技术内幕》</a></li></ul></li></ul><h3 id="分布式存储资料" tabindex="-1"><a class="header-anchor" href="#分布式存储资料"><span>分布式存储资料</span></a></h3><ul><li><strong>书籍</strong><ul><li><a href="https://book.douban.com/subject/30329536/" target="_blank" rel="noopener noreferrer"><strong>数据密集型应用系统设计</strong></a> - 这可能是目前最好的分布式存储书籍，强力推荐【进阶】</li></ul></li><li><strong>文章</strong><ul><li>Chord: A Scalable Peer-to-Peer Lookup Service for Internet Applications</li><li>Pastry: Scalable, Distributed Object Location, and Routing for Large-Scale Peerto-Peer Systems</li><li>Kademlia: A Peer-to-Peer Information System Based on the XOR Metric</li><li>A Scalable Content-Addressable Network</li><li>Ceph: A Scalable, High-Performance Distributed File System</li><li><a href="https://www.cs.umb.edu/~poneil/lsmtree.pdf" target="_blank" rel="noopener noreferrer"><strong>The Log-Structured-Merge-Tree</strong></a>，<a href="https://cloud.tencent.com/developer/article/2057367" target="_blank" rel="noopener noreferrer"><strong>译文</strong></a> - LSM 树被广泛应用于 HBase、RocksDB 等 Nosql 数据库。这篇论文详细介绍了 LSM 树的特性和原理。</li><li><a href="https://www.researchgate.net/publication/317399857_HBase_A_NoSQL_Database" target="_blank" rel="noopener noreferrer"><strong>HBase: A NoSQL Database</strong></a></li><li>Tango: Distributed Data Structure over a Shared Log</li></ul></li></ul><h3 id="分布式系统架构资料" tabindex="-1"><a class="header-anchor" href="#分布式系统架构资料"><span>分布式系统架构资料</span></a></h3><ul><li><a href="https://static.googleusercontent.com/media/research.google.com/en//archive/gfs-sosp2003.pdf" target="_blank" rel="noopener noreferrer"><strong>The Google File System</strong></a> - Google 三驾马车之 GFS</li><li><a href="https://static.googleusercontent.com/media/research.google.com/en//archive/bigtable-osdi06.pdf" target="_blank" rel="noopener noreferrer"><strong>Bigtable: A Distributed Storage System for Structured Data</strong></a> - Google 三驾马车之 BigTable</li><li><a href="https://static.googleusercontent.com/media/research.google.com/en//archive/mapreduce-osdi04.pdf" target="_blank" rel="noopener noreferrer"><strong>MapReduce: Simplifed Data Processing on Large Clusters</strong></a> - Google 三驾马车之 MapReduce</li><li>The Chubby Lock Service for Loosely-Coupled Distributed Systems</li><li>Finding a Needle in Haystack: Facebook’s Photo Storage</li><li>Windows Azure Storage: A Highly Available Cloud Storage Service with Strong Consistency</li><li>Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing</li><li>Scaling Distributed Machine Learning with the Parameter Server</li><li>Dremel: Interactive Analysis of Web-Scale Datasets</li><li>Pregel: A System for Large-Scale Graph Processing</li><li>Spanner: Google’s Globally-Distributed Database</li><li>Dynamo: Amazon’s Highly Available Key-value Store</li><li>S4: Distributed Stream Computing Platform</li><li>Storm @Twitter</li><li>Large-scale Cluster Management at Google with Borg</li><li>F1 - The Fault-Tolerant Distributed RDBMS Supporting Google’s Ad Business</li><li>Cassandra: A Decentralized Structured Storage System</li><li>MegaStore: Providing Scalable, Highly Available Storage for Interactive Services</li><li>Dapper, a Large-Scale Distributed Systems Tracing Infrastructure</li><li>Kafka: A distributed Messaging System for Log Processing</li><li>Amazon Aurora: Design Considerations for High Throughput Cloud-Native Relational Databases</li></ul><h2 id="🚪-传送" tabindex="-1"><a class="header-anchor" href="#🚪-传送"><span>🚪 传送</span></a></h2><p>◾ 💧 <a href="https://dunwu.github.io/waterdrop/" target="_blank" rel="noopener noreferrer">钝悟的 IT 知识图谱</a> ◾</p>',17))])}const j=a(p,[["render",G],["__file","index.html.vue"]]),N=JSON.parse('{"path":"/pages/f21e8c/","title":"分布式","lang":"zh-CN","frontmatter":{"title":"分布式","date":"2019-03-08T13:16:53.000Z","categories":["分布式"],"tags":["分布式"],"permalink":"/pages/f21e8c/","hidden":true,"index":false,"description":"分布式 大型软件为了应对海量数据、高并发，一般都会被设计为分布式系统。 分布式系统需要解决很多不同领域的问题。 📖 内容 - 关键词：错误的分布式假设 - 关键词：逻辑时钟、向量时钟、版本时钟、全序、偏序 - 关键词：ACID、CAP、BASE、一致性 - 关键词：共识 - 关键词：共识、Paxos - 关键词：共识、Raft - 关键词：Gossi...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/f21e8c/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"分布式"}],["meta",{"property":"og:description","content":"分布式 大型软件为了应对海量数据、高并发，一般都会被设计为分布式系统。 分布式系统需要解决很多不同领域的问题。 📖 内容 - 关键词：错误的分布式假设 - 关键词：逻辑时钟、向量时钟、版本时钟、全序、偏序 - 关键词：ACID、CAP、BASE、一致性 - 关键词：共识 - 关键词：共识、Paxos - 关键词：共识、Raft - 关键词：Gossi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:published_time","content":"2019-03-08T13:16:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分布式\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-08T13:16:53.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[{"level":3,"title":"分布式综合","slug":"分布式综合","link":"#分布式综合","children":[]},{"level":3,"title":"分布式理论","slug":"分布式理论","link":"#分布式理论","children":[]},{"level":3,"title":"分布式协同","slug":"分布式协同","link":"#分布式协同","children":[]},{"level":3,"title":"分布式调度","slug":"分布式调度","link":"#分布式调度","children":[]},{"level":3,"title":"分布式高可用","slug":"分布式高可用","link":"#分布式高可用","children":[]},{"level":3,"title":"分布式通信","slug":"分布式通信","link":"#分布式通信","children":[]},{"level":3,"title":"分布式存储","slug":"分布式存储","link":"#分布式存储","children":[]}]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[{"level":3,"title":"分布式理论资料","slug":"分布式理论资料","link":"#分布式理论资料","children":[]},{"level":3,"title":"分布式通信资料","slug":"分布式通信资料","link":"#分布式通信资料","children":[]},{"level":3,"title":"分布式存储资料","slug":"分布式存储资料","link":"#分布式存储资料","children":[]},{"level":3,"title":"分布式系统架构资料","slug":"分布式系统架构资料","link":"#分布式系统架构资料","children":[]}]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":11.04,"words":3313},"filePathRelative":"posts/15.分布式/README.md","localizedDate":"2019年3月8日","excerpt":"\\n<blockquote>\\n<p>大型软件为了应对海量数据、高并发，一般都会被设计为分布式系统。</p>\\n<p>分布式系统需要解决很多不同领域的问题。</p>\\n</blockquote>\\n<h2>📖 内容</h2>\\n<h3><a href=\\"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/00.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BB%BC%E5%90%88/\\" target=\\"_blank\\">分布式综合</a></h3>\\n<ul>\\n<li><a href=\\"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/00.%E5%88%86%E5%B8%83%E5%BC%8F%E7%BB%BC%E5%90%88/99.%E5%88%86%E5%B8%83%E5%BC%8F%E9%9D%A2%E8%AF%95.html\\" target=\\"_blank\\">分布式面试总结</a></li>\\n</ul>","autoDesc":true}');export{j as comp,N as data};
