import{_ as i,c as s,b as r,e as l,d as n,f as o,h as e,r as d,o as B}from"./app-D4aAnUWn.js";const p={};function u(g,t){const E=d("RouteLink");return B(),s("div",null,[t[52]||(t[52]=r('<h1 id="架构" tabindex="-1"><a class="header-anchor" href="#架构"><span>架构</span></a></h1><p>架构设计的目的是解决软件系统的复杂度带来的问题。架构即(重要)决策，是在一个有约束的盒子里去求解或接近最合适的解。这个有约束的盒子是团队经验、成本、资源、进度、业务所处阶段等所编织、掺杂在一起的综合体(人，财，物，时间，事情等)。架构无优劣，但是存在恰当的架构用在合适的软件系统中，而这些就是决策的结果。</p><p>架构设计原则：<strong>合适原则、简单原则、演化原则</strong>。合适优于先进 =&gt; 演化优于一步到位 =&gt; 简单优于复杂</p><p>架构设计有业务需求驱动，需要识别出主要问题，然后根据业务、技术、团队、成本等综合评估排序，优先解决当前面临的最主要的复杂度问题。</p><p>架构设计一般要给出多套备选方案（3 ~ 5 个最佳），并评估各方案利弊。</p><p>评估方案时，应该先列出关注的维度（如：功能性、性能、可用性、复杂度、硬件成本、运维成本等），然后根据这些维度去评估打分，再综合挑选最合适当时情况的方案。</p><p>架构失败的主因：</p><ul><li>没那么多人，却想干那么多活</li><li>没有那么多积累，却想一步登天</li><li>没有那么卓越的业务场景，却幻想灵光一闪成为天才</li></ul><h2 id="📖-内容" tabindex="-1"><a class="header-anchor" href="#📖-内容"><span>📖 内容</span></a></h2><h3 id="综合" tabindex="-1"><a class="header-anchor" href="#综合"><span>综合</span></a></h3>',10)),l("ul",null,[l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/00.%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E7%B3%BB%E7%BB%9F.html"},{default:o(()=>t[0]||(t[0]=[e("如何设计系统")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/01.%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E9%9D%A2%E8%AF%95.html"},{default:o(()=>t[1]||(t[1]=[e("系统架构面试总结")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/02.%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0.html"},{default:o(()=>t[2]||(t[2]=[e("系统架构概述")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/03.%E7%B3%BB%E7%BB%9F%E9%AB%98%E6%80%A7%E8%83%BD%E6%9E%B6%E6%9E%84.html"},{default:o(()=>t[3]||(t[3]=[e("系统高性能架构")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/04.%E7%B3%BB%E7%BB%9F%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84.html"},{default:o(()=>t[4]||(t[4]=[e("系统高可用架构")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/05.%E7%B3%BB%E7%BB%9F%E4%BC%B8%E7%BC%A9%E6%80%A7%E6%9E%B6%E6%9E%84.html"},{default:o(()=>t[5]||(t[5]=[e("系统伸缩性架构")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/06.%E7%B3%BB%E7%BB%9F%E6%89%A9%E5%B1%95%E6%80%A7%E6%9E%B6%E6%9E%84.html"},{default:o(()=>t[6]||(t[6]=[e("系统扩展性架构")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/07.%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E6%80%A7%E6%9E%B6%E6%9E%84.html"},{default:o(()=>t[7]||(t[7]=[e("系统安全性架构")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/08.%E5%A4%A7%E5%9E%8B%E7%B3%BB%E7%BB%9F%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF.html"},{default:o(()=>t[8]||(t[8]=[e("大型系统核心技术")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/00.%E7%BB%BC%E5%90%88/09.%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95%E6%9E%B6%E6%9E%84.html"},{default:o(()=>t[9]||(t[9]=[e("系统测试架构")])),_:1})])]),t[53]||(t[53]=l("h3",{id:"微服务",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#微服务"},[l("span",null,"微服务")])],-1)),l("ul",null,[l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B.html"},{default:o(()=>t[10]||(t[10]=[e("微服务简介")])),_:1}),t[11]||(t[11]=e(" - 关键词：")),t[12]||(t[12]=l("code",null,"定义",-1)),t[13]||(t[13]=e("、")),t[14]||(t[14]=l("code",null,"演进",-1)),t[15]||(t[15]=e("、")),t[16]||(t[16]=l("code",null,"利弊",-1)),t[17]||(t[17]=e("、")),t[18]||(t[18]=l("code",null,"如何拆分",-1)),t[19]||(t[19]=e("、")),t[20]||(t[20]=l("code",null,"容量规划",-1)),t[21]||(t[21]=e("、")),t[22]||(t[22]=l("code",null,"核心组件",-1))]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/02.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0.html"},{default:o(()=>t[23]||(t[23]=[e("微服务之注册和发现")])),_:1}),t[24]||(t[24]=e(" - 关键词：")),t[25]||(t[25]=l("code",null,"服务定义",-1)),t[26]||(t[26]=e("、")),t[27]||(t[27]=l("code",null,"注册中心",-1)),t[28]||(t[28]=e("、")),t[29]||(t[29]=l("code",null,"元数据",-1)),t[30]||(t[30]=e("、")),t[31]||(t[31]=l("code",null,"健康检查",-1)),t[32]||(t[32]=e("、")),t[33]||(t[33]=l("code",null,"服务订阅",-1)),t[34]||(t[34]=e("、")),t[35]||(t[35]=l("code",null,"一致性",-1))]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/03.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8.html"},{default:o(()=>t[36]||(t[36]=[e("微服务之服务调用")])),_:1}),t[37]||(t[37]=e(" - 关键词：")),t[38]||(t[38]=l("code",null,"RPC",-1)),t[39]||(t[39]=e("、")),t[40]||(t[40]=l("code",null,"通信协议",-1)),t[41]||(t[41]=e("、")),t[42]||(t[42]=l("code",null,"传输方式",-1)),t[43]||(t[43]=e("、")),t[44]||(t[44]=l("code",null,"序列化",-1))]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/10.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.html"},{default:o(()=>t[45]||(t[45]=[e("微服务基本原理")])),_:1}),t[46]||(t[46]=r(" - 关键词：<code>微服务</code>、<code>序列化</code>、<code>动态代理</code>、<code>通信</code>、<code>服务注册发现</code>、<code>健康检查</code>、<code>路由</code>、<code>负载均衡</code>、<code>容错处理</code>、<code>优雅上线下线</code>、<code>限流</code>、<code>熔断</code>、<code>业务分组</code>",26))])]),t[54]||(t[54]=l("h3",{id:"安全",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#安全"},[l("span",null,"安全")])],-1)),l("ul",null,[l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/02.%E5%AE%89%E5%85%A8/01.%E7%BB%BC%E8%BF%B0.html"},{default:o(()=>t[47]||(t[47]=[e("权限认证综述")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/02.%E5%AE%89%E5%85%A8/02.%E8%AE%A4%E8%AF%81.html"},{default:o(()=>t[48]||(t[48]=[e("认证设计")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/02.%E5%AE%89%E5%85%A8/03.%E6%8E%88%E6%9D%83.html"},{default:o(()=>t[49]||(t[49]=[e("授权设计")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/02.%E5%AE%89%E5%85%A8/05.%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E.html"},{default:o(()=>t[50]||(t[50]=[e("安全漏洞")])),_:1})]),l("li",null,[n(E,{to:"/posts/03.design/01.%E6%9E%B6%E6%9E%84/02.%E5%AE%89%E5%85%A8/06.%E7%BC%96%E7%A0%81%E5%92%8C%E5%8A%A0%E5%AF%86.html"},{default:o(()=>t[51]||(t[51]=[e("编码和加密")])),_:1})])]),t[55]||(t[55]=r('<h2 id="📚-资料" tabindex="-1"><a class="header-anchor" href="#📚-资料"><span>📚 资料</span></a></h2><ul><li><strong>书籍</strong><ul><li><a href="https://item.jd.com/11322972.html" target="_blank" rel="noopener noreferrer">《大型网站技术架构：核心原理与案例分析》</a> - 浅显易懂的将解大型网站架构演进之路；简介了大型系统所面临的挑战以及核心技术点。</li><li><a href="https://item.jd.com/11449803.html" target="_blank" rel="noopener noreferrer">《大型网站系统与 Java 中间件实践》</a></li><li><a href="https://item.jd.com/12153914.html" target="_blank" rel="noopener noreferrer">《亿级流量网站架构核心技术：跟开涛学搭建高可用高并发系统》</a></li><li><a href="https://item.jd.com/12176278.html" target="_blank" rel="noopener noreferrer">《企业 IT 架构转型之道：阿里巴巴中台战略思想与架构实战》</a> - 阐述阿里巴巴中台系统发展，更多的是讲解应用场景和能力，没有讲解技术细节。</li><li><a href="https://item.jd.com/12238227.html" target="_blank" rel="noopener noreferrer">《逆流而上：阿里巴巴技术成长之路》</a> - 主要以运维的视角阐述系统运维中遇到的困难，定位思路以及解决方法。</li></ul></li><li><strong>教程</strong><ul><li><a href="https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md" target="_blank" rel="noopener noreferrer">system-design-primer</a></li><li><a href="https://time.geekbang.org/column/intro/100006601" target="_blank" rel="noopener noreferrer">从 0 开始学架构</a></li><li><a href="https://time.geekbang.org/column/intro/100014401" target="_blank" rel="noopener noreferrer">从 0 开始学微服务</a></li><li><a href="https://time.geekbang.org/column/intro/100046201" target="_blank" rel="noopener noreferrer">RPC 实战与核心原理</a></li><li><a href="https://time.geekbang.org/course/intro/100003901" target="_blank" rel="noopener noreferrer">微服务架构核心 20 讲</a></li><li><a href="https://time.geekbang.org/column/intro/100037301" target="_blank" rel="noopener noreferrer">DDD 实战课</a></li></ul></li></ul><h2 id="🚪-传送" tabindex="-1"><a class="header-anchor" href="#🚪-传送"><span>🚪 传送</span></a></h2><p>◾ 💧 <a href="https://dunwu.github.io/waterdrop/" target="_blank" rel="noopener noreferrer">钝悟的 IT 知识图谱</a> ◾</p>',4))])}const a=i(p,[["render",u],["__file","index.html.vue"]]),A=JSON.parse('{"path":"/pages/d9e5d2/","title":"架构","lang":"zh-CN","frontmatter":{"title":"架构","date":"2019-03-08T13:16:53.000Z","categories":["设计","架构"],"tags":["架构"],"permalink":"/pages/d9e5d2/","hidden":true,"index":false,"description":"架构 架构设计的目的是解决软件系统的复杂度带来的问题。架构即(重要)决策，是在一个有约束的盒子里去求解或接近最合适的解。这个有约束的盒子是团队经验、成本、资源、进度、业务所处阶段等所编织、掺杂在一起的综合体(人，财，物，时间，事情等)。架构无优劣，但是存在恰当的架构用在合适的软件系统中，而这些就是决策的结果。 架构设计原则：合适原则、简单原则、演化原则...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/d9e5d2/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"架构"}],["meta",{"property":"og:description","content":"架构 架构设计的目的是解决软件系统的复杂度带来的问题。架构即(重要)决策，是在一个有约束的盒子里去求解或接近最合适的解。这个有约束的盒子是团队经验、成本、资源、进度、业务所处阶段等所编织、掺杂在一起的综合体(人，财，物，时间，事情等)。架构无优劣，但是存在恰当的架构用在合适的软件系统中，而这些就是决策的结果。 架构设计原则：合适原则、简单原则、演化原则..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"架构"}],["meta",{"property":"article:published_time","content":"2019-03-08T13:16:53.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"架构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-08T13:16:53.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[{"level":3,"title":"综合","slug":"综合","link":"#综合","children":[]},{"level":3,"title":"微服务","slug":"微服务","link":"#微服务","children":[]},{"level":3,"title":"安全","slug":"安全","link":"#安全","children":[]}]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1746520802000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":3,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":3.75,"words":1126},"filePathRelative":"posts/03.design/01.架构/README.md","localizedDate":"2019年3月8日","excerpt":"\\n<p>架构设计的目的是解决软件系统的复杂度带来的问题。架构即(重要)决策，是在一个有约束的盒子里去求解或接近最合适的解。这个有约束的盒子是团队经验、成本、资源、进度、业务所处阶段等所编织、掺杂在一起的综合体(人，财，物，时间，事情等)。架构无优劣，但是存在恰当的架构用在合适的软件系统中，而这些就是决策的结果。</p>\\n<p>架构设计原则：<strong>合适原则、简单原则、演化原则</strong>。合适优于先进 =&gt; 演化优于一步到位 =&gt; 简单优于复杂</p>\\n<p>架构设计有业务需求驱动，需要识别出主要问题，然后根据业务、技术、团队、成本等综合评估排序，优先解决当前面临的最主要的复杂度问题。</p>","autoDesc":true}');export{a as comp,A as data};
