import{_ as n,c as d,b as r,e,d as i,f as o,h as s,r as a,o as u}from"./app-BawPWqFk.js";const p={},h={id:"redis-基本数据类型",tabindex:"-1"},c={class:"header-anchor",href:"#redis-基本数据类型"},g={id:"redis-高级数据类型",tabindex:"-1"},E={class:"header-anchor",href:"#redis-高级数据类型"},R={id:"redis-数据结构",tabindex:"-1"},b={class:"header-anchor",href:"#redis-数据结构"},f={id:"redis-过期删除和内存淘汰",tabindex:"-1"},m={class:"header-anchor",href:"#redis-过期删除和内存淘汰"},B={id:"redis-持久化",tabindex:"-1"},A={class:"header-anchor",href:"#redis-持久化"},k={id:"redis-事件",tabindex:"-1"},_={class:"header-anchor",href:"#redis-事件"},D={id:"redis-复制",tabindex:"-1"},y={class:"header-anchor",href:"#redis-复制"},S={id:"redis-哨兵",tabindex:"-1"},w={class:"header-anchor",href:"#redis-哨兵"},x={id:"redis-集群",tabindex:"-1"},v={class:"header-anchor",href:"#redis-集群"},V={id:"redis-发布订阅",tabindex:"-1"},q={class:"header-anchor",href:"#redis-发布订阅"},C={id:"redis-独立功能",tabindex:"-1"},L={class:"header-anchor",href:"#redis-独立功能"},K={id:"redis-管道",tabindex:"-1"},P={class:"header-anchor",href:"#redis-管道"},T={id:"redis-脚本",tabindex:"-1"},M={class:"header-anchor",href:"#redis-脚本"},j={id:"redis-运维",tabindex:"-1"},F={class:"header-anchor",href:"#redis-运维"},z={id:"redis-实战",tabindex:"-1"},H={class:"header-anchor",href:"#redis-实战"},I={id:"redis-面试",tabindex:"-1"},N={class:"header-anchor",href:"#redis-面试"};function Z(G,t){const l=a("RouteLink");return u(),d("div",null,[t[16]||(t[16]=r('<h1 id="redis-教程" tabindex="-1"><a class="header-anchor" href="#redis-教程"><span>Redis 教程</span></a></h1><p><strong>Redis 是一种内存数据库</strong>，对数据的读写操作都是在内存中完成。因此其<strong>读写速度非常快</strong>，常用于<strong>缓存，消息队列、分布式锁等场景</strong>。</p><ul><li><strong>高性能</strong> – Redis 的数据读写都是在内存中完成，因此性能极高。</li><li><strong>高并发</strong> - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。</li></ul><p><strong>Redis 支持多种数据类型</strong>，如：String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理空间）、Stream（流）。Redis 对数据类型的操作都是<strong>原子性</strong>的，因为执行命令由单线程负责的，不存在并发竞争的问题。</p><p><strong>Redis 的读写采用单线程模型</strong>，因此，其操作天然就具有<strong>原子性</strong>。</p><p>Redis 支持两种持久化策略：RDB 和 AOF。</p><p>Redis 支持过期删除和内存淘汰，因此常被用于作为缓存。</p><p>Redis 有多种高可用方案：<strong>主从复制</strong>模式、<strong>哨兵</strong>模式、<strong>集群</strong>模式。</p><p>Redis 支持很多丰富的特性，如：<strong>事务</strong> 、<strong>Lua 脚本</strong>、<strong>发布订阅</strong>等等。</p><figure><img src="https://architecturenotes.co/content/images/size/w2400/2022/08/Redis-v2-01-1.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="📖-内容" tabindex="-1"><a class="header-anchor" href="#📖-内容"><span>📖 内容</span></a></h2>',11)),e("h3",h,[e("a",c,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/01.Redis%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"},{default:o(()=>t[0]||(t[0]=[s("Redis 基本数据类型")])),_:1})])])]),t[17]||(t[17]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"String"),s("、"),e("code",null,"Hash"),s("、"),e("code",null,"List"),s("、"),e("code",null,"Set"),s("、"),e("code",null,"Zset")])],-1)),e("h3",g,[e("a",E,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/02.Redis%E9%AB%98%E7%BA%A7%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"},{default:o(()=>t[1]||(t[1]=[s("Redis 高级数据类型")])),_:1})])])]),t[18]||(t[18]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"BitMap"),s("、"),e("code",null,"HyperLogLog"),s("、"),e("code",null,"Geo"),s("、"),e("code",null,"Stream")])],-1)),e("h3",R,[e("a",b,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/03.Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html"},{default:o(()=>t[2]||(t[2]=[s("Redis 数据结构")])),_:1})])])]),t[19]||(t[19]=r("<blockquote><p>关键词：<code>对象</code>、<code>SDS</code>、<code>链表</code>、<code>字典</code>、<code>跳表</code>、<code>整数集合</code>、<code>压缩列表</code></p></blockquote>",1)),e("h3",f,[e("a",m,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/11.Redis%E8%BF%87%E6%9C%9F%E5%88%A0%E9%99%A4%E5%92%8C%E5%86%85%E5%AD%98%E6%B7%98%E6%B1%B0.html"},{default:o(()=>t[3]||(t[3]=[s("Redis 过期删除和内存淘汰")])),_:1})])])]),t[20]||(t[20]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"定时删除"),s("、"),e("code",null,"惰性删除"),s("、"),e("code",null,"定期删除"),s("、"),e("code",null,"LRU"),s("、"),e("code",null,"LFU")])],-1)),e("h3",B,[e("a",A,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/12.Redis%E6%8C%81%E4%B9%85%E5%8C%96.html"},{default:o(()=>t[4]||(t[4]=[s("Redis 持久化")])),_:1})])])]),t[21]||(t[21]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"RDB"),s("、"),e("code",null,"AOF"),s("、"),e("code",null,"SAVE"),s("、"),e("code",null,"BGSAVE"),s("、"),e("code",null,"appendfsync")])],-1)),e("h3",k,[e("a",_,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/13.Redis%E4%BA%8B%E4%BB%B6.html"},{default:o(()=>t[5]||(t[5]=[s("Redis 事件")])),_:1})])])]),t[22]||(t[22]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"文件事件"),s("、"),e("code",null,"时间事件")])],-1)),e("h3",D,[e("a",y,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/21.Redis%E5%A4%8D%E5%88%B6.html"},{default:o(()=>t[6]||(t[6]=[s("Redis 复制")])),_:1})])])]),t[23]||(t[23]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"SLAVEOF"),s("、"),e("code",null,"SYNC"),s("、"),e("code",null,"PSYNC"),s("、"),e("code",null,"命令传播"),s("、"),e("code",null,"心跳")])],-1)),e("h3",S,[e("a",w,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/22.Redis%E5%93%A8%E5%85%B5.html"},{default:o(()=>t[7]||(t[7]=[s("Redis 哨兵")])),_:1})])])]),t[24]||(t[24]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"高可用"),s("、"),e("code",null,"监控"),s("、"),e("code",null,"选主"),s("、"),e("code",null,"故障转移"),s("、"),e("code",null,"Raft")])],-1)),e("h3",x,[e("a",v,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/23.Redis%E9%9B%86%E7%BE%A4.html"},{default:o(()=>t[8]||(t[8]=[s("Redis 集群")])),_:1})])])]),t[25]||(t[25]=r("<blockquote><p>关键词：<code>高可用</code>、<code>监控</code>、<code>选主</code>、<code>故障转移</code>、<code>分区</code>、<code>Raft</code>、<code>Gossip</code></p></blockquote>",1)),e("h3",V,[e("a",q,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/31.Redis%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85.html"},{default:o(()=>t[9]||(t[9]=[s("Redis 发布订阅")])),_:1})])])]),t[26]||(t[26]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"订阅"),s("、"),e("code",null,"SUBSCRIBE"),s("、"),e("code",null,"PSUBSCRIBE"),s("、"),e("code",null,"PUBLISH"),s("、"),e("code",null,"观察者模式")])],-1)),e("h3",C,[e("a",L,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/32.Redis%E4%BA%8B%E5%8A%A1.html"},{default:o(()=>t[10]||(t[10]=[s("Redis 独立功能")])),_:1})])])]),t[27]||(t[27]=r("<blockquote><p>关键词：<code>事务</code>、<code>ACID</code>、<code>MULTI</code>、<code>EXEC</code>、<code>DISCARD</code>、<code>WATCH</code></p></blockquote>",1)),e("h3",K,[e("a",P,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/33.Redis%E7%AE%A1%E9%81%93.html"},{default:o(()=>t[11]||(t[11]=[s("Redis 管道")])),_:1})])])]),t[28]||(t[28]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"Pipeline")])],-1)),e("h3",T,[e("a",M,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/34.Redis%E8%84%9A%E6%9C%AC.html"},{default:o(()=>t[12]||(t[12]=[s("Redis 脚本")])),_:1})])])]),t[29]||(t[29]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"Lua")])],-1)),e("h3",j,[e("a",F,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/41.Redis%E8%BF%90%E7%BB%B4.html"},{default:o(()=>t[13]||(t[13]=[s("Redis 运维")])),_:1})])])]),t[30]||(t[30]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"安装"),s("、"),e("code",null,"配置"),s("、"),e("code",null,"命令"),s("、"),e("code",null,"集群"),s("、"),e("code",null,"客户端")])],-1)),e("h3",z,[e("a",H,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/42.Redis%E5%AE%9E%E6%88%98.html"},{default:o(()=>t[14]||(t[14]=[s("Redis 实战")])),_:1})])])]),t[31]||(t[31]=e("blockquote",null,[e("p",null,[s("关键词："),e("code",null,"缓存"),s("、"),e("code",null,"分布式锁"),s("、"),e("code",null,"布隆过滤器")])],-1)),e("h3",I,[e("a",N,[e("span",null,[i(l,{to:"/posts/02.database/05.KV%E6%95%B0%E6%8D%AE%E5%BA%93/01.Redis/99.Redis%E9%9D%A2%E8%AF%95.html"},{default:o(()=>t[15]||(t[15]=[s("Redis 面试")])),_:1})])])]),t[32]||(t[32]=r('<h2 id="📚-资料" tabindex="-1"><a class="header-anchor" href="#📚-资料"><span>📚 资料</span></a></h2><ul><li><strong>官网</strong><ul><li><a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis 官网</a></li><li><a href="https://github.com/antirez/redis" target="_blank" rel="noopener noreferrer">Redis Github</a></li><li><a href="http://redis.cn/" target="_blank" rel="noopener noreferrer">Redis 官方文档中文版</a></li><li><a href="https://try.redis.io/" target="_blank" rel="noopener noreferrer">Redis 在线环境</a></li></ul></li><li><strong>书籍</strong><ul><li><a href="https://item.jd.com/11791607.html" target="_blank" rel="noopener noreferrer">《Redis 实战》</a></li><li><a href="https://item.jd.com/11486101.html" target="_blank" rel="noopener noreferrer">《Redis 设计与实现》</a></li></ul></li><li><strong>教程</strong><ul><li><a href="http://redisdoc.com/" target="_blank" rel="noopener noreferrer">Redis 命令参考</a></li></ul></li><li><strong>文章</strong><ul><li><a href="https://www.slideshare.net/dvirsky/introduction-to-redis" target="_blank" rel="noopener noreferrer">Introduction to Redis</a></li><li><a href="https://juejin.im/post/5db66ed9e51d452a2f15d833" target="_blank" rel="noopener noreferrer">《我们一起进大厂》系列- Redis 基础</a></li></ul></li><li><strong>源码</strong><ul><li><a href="https://github.com/josiahcarlson/redis-in-action" target="_blank" rel="noopener noreferrer">《Redis 实战》配套 Python 源码</a></li></ul></li><li><strong>资源汇总</strong><ul><li><a href="https://github.com/JamzyWang/awesome-redis" target="_blank" rel="noopener noreferrer">awesome-redis</a></li></ul></li><li><strong>Redis Client</strong><ul><li><a href="https://github.com/xetorthio/jedis" target="_blank" rel="noopener noreferrer">Jedis</a> - 最流行的 Redis Java 客户端</li><li><a href="https://github.com/redisson/redisson" target="_blank" rel="noopener noreferrer">Redisson</a> - 额外提供了很多的分布式服务特性，如：分布式锁、分布式 Java 常用对象（BitSet、BlockingQueue、CountDownLatch 等）</li><li><a href="https://github.com/lettuce-io/lettuce-core" target="_blank" rel="noopener noreferrer">Lettuce</a> - Spring Boot 2.0 默认 Redis 客户端</li><li><a href="https://docs.spring.io/spring-data/redis/docs/1.8.13.RELEASE/reference/html/" target="_blank" rel="noopener noreferrer">spring-data-redis 官方文档</a></li><li><a href="https://github.com/redisson/redisson/wiki/%E7%9B%AE%E5%BD%95" target="_blank" rel="noopener noreferrer">Redisson 官方文档(中文,略有滞后)</a></li><li><a href="https://github.com/redisson/redisson/wiki/Table-of-Content" target="_blank" rel="noopener noreferrer">Redisson 官方文档(英文)</a></li><li><a href="https://www.jianshu.com/p/82f0d5abb002" target="_blank" rel="noopener noreferrer">CRUG | Redisson PRO vs. Jedis: Which Is Faster? 翻译</a></li><li><a href="https://blog.csdn.net/everlasting_188/article/details/51073505" target="_blank" rel="noopener noreferrer">redis 分布锁 Redisson 性能测试</a></li><li><a href="https://github.com/uglide/RedisDesktopManager" target="_blank" rel="noopener noreferrer">RedisDesktopManager</a></li></ul></li></ul><h2 id="🚪-传送" tabindex="-1"><a class="header-anchor" href="#🚪-传送"><span>🚪 传送</span></a></h2><p>◾ 💧 <a href="https://dunwu.github.io/waterdrop/" target="_blank" rel="noopener noreferrer">钝悟的 IT 知识图谱</a> ◾</p>',4))])}const U=n(p,[["render",Z],["__file","README.html.vue"]]),J=JSON.parse('{"path":"/2020/02/10/README.html","title":"Redis 教程","lang":"zh-CN","frontmatter":{"icon":"https://www.redis.net.cn/Application/Home/View/Public/img/icon.png","title":"Redis 教程","date":"2020-02-10T14:27:39.000Z","author":[{"name":"钝悟","url":"https://dunwu.github.io/"}],"categories":["数据库","KV数据库","Redis"],"tags":["数据库","KV数据库","Redis"],"permalinkPattern":":year/:month/:day/:slug.html","hidden":true,"index":false,"description":"Redis 教程 Redis 是一种内存数据库，对数据的读写操作都是在内存中完成。因此其读写速度非常快，常用于缓存，消息队列、分布式锁等场景。 高性能 – Redis 的数据读写都是在内存中完成，因此性能极高。 高并发 - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。 Redis 支持多种...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/2020/02/10/README.html"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Redis 教程"}],["meta",{"property":"og:description","content":"Redis 教程 Redis 是一种内存数据库，对数据的读写操作都是在内存中完成。因此其读写速度非常快，常用于缓存，消息队列、分布式锁等场景。 高性能 – Redis 的数据读写都是在内存中完成，因此性能极高。 高并发 - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。 Redis 支持多种..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://architecturenotes.co/content/images/size/w2400/2022/08/Redis-v2-01-1.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T03:10:16.000Z"}],["meta",{"property":"article:author","content":"钝悟"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:published_time","content":"2020-02-10T14:27:39.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T03:10:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 教程\\",\\"image\\":[\\"https://architecturenotes.co/content/images/size/w2400/2022/08/Redis-v2-01-1.jpg\\"],\\"datePublished\\":\\"2020-02-10T14:27:39.000Z\\",\\"dateModified\\":\\"2025-02-18T03:10:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"钝悟\\",\\"url\\":\\"https://dunwu.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[{"level":3,"title":"Redis 基本数据类型","slug":"redis-基本数据类型","link":"#redis-基本数据类型","children":[]},{"level":3,"title":"Redis 高级数据类型","slug":"redis-高级数据类型","link":"#redis-高级数据类型","children":[]},{"level":3,"title":"Redis 数据结构","slug":"redis-数据结构","link":"#redis-数据结构","children":[]},{"level":3,"title":"Redis 过期删除和内存淘汰","slug":"redis-过期删除和内存淘汰","link":"#redis-过期删除和内存淘汰","children":[]},{"level":3,"title":"Redis 持久化","slug":"redis-持久化","link":"#redis-持久化","children":[]},{"level":3,"title":"Redis 事件","slug":"redis-事件","link":"#redis-事件","children":[]},{"level":3,"title":"Redis 复制","slug":"redis-复制","link":"#redis-复制","children":[]},{"level":3,"title":"Redis 哨兵","slug":"redis-哨兵","link":"#redis-哨兵","children":[]},{"level":3,"title":"Redis 集群","slug":"redis-集群","link":"#redis-集群","children":[]},{"level":3,"title":"Redis 发布订阅","slug":"redis-发布订阅","link":"#redis-发布订阅","children":[]},{"level":3,"title":"Redis 独立功能","slug":"redis-独立功能","link":"#redis-独立功能","children":[]},{"level":3,"title":"Redis 管道","slug":"redis-管道","link":"#redis-管道","children":[]},{"level":3,"title":"Redis 脚本","slug":"redis-脚本","link":"#redis-脚本","children":[]},{"level":3,"title":"Redis 运维","slug":"redis-运维","link":"#redis-运维","children":[]},{"level":3,"title":"Redis 实战","slug":"redis-实战","link":"#redis-实战","children":[]},{"level":3,"title":"Redis 面试","slug":"redis-面试","link":"#redis-面试","children":[]}]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1739845898000,"updatedTime":1739848216000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":2,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":3.05,"words":914},"filePathRelative":"posts/02.database/05.KV数据库/01.Redis/README.md","localizedDate":"2020年2月10日","excerpt":"\\n<p><strong>Redis 是一种内存数据库</strong>，对数据的读写操作都是在内存中完成。因此其<strong>读写速度非常快</strong>，常用于<strong>缓存，消息队列、分布式锁等场景</strong>。</p>\\n<ul>\\n<li><strong>高性能</strong> – Redis 的数据读写都是在内存中完成，因此性能极高。</li>\\n<li><strong>高并发</strong> - Redis 的读速度约为 10w+ QPS，写的速度约为 8w+ TPS，将近是 Mysql 的 10 倍。</li>\\n</ul>\\n<p><strong>Redis 支持多种数据类型</strong>，如：String(字符串)、Hash(哈希)、 List (列表)、Set(集合)、Zset(有序集合)、Bitmaps（位图）、HyperLogLog（基数统计）、GEO（地理空间）、Stream（流）。Redis 对数据类型的操作都是<strong>原子性</strong>的，因为执行命令由单线程负责的，不存在并发竞争的问题。</p>","autoDesc":true}');export{U as comp,J as data};
