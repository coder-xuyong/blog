import{_ as d,c as i,b as E,e as o,d as n,h as t,f as l,r as s,o as a}from"./app-ePa9UvIs.js";const p={};function g(A,e){const r=s("RouteLink");return a(),i("div",null,[e[37]||(e[37]=E('<h1 id="微服务" tabindex="-1"><a class="header-anchor" href="#微服务"><span>微服务</span></a></h1><blockquote><p><strong>微服务是一种架构模式</strong>，它提倡将一个单一应用拆分为一些<strong>可独立运行</strong>、<strong>可协同工作</strong>的<strong>小的服务</strong>。在微服务架构中，每个小服务都拥有独立的进程和轻量级通信。这些服务是围绕业务能力构建的，并且可以通过全自动化部署机制独立部署。这些服务会使用最小规模的集中式管理能力(例如 Docker) ，可以用不同的编程语言编写并使用不同的数据存储技术。</p></blockquote><h2 id="📖-内容" tabindex="-1"><a class="header-anchor" href="#📖-内容"><span>📖 内容</span></a></h2>',3)),o("ul",null,[o("li",null,[n(r,{to:"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B.html"},{default:l(()=>e[0]||(e[0]=[t("微服务简介")])),_:1}),e[1]||(e[1]=t(" - 关键词：")),e[2]||(e[2]=o("code",null,"定义",-1)),e[3]||(e[3]=t("、")),e[4]||(e[4]=o("code",null,"演进",-1)),e[5]||(e[5]=t("、")),e[6]||(e[6]=o("code",null,"利弊",-1)),e[7]||(e[7]=t("、")),e[8]||(e[8]=o("code",null,"如何拆分",-1)),e[9]||(e[9]=t("、")),e[10]||(e[10]=o("code",null,"容量规划",-1)),e[11]||(e[11]=t("、")),e[12]||(e[12]=o("code",null,"核心组件",-1))]),o("li",null,[n(r,{to:"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/02.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0.html"},{default:l(()=>e[13]||(e[13]=[t("微服务之注册和发现")])),_:1}),e[14]||(e[14]=t(" - 关键词：")),e[15]||(e[15]=o("code",null,"服务定义",-1)),e[16]||(e[16]=t("、")),e[17]||(e[17]=o("code",null,"注册中心",-1)),e[18]||(e[18]=t("、")),e[19]||(e[19]=o("code",null,"元数据",-1)),e[20]||(e[20]=t("、")),e[21]||(e[21]=o("code",null,"健康检查",-1)),e[22]||(e[22]=t("、")),e[23]||(e[23]=o("code",null,"服务订阅",-1)),e[24]||(e[24]=t("、")),e[25]||(e[25]=o("code",null,"一致性",-1))]),o("li",null,[n(r,{to:"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/03.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8.html"},{default:l(()=>e[26]||(e[26]=[t("微服务之服务调用")])),_:1}),e[27]||(e[27]=t(" - 关键词：")),e[28]||(e[28]=o("code",null,"RPC",-1)),e[29]||(e[29]=t("、")),e[30]||(e[30]=o("code",null,"通信协议",-1)),e[31]||(e[31]=t("、")),e[32]||(e[32]=o("code",null,"传输方式",-1)),e[33]||(e[33]=t("、")),e[34]||(e[34]=o("code",null,"序列化",-1))]),o("li",null,[n(r,{to:"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/10.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.html"},{default:l(()=>e[35]||(e[35]=[t("微服务基本原理")])),_:1}),e[36]||(e[36]=E(" - 关键词：<code>微服务</code>、<code>序列化</code>、<code>动态代理</code>、<code>通信</code>、<code>服务注册发现</code>、<code>健康检查</code>、<code>路由</code>、<code>负载均衡</code>、<code>容错处理</code>、<code>优雅上线下线</code>、<code>限流</code>、<code>熔断</code>、<code>业务分组</code>",26))])]),e[38]||(e[38]=E('<h2 id="📚-资料" tabindex="-1"><a class="header-anchor" href="#📚-资料"><span>📚 资料</span></a></h2><ul><li><strong>书籍</strong><ul><li><a href="https://item.jd.com/11322972.html" target="_blank" rel="noopener noreferrer">《大型网站技术架构：核心原理与案例分析》</a> - 浅显易懂的将解大型网站架构演进之路；简介了大型系统所面临的挑战以及核心技术点。</li><li><a href="https://item.jd.com/11449803.html" target="_blank" rel="noopener noreferrer">大型网站系统与 Java 中间件实践</a></li><li><a href="https://item.jd.com/12153914.html" target="_blank" rel="noopener noreferrer">亿级流量网站架构核心技术：跟开涛学搭建高可用高并发系统</a></li><li><a href="https://item.jd.com/12176278.html" target="_blank" rel="noopener noreferrer">企业 IT 架构转型之道：阿里巴巴中台战略思想与架构实战</a> - 阐述阿里巴巴中台系统发展，更多的是讲解应用场景和能力，没有讲解技术细节。</li><li><a href="https://item.jd.com/12238227.html" target="_blank" rel="noopener noreferrer">逆流而上：阿里巴巴技术成长之路</a> - 主要以运维的视角阐述系统运维中遇到的困难，定位思路以及解决方法。</li></ul></li><li><strong>教程</strong><ul><li><a href="https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md" target="_blank" rel="noopener noreferrer">system-design-primer</a></li><li><a href="https://time.geekbang.org/column/intro/100014401" target="_blank" rel="noopener noreferrer">从 0 开始学微服务</a></li><li><a href="https://time.geekbang.org/course/intro/100003901" target="_blank" rel="noopener noreferrer">微服务架构核心 20 讲</a></li><li><a href="https://time.geekbang.org/course/intro/84" target="_blank" rel="noopener noreferrer">微服务架构实战 160 讲</a></li><li><a href="https://time.geekbang.org/column/intro/100046201" target="_blank" rel="noopener noreferrer">RPC 实战与核心原理</a></li></ul></li><li><strong>文章</strong><ul><li><a href="https://www.martinfowler.com/articles/microservices.html" target="_blank" rel="noopener noreferrer">Microservices</a> Martin Fowler 与 James Lewis 对微服务的定义</li></ul></li></ul><h2 id="🚪-传送" tabindex="-1"><a class="header-anchor" href="#🚪-传送"><span>🚪 传送</span></a></h2><p>◾ 💧 <a href="https://dunwu.github.io/waterdrop/" target="_blank" rel="noopener noreferrer">钝悟的 IT 知识图谱</a> ◾</p>',4))])}const u=d(p,[["render",g],["__file","index.html.vue"]]),B=JSON.parse('{"path":"/pages/559360/","title":"微服务","lang":"zh-CN","frontmatter":{"title":"微服务","date":"2021-06-02T11:22:02.000Z","categories":["设计","架构","微服务"],"tags":["设计","架构","微服务","分布式"],"permalink":"/pages/559360/","hidden":true,"index":false,"description":"微服务 微服务是一种架构模式，它提倡将一个单一应用拆分为一些可独立运行、可协同工作的小的服务。在微服务架构中，每个小服务都拥有独立的进程和轻量级通信。这些服务是围绕业务能力构建的，并且可以通过全自动化部署机制独立部署。这些服务会使用最小规模的集中式管理能力(例如 Docker) ，可以用不同的编程语言编写并使用不同的数据存储技术。 📖 内容 - 关键...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/559360/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"微服务"}],["meta",{"property":"og:description","content":"微服务 微服务是一种架构模式，它提倡将一个单一应用拆分为一些可独立运行、可协同工作的小的服务。在微服务架构中，每个小服务都拥有独立的进程和轻量级通信。这些服务是围绕业务能力构建的，并且可以通过全自动化部署机制独立部署。这些服务会使用最小规模的集中式管理能力(例如 Docker) ，可以用不同的编程语言编写并使用不同的数据存储技术。 📖 内容 - 关键..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-06T08:40:02.000Z"}],["meta",{"property":"article:tag","content":"设计"}],["meta",{"property":"article:tag","content":"架构"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:published_time","content":"2021-06-02T11:22:02.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-06T08:40:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"微服务\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-06-02T11:22:02.000Z\\",\\"dateModified\\":\\"2025-05-06T08:40:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1746520802000,"updatedTime":1746520802000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":2.17,"words":651},"filePathRelative":"posts/03.设计/01.架构/01.微服务/README.md","localizedDate":"2021年6月2日","excerpt":"\\n<blockquote>\\n<p><strong>微服务是一种架构模式</strong>，它提倡将一个单一应用拆分为一些<strong>可独立运行</strong>、<strong>可协同工作</strong>的<strong>小的服务</strong>。在微服务架构中，每个小服务都拥有独立的进程和轻量级通信。这些服务是围绕业务能力构建的，并且可以通过全自动化部署机制独立部署。这些服务会使用最小规模的集中式管理能力(例如 Docker) ，可以用不同的编程语言编写并使用不同的数据存储技术。</p>\\n</blockquote>\\n<h2>📖 内容</h2>\\n<ul>\\n<li><a href=\\"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%AE%80%E4%BB%8B.html\\" target=\\"_blank\\">微服务简介</a> - 关键词：<code>定义</code>、<code>演进</code>、<code>利弊</code>、<code>如何拆分</code>、<code>容量规划</code>、<code>核心组件</code></li>\\n<li><a href=\\"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/02.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%B3%A8%E5%86%8C%E5%92%8C%E5%8F%91%E7%8E%B0.html\\" target=\\"_blank\\">微服务之注册和发现</a> - 关键词：<code>服务定义</code>、<code>注册中心</code>、<code>元数据</code>、<code>健康检查</code>、<code>服务订阅</code>、<code>一致性</code></li>\\n<li><a href=\\"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/03.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8.html\\" target=\\"_blank\\">微服务之服务调用</a> - 关键词：<code>RPC</code>、<code>通信协议</code>、<code>传输方式</code>、<code>序列化</code></li>\\n<li><a href=\\"/posts/03.%E8%AE%BE%E8%AE%A1/01.%E6%9E%B6%E6%9E%84/01.%E5%BE%AE%E6%9C%8D%E5%8A%A1/10.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86.html\\" target=\\"_blank\\">微服务基本原理</a> - 关键词：<code>微服务</code>、<code>序列化</code>、<code>动态代理</code>、<code>通信</code>、<code>服务注册发现</code>、<code>健康检查</code>、<code>路由</code>、<code>负载均衡</code>、<code>容错处理</code>、<code>优雅上线下线</code>、<code>限流</code>、<code>熔断</code>、<code>业务分组</code></li>\\n</ul>","autoDesc":true}');export{u as comp,B as data};
