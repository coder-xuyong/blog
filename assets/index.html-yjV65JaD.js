import{_ as i,c as l,b as a,o as t}from"./app-YpXT1RvH.js";const n={};function r(c,e){return t(),l("div",null,e[0]||(e[0]=[a('<h1 id="cinchcast-的架构" tabindex="-1"><a class="header-anchor" href="#cinchcast-的架构"><span>Cinchcast 的架构</span></a></h1><p>Cinchcast 提供的解决方案允许公司创建、共享、衡量和货币化音频内容，以接触和吸引对其业务最重要的人。我们的技术将会议桥接器与实时音频流相结合，以简化在线活动并增强参与者的参与度。 Cinchcast 技术还用于为全球最大的音频社交网络 Blogtalkradio 提供动力。今天，我们的平台每天制作和分发超过 1,500 小时的原创内容。在本文中，我们描述了我们为扩展平台以支持这种规模的数据而做出的工程决策。</p><h2 id="统计数据" tabindex="-1"><a class="header-anchor" href="#统计数据"><span>统计数据</span></a></h2><ul><li>浏览量每月超过 5000 万</li><li>创建了 50000 小时的音频内容</li><li>1500 万个流媒体</li><li>175,000,000 次广告展示</li><li>峰值每秒 40000 并发请求</li><li>MSSQL、Redis、ElasticSearch 集群中存储的数据达到每天数 TB，</li><li>10 人工程师团队</li><li>生产环境大概有 100 左右的硬件节点</li></ul><h2 id="数据中心" tabindex="-1"><a class="header-anchor" href="#数据中心"><span>数据中心</span></a></h2><p>线上网站部署在布鲁克林的数据中心。但 QA 和 Staging 环境则使用了 Amazon EC2 云实例。</p><p>——考虑到数据安全，大部分公司不愿意把真实数据部署在云端。</p><h2 id="硬件" tabindex="-1"><a class="header-anchor" href="#硬件"><span>硬件</span></a></h2><ul><li>大概有 50 台 Web 服务器</li><li>15 台 MS SQL 数据库服务器</li><li>2 台 Redis 的 NoSQL 的键值服务器</li><li>2 台 NodeJS 服务器</li><li>2 台 弹性搜索集群服务器</li></ul><h2 id="开发工具" tabindex="-1"><a class="header-anchor" href="#开发工具"><span>开发工具</span></a></h2><ul><li>NET 4 C#：<a href="http://ASP.NET" target="_blank" rel="noopener noreferrer">ASP.NET</a> 和 MVC3</li><li>IDE 用的是 Visual Studio 2010 Team Suite</li><li>用 StyleCop、ReSharper 来强化代码标准</li><li>使用敏捷。其中大的功能用 Scrum，小任务则通过看板任务墙管理</li><li>测试和持续集成使用 Jenkins + Nunit</li><li>自动化测试则是 Selenium 和 Sauce On Demand</li></ul><h2 id="软件和使用的技术" tabindex="-1"><a class="header-anchor" href="#软件和使用的技术"><span>软件和使用的技术</span></a></h2><ul><li>Windows Server 2008 R2 的 64 位操作系统</li><li>基于微软 Windows Server 2008 Web 服务器下运行的 SQL Server 2005</li><li>负载均衡是 EQL(Equalizer load balancers)</li><li>Redis 作为分布式缓存层和消息分发队列</li><li>NodeJS 用来进行实时分析和更新仪表盘</li><li>搜索用得是 ElasticSearch，日志分析是通过 Sawmill+自定义分析器脚本</li></ul><h2 id="监测" tabindex="-1"><a class="header-anchor" href="#监测"><span>监测</span></a></h2><ul><li>NewRelic：性能监控</li><li>性能对 KPI（转换率，页面浏览量）的影响：Chartbeat：</li><li>Gomez，WhatsupGold，Nagios 等用来各种预警和报警</li><li>SQL Server monitoring 的监控：来自 Red Gate 的 SQL Monitor</li></ul><h2 id="我们的原则" tabindex="-1"><a class="header-anchor" href="#我们的原则"><span>我们的原则</span></a></h2><ul><li>尊重他人的时间。不要带着问题来，要拿出解决办法。</li><li>不要去追逐当下的热点技术，先实现基本功能，然后再做锦上添花的。务实是最重要的。</li><li>成为一个“如何做”的团队而不是总是说“不”的团队</li><li>预先处理总比亡羊补牢要好，把安全植入到软件开发生命周期中，通过培训开发人员如何写出安全的软件并把它从一开始就作为业务优先考虑之处。</li></ul><h2 id="架构" tabindex="-1"><a class="header-anchor" href="#架构"><span>架构</span></a></h2><ul><li>所有 Javascript、CSS 和图像都缓存在 CDN 级别。 DNS 指向一个 CDN，它将请求传递给源服务器。我们使用 Cotendo 是因为它允许在 CDN 上做出 L7 路由决策。</li><li>单独的 Web 服务器集群用于为普通用户和广告用户的请求提供服务，通过 cookie 进行区分。</li><li>我们正在转向面向服务的架构，其中系统的关键部分，例如搜索、身份验证、缓存，都是以各种语言实现的 RESTFUL 服务。这些服务还提供了一个缓存层。</li><li>REDIS NOSQL 键值存储（<a href="http://redis.io" target="_blank" rel="noopener noreferrer">redis.io</a>）用作数据库调用之前的缓存层。</li><li>Scaleout 用于在网络服务器集群中维护会话状态。但是，我们正在考虑切换到 REDIS。</li></ul><h2 id="经验教训" tabindex="-1"><a class="header-anchor" href="#经验教训"><span>经验教训</span></a></h2><ul><li>SQL Server 数据库中的文本搜索不好用，经常出现 CPU 阻塞，所以 Cinchcast 切换到 ElasticSearch，一个 Lucene 的衍生工具。</li><li>微软内置的会话模块容易出现死锁，他们用 AngiesList 会话模块取代了它，并把数据存储到 Redis。</li><li>日志是发现问题的关键。</li><li>重新发明轮子，有时候也可以是一件好事。例如，在一个供应商的提供的 JS / CSS 的产品导致性能问题的时候，他们通过重写显著改善了网站的性能。</li><li>并不是所有的数据都是关系型的。</li><li>在开发中不使用指标检测就像在风暴中不参考高度表来降落飞机，因此整个开发过程中，一定要通过网站吞吐量，解决错误的时间、代码覆盖率，等指标来衡量你的效率。 总的来说，对于日 PV 百万级的网站来说，Cinchcast 的架构、研发、运维等层面的技术选型和经验值得学习和参考。</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="http://highscalability.com/blog/2012/7/16/cinchcast-architecture-producing-1500-hours-of-audio-every-d.html" target="_blank" rel="noopener noreferrer">每天产生 1500 小时的音频</a></li></ul>',23)]))}const o=i(n,[["render",r],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/pages/3f25aa/","title":"Cinchcast 的架构","lang":"zh-CN","frontmatter":{"title":"Cinchcast 的架构","date":"2021-11-08T08:15:33.000Z","categories":["设计","架构","解决方案"],"tags":["架构","解决方案"],"permalink":"/pages/3f25aa/","description":"Cinchcast 的架构 Cinchcast 提供的解决方案允许公司创建、共享、衡量和货币化音频内容，以接触和吸引对其业务最重要的人。我们的技术将会议桥接器与实时音频流相结合，以简化在线活动并增强参与者的参与度。 Cinchcast 技术还用于为全球最大的音频社交网络 Blogtalkradio 提供动力。今天，我们的平台每天制作和分发超过 1,50...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/3f25aa/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Cinchcast 的架构"}],["meta",{"property":"og:description","content":"Cinchcast 的架构 Cinchcast 提供的解决方案允许公司创建、共享、衡量和货币化音频内容，以接触和吸引对其业务最重要的人。我们的技术将会议桥接器与实时音频流相结合，以简化在线活动并增强参与者的参与度。 Cinchcast 技术还用于为全球最大的音频社交网络 Blogtalkradio 提供动力。今天，我们的平台每天制作和分发超过 1,50..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"架构"}],["meta",{"property":"article:tag","content":"解决方案"}],["meta",{"property":"article:published_time","content":"2021-11-08T08:15:33.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Cinchcast 的架构\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-08T08:15:33.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"统计数据","slug":"统计数据","link":"#统计数据","children":[]},{"level":2,"title":"数据中心","slug":"数据中心","link":"#数据中心","children":[]},{"level":2,"title":"硬件","slug":"硬件","link":"#硬件","children":[]},{"level":2,"title":"开发工具","slug":"开发工具","link":"#开发工具","children":[]},{"level":2,"title":"软件和使用的技术","slug":"软件和使用的技术","link":"#软件和使用的技术","children":[]},{"level":2,"title":"监测","slug":"监测","link":"#监测","children":[]},{"level":2,"title":"我们的原则","slug":"我们的原则","link":"#我们的原则","children":[]},{"level":2,"title":"架构","slug":"架构","link":"#架构","children":[]},{"level":2,"title":"经验教训","slug":"经验教训","link":"#经验教训","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1746520802000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":3,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":4.16,"words":1248},"filePathRelative":"posts/03.design/01.架构/99.解决方案/Cinchcast的架构.md","localizedDate":"2021年11月8日","excerpt":"\\n<p>Cinchcast 提供的解决方案允许公司创建、共享、衡量和货币化音频内容，以接触和吸引对其业务最重要的人。我们的技术将会议桥接器与实时音频流相结合，以简化在线活动并增强参与者的参与度。 Cinchcast 技术还用于为全球最大的音频社交网络 Blogtalkradio 提供动力。今天，我们的平台每天制作和分发超过 1,500 小时的原创内容。在本文中，我们描述了我们为扩展平台以支持这种规模的数据而做出的工程决策。</p>\\n<h2>统计数据</h2>\\n<ul>\\n<li>浏览量每月超过 5000 万</li>\\n<li>创建了 50000 小时的音频内容</li>\\n<li>1500 万个流媒体</li>\\n<li>175,000,000 次广告展示</li>\\n<li>峰值每秒 40000 并发请求</li>\\n<li>MSSQL、Redis、ElasticSearch 集群中存储的数据达到每天数 TB，</li>\\n<li>10 人工程师团队</li>\\n<li>生产环境大概有 100 左右的硬件节点</li>\\n</ul>","autoDesc":true}');export{o as comp,h as data};
