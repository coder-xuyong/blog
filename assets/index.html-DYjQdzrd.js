import{_ as i,c as a,b as n,o as e}from"./app-thRMtbH9.js";const l={};function t(h,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="maven-快速入门" tabindex="-1"><a class="header-anchor" href="#maven-快速入门"><span>Maven 快速入门</span></a></h1><h2 id="maven-简介" tabindex="-1"><a class="header-anchor" href="#maven-简介"><span>Maven 简介</span></a></h2><h3 id="maven-是什么" tabindex="-1"><a class="header-anchor" href="#maven-是什么"><span>Maven 是什么</span></a></h3><p><a href="https://github.com/apache/maven" target="_blank" rel="noopener noreferrer">Maven</a> 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。</p><ul><li><strong>版本</strong> - maven 有自己的版本定义和规则。</li><li><strong>构建</strong> - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。</li><li><strong>输出物管理</strong> - maven 可以管理项目构建的产物，并将其加入到用户库中。这个功能可以用于项目组和其他部门之间的交付行为。</li><li><strong>依赖关系</strong> - maven 对依赖关系的特性进行细致的分析和划分，避免开发过程中的依赖混乱和相互污染行为</li><li><strong>文档和构建结果</strong> - maven 的 site 命令支持各种文档信息的发布，包括构建过程的各种输出，javadoc，产品文档等。</li><li><strong>项目关系</strong> - 一个大型的项目通常有几个小项目或者模块组成，用 maven 可以很方便地管理。</li><li><strong>移植性管理</strong> - maven 可以针对不同的开发场景，输出不同种类的输出结果。</li></ul><h3 id="maven-的生命周期" tabindex="-1"><a class="header-anchor" href="#maven-的生命周期"><span>Maven 的生命周期</span></a></h3><p>maven 把项目的构建划分为不同的生命周期(lifecycle)。粗略一点的话，它这个过程(phase)包括：编译、测试、打包、集成测试、验证、部署。maven 中所有的执行动作(goal)都需要指明自己在这个过程中的执行位置，然后 maven 执行的时候，就依照过程的发展依次调用这些 goal 进行各种处理。</p><p>这个也是 maven 的一个基本调度机制。一般来说，位置稍后的过程都会依赖于之前的过程。当然，maven 同样提供了配置文件，可以依照用户要求，跳过某些阶段。</p><h3 id="maven-的标准工程结构" tabindex="-1"><a class="header-anchor" href="#maven-的标准工程结构"><span>Maven 的标准工程结构</span></a></h3><p>Maven 的标准工程结构如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pom.xml</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maven的核心配置文件</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java源代码目录</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">资源文件目录</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">单元测试代码目录</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">输出目录，所有的输出物都存放在这个目录下</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> classes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">编译后的class文件存放处</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maven-的-约定优于配置" tabindex="-1"><a class="header-anchor" href="#maven-的-约定优于配置"><span>Maven 的&quot;约定优于配置&quot;</span></a></h3><p>所谓的&quot;约定优于配置&quot;，在 maven 中并不是完全不可以修改的，他们只是一些配置的默认值而已。但是除非必要，并不需要去修改那些约定内容。maven 默认的文件存放结构如下：</p><p>每一个阶段的任务都知道怎么正确完成自己的工作，比如 compile 任务就知道从 src/main/java 下编译所有的 java 文件，并把它的输出 class 文件存放到 target/classes 中。</p><p>对 maven 来说，采用&quot;约定优于配置&quot;的策略可以减少修改配置的工作量，也可以降低学习成本，更重要的是，给项目引入了统一的规范。</p><h3 id="maven-的版本规范" tabindex="-1"><a class="header-anchor" href="#maven-的版本规范"><span>Maven 的版本规范</span></a></h3><p>maven 使用如下几个要素来唯一定位某一个输出物：</p><ul><li><strong>groupId</strong> - 团体、组织的标识符。团体标识的约定是，它以创建这个项目的组织名称的逆向域名(reverse domain name)开头。一般对应着 JAVA 的包的结构。例如 org.apache</li><li><strong>artifactId</strong> - 单独项目的唯一标识符。比如我们的 tomcat, commons 等。不要在 artifactId 中包含点号(.)。</li><li><strong>version</strong> - 一个项目的特定版本。</li><li><strong>packaging</strong> - 项目的类型，默认是 jar，描述了项目打包后的输出。类型为 jar 的项目产生一个 JAR 文件，类型为 war 的项目产生一个 web 应用。</li></ul><p>例如：想在 maven 工程中引入 4.12 版本的 junit 包，添加如下依赖即可。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.12&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;compile&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>maven 有自己的版本规范，一般是如下定义 <code>&lt;major version&gt;</code>、<code>&lt;minor version&gt;</code>、<code>&lt;incremental version&gt;-&lt;qualifier&gt;</code> ，比如 1.2.3-beta-01。要说明的是，maven 自己判断版本的算法是 major,minor,incremental 部分用数字比 较，qualifier 部分用字符串比较，所以要小心 alpha-2 和 alpha-15 的比较关系，最好用 alpha-02 的格式。</p><p>maven 在版本管理时候可以使用几个特殊的字符串 SNAPSHOT，LATEST，RELEASE。比如&quot;1.0-SNAPSHOT&quot;。各个部分的含义和处理逻辑如下说明：</p><ul><li><strong>SNAPSHOT</strong> - 这个版本一般用于开发过程中，表示不稳定的版本。</li><li><strong>LATEST</strong> - 指某个特定构件的最新发布，这个发布可能是一个发布版，也可能是一个 snapshot 版，具体看哪个时间最后。</li><li><strong>RELEASE</strong> - 指最后一个发布版。</li></ul><h2 id="maven-安装" tabindex="-1"><a class="header-anchor" href="#maven-安装"><span>Maven 安装</span></a></h2><blockquote><p>Linux 环境安装可以使用我写一键安装脚本：<a href="https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/ops/service/maven" target="_blank" rel="noopener noreferrer">https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/ops/service/maven</a></p></blockquote><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3><p>Maven 依赖于 Java，所以本地必须安装 JDK。</p><p>打开控制台，执行 <code>java -version</code> 确认本地已安装 JDK。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -version</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;1.8.0_191&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Java(TM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) SE Runtime Environment (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.8.0_191-b12</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> HotSpot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">64-Bit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> VM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (build </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">25.191-b12,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mixed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="下载解压" tabindex="-1"><a class="header-anchor" href="#下载解压"><span>下载解压</span></a></h3><p>进入 <strong><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener noreferrer">官网下载地址</a></strong>，选择合适版本，下载并解压到本地。解压命令如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以下解压命令分别针对 zip 包和 tar 包</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">unzip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apache-maven-3.6.3-bin.zip</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xzvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apache-maven-3.6.3-bin.tar.gz</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><p>添加环境变量 <code>MAVEN_HOME</code>，值为 Maven 的安装路径。</p><h4 id="配置-unix-系统环境变量" tabindex="-1"><a class="header-anchor" href="#配置-unix-系统环境变量"><span>配置 Unix 系统环境变量</span></a></h4><p>输入 <code>vi /etc/profile</code> ，添加环境变量如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># MAVEN 的根路径</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> MAVEN_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">opt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">apache-maven-3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">2</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$MAVEN_HOME</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行 <code>source /etc/profile</code> ，立即生效。</p><h4 id="配置-windows-系统环境变量" tabindex="-1"><a class="header-anchor" href="#配置-windows-系统环境变量"><span>配置 Windows 系统环境变量</span></a></h4><p>右键 &quot;计算机&quot;，选择 &quot;属性&quot;，之后点击 &quot;高级系统设置&quot;，点击&quot;环境变量&quot;，来设置环境变量，有以下系统变量需要配置：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200108143017.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200108143038.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="检测安装成功" tabindex="-1"><a class="header-anchor" href="#检测安装成功"><span>检测安装成功</span></a></h3><p>检验是否安装成功，执行 <code>mvn -v</code> 命令，如果输出类似下面的 maven 版本信息，说明配置成功。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mvn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -v</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Apache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Maven</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 3.5.4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (1edded0938998edf8bf061f1ceb3cfdeccf443fe; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2018-06-18T02:33:14+08:00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Maven</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> home:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/maven/apache-maven-3.5.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1.8.0_191,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vendor:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Oracle</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Corporation,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> runtime:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /mnt/disk1/jdk1.8.0_191/jre</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Default</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> locale:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zh_CN,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> platform</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> encoding:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UTF-8</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OS</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> name:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;linux&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> version:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;3.10.0-327.el7.x86_64&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> arch:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;amd64&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> family:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;unix&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maven-配置文件" tabindex="-1"><a class="header-anchor" href="#maven-配置文件"><span>Maven 配置文件</span></a></h3><p><code>setting.xml</code> 文件是 Maven 的默认配置文件，其默认路径为：<code>&lt;Maven 安装目录&gt;/conf/settings.xml</code>。</p><p>如果需要修改 Maven 配置，直接修改 <code>setting.xml</code> 并保持即可。</p><p>例如：想要修改本地仓库位置可以按如下配置，这样，所有通过 Maven 下载打包的 jar 包都会存储在 <code>D:\\maven\\repo</code> 路径下。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">settings</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/SETTINGS/1.1.0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns:xsi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">localRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;D:\\maven\\repo&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">localRepository</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  &lt;!-- 略 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">settings</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门"><span>快速入门</span></a></h2><h3 id="创建-maven-工程" tabindex="-1"><a class="header-anchor" href="#创建-maven-工程"><span>创建 Maven 工程</span></a></h3><h4 id="初始化工程" tabindex="-1"><a class="header-anchor" href="#初始化工程"><span>初始化工程</span></a></h4><p>执行指令：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> archetype:generate</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DgroupId=com.mycompany.app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DartifactId=my-app</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DarchetypeArtifactId=maven-archetype-quickstart</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DarchetypeVersion=1.4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DinteractiveMode=false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>会在当前路径新建一个名为 <code>my-app</code> 的 Maven 工程，其目录结构如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">my-app</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pom.xml</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |       </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mycompany</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |               </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    |</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> App.java</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mycompany</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                    \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> AppTest.java</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中， <code>src/main/java</code> 目录包含 java 源码， <code>src/test/java</code> 目录包含 java 测试源码，而 <code>pom.xml</code> 文件是 maven 工程的配置文件。</p><h4 id="pom-配置" tabindex="-1"><a class="header-anchor" href="#pom-配置"><span>POM 配置</span></a></h4><p>pom.xml 是 maven 工程的配置文件，它描述了 maven 工程的构建方式，其配置信息是很复杂的，这里给一个最简单的配置示例：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.0.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.mycompany.app&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;my-app&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.0-SNAPSHOT&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.7&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.7&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">maven.compiler.target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.12&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目"><span>构建项目</span></a></h4><p>执行以下命令，即可构建项目：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> package</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Dmaven.test.skip=true</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -B</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -U</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>构建成功后，会输出类似下面的信息：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[INFO] BUILD SUCCESS</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[INFO] ------------------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[INFO] Total time:  2.953 s</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[INFO] Finished at: 2019-11-24T13:05:10+01:00</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[INFO] ------------------------------------------------------------------------</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时，在当前路径下会产生一个 <code>target</code> 目录，其中包含了构建的输出物，如：jar 包、class 文件等。</p><p>这时，我们可以执行以下命令启动 jar 包：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -cp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> target/my-app-1.0-SNAPSHOT.jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> com.mycompany.app.App</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="在-intellij-中创建-maven-工程" tabindex="-1"><a class="header-anchor" href="#在-intellij-中创建-maven-工程"><span>在 Intellij 中创建 Maven 工程</span></a></h3><p>（1）创建 Maven 工程</p><p>依次点击 File -&gt; New -&gt; Project 打开创建工程对话框，选择 Maven 工程。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/1555414103572.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>（2）输入项目信息</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/1555415549748.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>（3）点击 Intellij 侧边栏中的 Maven 工具界面，有几个可以直接使用的 maven 命令，可以帮助你进行构建。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/1555415806237.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="在-eclipse-中创建-maven-工程" tabindex="-1"><a class="header-anchor" href="#在-eclipse-中创建-maven-工程"><span>在 Eclipse 中创建 Maven 工程</span></a></h3><p>（1）Maven 插件</p><p>在 Eclipse 中创建 Maven 工程，需要安装 Maven 插件。</p><p>一般较新版本的 Eclipse 都会带有 Maven 插件，如果你的 Eclipse 中已经有 Maven 插件，可以跳过这一步骤。</p><p>点击 Help -&gt; Eclipse Marketplace，搜索 maven 关键字，选择安装红框对应的 Maven 插件。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195117.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>（2）Maven 环境配置</p><p>点击 Window -&gt; Preferences</p><p>如下图所示，配置 settings.xml 文件的位置</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195128.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>（3）创建 Maven 工程</p><p>File -&gt; New -&gt; Maven Project -&gt; Next，在接下来的窗口中会看到一大堆的项目模板，选择合适的模板。</p><p>接下来设置项目的参数，如下：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195151.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p><strong>groupId</strong>是项目组织唯一的标识符，实际对应 JAVA 的包的结构，是 main 目录里 java 的目录结构。</p><p><strong>artifactId</strong>就是项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。</p><p>点击 Finish，Eclipse 会创建一个 Maven 工程。</p><p>（4）使用 Maven 进行构建</p><p>Eclipse 中构建方式：</p><p>在 Elipse 项目上右击 -&gt; Run As 就能看到很多 Maven 操作。这些操作和 maven 命令是等效的。例如 Maven clean，等同于 mvn clean 命令。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195208.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>你也可以点击 Maven build，输入组合命令，并保存下来。如下图：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195219.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>Maven 命令构建方式：</p><p>当然，你也可以直接使用 maven 命令进行构建。</p><p>进入工程所在目录，输入 maven 命令就可以了。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195243.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="使用说明" tabindex="-1"><a class="header-anchor" href="#使用说明"><span>使用说明</span></a></h2><h3 id="如何添加依赖" tabindex="-1"><a class="header-anchor" href="#如何添加依赖"><span>如何添加依赖</span></a></h3><p>在 Maven 工程中添加依赖 jar 包，很简单，只要在 POM 文件中引入对应的<code>&lt;dependency&gt;</code>标签即可。</p><p>参考下例：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xmlns:xsi=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.0.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.zp.maven&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;MavenDemo&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;0.0.1-SNAPSHOT&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;jar&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;MavenDemo&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;http://maven.apache.org&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">url</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project.build.sourceEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;UTF-8&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project.build.sourceEncoding</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">junit.version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;3.8.1&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">junit.version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">properties</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;junit&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;\${junit.version}&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;test&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;log4j&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;log4j&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.2.12&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;compile&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">scope</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependencies</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;dependency&gt;</code> 标签最常用的四个属性标签：</p><ul><li><code>&lt;groupId&gt;</code> - 项目组织唯一的标识符，实际对应 JAVA 的包的结构。</li><li><code>&lt;artifactId&gt;</code> - 项目唯一的标识符，实际对应项目的名称，就是项目根目录的名称。</li><li><code>&lt;version&gt;</code> - jar 包的版本号。可以直接填版本数字，也可以在 properties 标签中设置属性值。</li><li><code>&lt;scope&gt;</code> - jar 包的作用范围。可以填写 compile、runtime、test、system 和 provided。用来在编译、测试等场景下选择对应的 classpath。</li></ul><h3 id="如何寻找-jar-包" tabindex="-1"><a class="header-anchor" href="#如何寻找-jar-包"><span>如何寻找 jar 包</span></a></h3><p>可以在 <a href="http://mvnrepository.com/" target="_blank" rel="noopener noreferrer">http://mvnrepository.com/</a> 站点搜寻你想要的 jar 包版本</p><p>例如，想要使用 log4j，可以找到需要的版本号，然后拷贝对应的 maven 标签信息，将其添加到 pom .xml 文件中。</p><h3 id="如何使用-maven-插件-plugin" tabindex="-1"><a class="header-anchor" href="#如何使用-maven-插件-plugin"><span>如何使用 Maven 插件(Plugin)</span></a></h3><p>要添加 Maven 插件，可以在 pom.xml 文件中添加 <code>&lt;plugin&gt;</code> 标签。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.apache.maven.plugins&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;maven-compiler-plugin&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;3.3&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.7&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.7&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">target</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">configuration</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;configuration&gt;</code> 标签用来配置插件的一些使用参数。</p><h3 id="如何一次编译多个工程" tabindex="-1"><a class="header-anchor" href="#如何一次编译多个工程"><span>如何一次编译多个工程</span></a></h3><p>假设要创建一个父 maven 工程，它有两个子工程：my-app 和 my-webapp：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pom.xml</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-app</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pom.xml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|     </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> my-webapp</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pom.xml</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|     </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> webapp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>app 工程的 pom.xml 如下，重点在于在 modules 中引入两个子 module：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xmlns:xsi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  xsi:schemaLocation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://maven.apache.org/POM/4.0.0</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                      http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;4.0.0&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modelVersion</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;com.mycompany.app&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;app&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;1.0-SNAPSHOT&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">version</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;pom&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">packaging</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;my-app&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;my-webapp&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">module</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">modules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">project</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择编译 XXX 时，会依次对它的所有 Module 执行相同操作。</p><h3 id="常用-maven-插件" tabindex="-1"><a class="header-anchor" href="#常用-maven-插件"><span>常用 Maven 插件</span></a></h3><blockquote><p>更多详情请参考：<a href="https://maven.apache.org/plugins/" target="_blank" rel="noopener noreferrer">https://maven.apache.org/plugins/</a></p></blockquote><h4 id="maven-antrun-plugin" tabindex="-1"><a class="header-anchor" href="#maven-antrun-plugin"><span><a href="http://maven.apache.org/plugins/maven-antrun-plugin/" target="_blank" rel="noopener noreferrer">maven-antrun-plugin</a></span></a></h4><p>maven-antrun-plugin 能让用户在 Maven 项目中运行 Ant 任务。用户可以直接在该插件的配置以 Ant 的方式编写 Target， 然后交给该插件的 run 目标去执行。在一些由 Ant 往 Maven 迁移的项目中，该插件尤其有用。此外当你发现需要编写一些自定义程度很高的任务，同时又觉 得 Maven 不够灵活时，也可以以 Ant 的方式实现之。maven-antrun-plugin 的 run 目标通常与生命周期绑定运行。</p><h4 id="maven-archetype-plugin" tabindex="-1"><a class="header-anchor" href="#maven-archetype-plugin"><span><a href="http://maven.apache.org/archetype/maven-archetype-plugin/" target="_blank" rel="noopener noreferrer">maven-archetype-plugin</a></span></a></h4><p>Archtype 指项目的骨架，Maven 初学者最开始执行的 Maven 命令可能就是<strong>mvn archetype:generate</strong>，这实际上就是让 maven-archetype-plugin 生成一个很简单的项目骨架，帮助开发者快速上手。可能也有人看到一些文档写了<strong>mvn archetype:create</strong>， 但实际上 create 目标已经被弃用了，取而代之的是 generate 目标，该目标使用交互式的方式提示用户输入必要的信息以创建项目，体验更好。 maven-archetype-plugin 还有一些其他目标帮助用户自己定义项目原型，例如你由一个产品需要交付给很多客户进行二次开发，你就可以为 他们提供一个 Archtype，帮助他们快速上手。</p><h4 id="maven-assembly-plugin" tabindex="-1"><a class="header-anchor" href="#maven-assembly-plugin"><span><a href="http://maven.apache.org/plugins/maven-assembly-plugin/" target="_blank" rel="noopener noreferrer">maven-assembly-plugin</a></span></a></h4><p>maven-assembly-plugin 的用途是将项目打包，该包可能包含了项目的可执行文件、源代码、readme、平台脚本等等。 maven-assembly-plugin 支持各种主流的格式如 zip、tar.gz、jar 和 war 等，具体打包哪些文件是高度可控的，例如用户可以 按文件级别的粒度、文件集级别的粒度、模块级别的粒度、以及依赖级别的粒度控制打包，此外，包含和排除配置也是支持的。maven-assembly- plugin 要求用户使用一个名为<code>assembly.xml</code>的元数据文件来表述打包，它的 single 目标可以直接在命令行调用，也可以被绑定至生命周期。</p><h4 id="maven-dependency-plugin" tabindex="-1"><a class="header-anchor" href="#maven-dependency-plugin"><span><a href="http://maven.apache.org/plugins/maven-dependency-plugin/" target="_blank" rel="noopener noreferrer">maven-dependency-plugin</a></span></a></h4><p>maven-dependency-plugin 最大的用途是帮助分析项目依赖，<strong>dependency:list</strong>能够列出项目最终解析到的依赖列表，<strong>dependency:tree</strong>能进一步的描绘项目依赖树，<strong>dependency:analyze</strong>可以告诉你项目依赖潜在的问题，如果你有直接使用到的却未声明的依赖，该目标就会发出警告。maven-dependency-plugin 还有很多目标帮助你操作依赖文件，例如<strong>dependency:copy-dependencies</strong>能将项目依赖从本地 Maven 仓库复制到某个特定的文件夹下面。</p><h4 id="maven-enforcer-plugin" tabindex="-1"><a class="header-anchor" href="#maven-enforcer-plugin"><span><a href="http://maven.apache.org/plugins/maven-enforcer-plugin/" target="_blank" rel="noopener noreferrer">maven-enforcer-plugin</a></span></a></h4><p>在一个稍大一点的组织或团队中，你无法保证所有成员都熟悉 Maven，那他们做一些比较愚蠢的事情就会变得很正常，例如给项目引入了外部的 SNAPSHOT 依赖而导致构建不稳定，使用了一个与大家不一致的 Maven 版本而经常抱怨构建出现诡异问题。maven-enforcer- plugin 能够帮助你避免之类问题，它允许你创建一系列规则强制大家遵守，包括设定 Java 版本、设定 Maven 版本、禁止某些依赖、禁止 SNAPSHOT 依赖。只要在一个父 POM 配置规则，然后让大家继承，当规则遭到破坏的时候，Maven 就会报错。除了标准的规则之外，你还可以扩展该插 件，编写自己的规则。maven-enforcer-plugin 的 enforce 目标负责检查规则，它默认绑定到生命周期的 validate 阶段。</p><h4 id="maven-help-plugin" tabindex="-1"><a class="header-anchor" href="#maven-help-plugin"><span><a href="http://maven.apache.org/plugins/maven-help-plugin/" target="_blank" rel="noopener noreferrer">maven-help-plugin</a></span></a></h4><p>maven-help-plugin 是一个小巧的辅助工具，最简单的<strong>help:system</strong>可以打印所有可用的环境变量和 Java 系统属性。<strong>help:effective-pom</strong>和<strong>help:effective-settings</strong>最 为有用，它们分别打印项目的有效 POM 和有效 settings，有效 POM 是指合并了所有父 POM（包括 Super POM）后的 XML，当你不确定 POM 的某些信息从何而来时，就可以查看有效 POM。有效 settings 同理，特别是当你发现自己配置的 settings.xml 没有生效时，就可以用<strong>help:effective-settings</strong>来验证。此外，maven-help-plugin 的 describe 目标可以帮助你描述任何一个 Maven 插件的信息，还有 all-profiles 目标和 active-profiles 目标帮助查看项目的 Profile。</p><h4 id="maven-release-plugin" tabindex="-1"><a class="header-anchor" href="#maven-release-plugin"><span><a href="http://maven.apache.org/plugins/maven-release-plugin/" target="_blank" rel="noopener noreferrer">maven-release-plugin</a></span></a></h4><p>maven-release-plugin 的用途是帮助自动化项目版本发布，它依赖于 POM 中的 SCM 信息。<strong>release:prepare</strong>用来准备版本发布，具体的工作包括检查是否有未提交代码、检查是否有 SNAPSHOT 依赖、升级项目的 SNAPSHOT 版本至 RELEASE 版本、为项目打标签等等。<strong>release:perform</strong>则 是签出标签中的 RELEASE 源码，构建并发布。版本发布是非常琐碎的工作，它涉及了各种检查，而且由于该工作仅仅是偶尔需要，因此手动操作很容易遗漏一 些细节，maven-release-plugin 让该工作变得非常快速简便，不易出错。maven-release-plugin 的各种目标通常直接在 命令行调用，因为版本发布显然不是日常构建生命周期的一部分。</p><h4 id="maven-resources-plugin" tabindex="-1"><a class="header-anchor" href="#maven-resources-plugin"><span><a href="http://maven.apache.org/plugins/maven-resources-plugin/" target="_blank" rel="noopener noreferrer">maven-resources-plugin</a></span></a></h4><p>为了使项目结构更为清晰，Maven 区别对待 Java 代码文件和资源文件，maven-compiler-plugin 用来编译 Java 代码，maven-resources-plugin 则用来处理资源文件。默认的主资源文件目录是<code>src/main/resources</code>，很多用户会需要添加额外的资源文件目录，这个时候就可以通过配置 maven-resources-plugin 来实现。此外，资源文件过滤也是 Maven 的一大特性，你可以在资源文件中使用*\${propertyName}*形式的 Maven 属性，然后配置 maven-resources-plugin 开启对资源文件的过滤，之后就可以针对不同环境通过命令行或者 Profile 传入属性的值，以实现更为灵活的构建。</p><h4 id="maven-surefire-plugin" tabindex="-1"><a class="header-anchor" href="#maven-surefire-plugin"><span><a href="http://maven.apache.org/plugins/maven-surefire-plugin/" target="_blank" rel="noopener noreferrer">maven-surefire-plugin</a></span></a></h4><p>可能是由于历史的原因，Maven 2.3 中用于执行测试的插件不是 maven-test-plugin，而是 maven-surefire-plugin。其实大部分时间内，只要你的测试 类遵循通用的命令约定（以 Test 结尾、以 TestCase 结尾、或者以 Test 开头），就几乎不用知晓该插件的存在。然而在当你想要跳过测试、排除某些 测试类、或者使用一些 TestNG 特性的时候，了解 maven-surefire-plugin 的一些配置选项就很有用了。例如 <strong>mvn test -Dtest=FooTest</strong> 这样一条命令的效果是仅运行 FooTest 测试类，这是通过控制 maven-surefire-plugin 的 test 参数实现的。</p><h4 id="build-helper-maven-plugin" tabindex="-1"><a class="header-anchor" href="#build-helper-maven-plugin"><span><a href="http://mojo.codehaus.org/build-helper-maven-plugin/" target="_blank" rel="noopener noreferrer">build-helper-maven-plugin</a></span></a></h4><p>Maven 默认只允许指定一个主 Java 代码目录和一个测试 Java 代码目录，虽然这其实是个应当尽量遵守的约定，但偶尔你还是会希望能够指定多个 源码目录（例如为了应对遗留项目），build-helper-maven-plugin 的 add-source 目标就是服务于这个目的，通常它被绑定到 默认生命周期的 generate-sources 阶段以添加额外的源码目录。需要强调的是，这种做法还是不推荐的，因为它破坏了 Maven 的约定，而且可能会遇到其他严格遵守约定的插件工具无法正确识别额外的源码目录。</p><p>build-helper-maven-plugin 的另一个非常有用的目标是 attach-artifact，使用该目标你可以以 classifier 的形式选取部分项目文件生成附属构件，并同时 install 到本地仓库，也可以 deploy 到远程仓库。</p><h4 id="exec-maven-plugin" tabindex="-1"><a class="header-anchor" href="#exec-maven-plugin"><span><a href="http://mojo.codehaus.org/exec-maven-plugin/" target="_blank" rel="noopener noreferrer">exec-maven-plugin</a></span></a></h4><p>exec-maven-plugin 很好理解，顾名思义，它能让你运行任何本地的系统程序，在某些特定情况下，运行一个 Maven 外部的程序可能就是最简单的问题解决方案，这就是<strong>exec:exec</strong>的 用途，当然，该插件还允许你配置相关的程序运行参数。除了 exec 目标之外，exec-maven-plugin 还提供了一个 java 目标，该目标要求你 提供一个 mainClass 参数，然后它能够利用当前项目的依赖作为 classpath，在同一个 JVM 中运行该 mainClass。有时候，为了简单的 演示一个命令行 Java 程序，你可以在 POM 中配置好 exec-maven-plugin 的相关运行参数，然后直接在命令运行<strong>mvn exec:java</strong> 以查看运行效果。</p><h4 id="jetty-maven-plugin" tabindex="-1"><a class="header-anchor" href="#jetty-maven-plugin"><span><a href="http://wiki.eclipse.org/Jetty/Feature/Jetty_Maven_Plugin" target="_blank" rel="noopener noreferrer">jetty-maven-plugin</a></span></a></h4><p>在进行 Web 开发的时候，打开浏览器对应用进行手动的测试几乎是无法避免的，这种测试方法通常就是将项目打包成 war 文件，然后部署到 Web 容器 中，再启动容器进行验证，这显然十分耗时。为了帮助开发者节省时间，jetty-maven-plugin 应运而生，它完全兼容 Maven 项目的目录结构，能够周期性地检查源文件，一旦发现变更后自动更新到内置的 Jetty Web 容器中。做一些基本配置后（例如 Web 应用的 contextPath 和自动扫描变更的时间间隔），你只要执行 <strong>mvn jetty:run</strong> ，然后在 IDE 中修改代码，代码经 IDE 自动编译后产生变更，再由 jetty-maven-plugin 侦测到后更新至 Jetty 容器，这时你就可以直接 测试 Web 页面了。需要注意的是，jetty-maven-plugin 并不是宿主于 Apache 或 Codehaus 的官方插件，因此使用的时候需要额外 的配置<code>settings.xml</code>的 pluginGroups 元素，将 org.mortbay.jetty 这个 pluginGroup 加入。</p><h4 id="versions-maven-plugin" tabindex="-1"><a class="header-anchor" href="#versions-maven-plugin"><span><a href="http://mojo.codehaus.org/versions-maven-plugin/" target="_blank" rel="noopener noreferrer">versions-maven-plugin</a></span></a></h4><p>很多 Maven 用户遇到过这样一个问题，当项目包含大量模块的时候，为他们集体更新版本就变成一件烦人的事情，到底有没有自动化工具能帮助完成这件 事情呢？（当然你可以使用 sed 之类的文本操作工具，不过不在本文讨论范围）答案是肯定的，versions-maven- plugin 提供了很多目标帮助你管理 Maven 项目的各种版本信息。例如最常用的，命令 <strong>mvn versions:set -DnewVersion=1.1-SNAPSHOT</strong> 就能帮助你把所有模块的版本更新到 1.1-SNAPSHOT。该插件还提供了其他一些很有用的目标，display-dependency- updates 能告诉你项目依赖有哪些可用的更新；类似的 display-plugin-updates 能告诉你可用的插件更新；然后 use- latest-versions 能自动帮你将所有依赖升级到最新版本。最后，如果你对所做的更改满意，则可以使用 <strong>mvn versions:commit</strong> 提交，不满意的话也可以使用 <strong>mvn versions:revert</strong> 进行撤销。</p><h3 id="maven-命令" tabindex="-1"><a class="header-anchor" href="#maven-命令"><span>Maven 命令</span></a></h3><p>常用 maven 命令清单：</p><table><thead><tr><th><strong>生命周期</strong></th><th><strong>阶段描述</strong></th></tr></thead><tbody><tr><td>mvn validate</td><td>验证项目是否正确，以及所有为了完整构建必要的信息是否可用</td></tr><tr><td>mvn generate-sources</td><td>生成所有需要包含在编译过程中的源代码</td></tr><tr><td>mvn process-sources</td><td>处理源代码，比如过滤一些值</td></tr><tr><td>mvn generate-resources</td><td>生成所有需要包含在打包过程中的资源文件</td></tr><tr><td>mvn process-resources</td><td>复制并处理资源文件至目标目录，准备打包</td></tr><tr><td>mvn compile</td><td>编译项目的源代码</td></tr><tr><td>mvn process-classes</td><td>后处理编译生成的文件，例如对 Java 类进行字节码增强（bytecode enhancement）</td></tr><tr><td>mvn generate-test-sources</td><td>生成所有包含在测试编译过程中的测试源码</td></tr><tr><td>mvn process-test-sources</td><td>处理测试源码，比如过滤一些值</td></tr><tr><td>mvn generate-test-resources</td><td>生成测试需要的资源文件</td></tr><tr><td>mvn process-test-resources</td><td>复制并处理测试资源文件至测试目标目录</td></tr><tr><td>mvn test-compile</td><td>编译测试源码至测试目标目录</td></tr><tr><td>mvn test</td><td>使用合适的单元测试框架运行测试。这些测试应该不需要代码被打包或发布</td></tr><tr><td>mvn prepare-package</td><td>在真正的打包之前，执行一些准备打包必要的操作。这通常会产生一个包的展开的处理过的版本（将会在 Maven 2.1+中实现）</td></tr><tr><td>mvn package</td><td>将编译好的代码打包成可分发的格式，如 JAR，WAR，或者 EAR</td></tr><tr><td>mvn pre-integration-test</td><td>执行一些在集成测试运行之前需要的动作。如建立集成测试需要的环境</td></tr><tr><td>mvn integration-test</td><td>如果有必要的话，处理包并发布至集成测试可以运行的环境</td></tr><tr><td>mvn post-integration-test</td><td>执行一些在集成测试运行之后需要的动作。如清理集成测试环境。</td></tr><tr><td>mvn verify</td><td>执行所有检查，验证包是有效的，符合质量规范</td></tr><tr><td>mvn install</td><td>安装包至本地仓库，以备本地的其它项目作为依赖使用</td></tr><tr><td>mvn deploy</td><td>复制最终的包至远程仓库，共享给其它开发人员和项目（通常和一次正式的发布相关）</td></tr></tbody></table><p>示例：最常用的 maven 构建命令</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mvn</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Dmaven.test.skip=true</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -B</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -U</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>清理本地输出物，并构建 maven 项目，最后将输出物归档在本地仓库。</p><blockquote><p>💡 想了解更多 maven 命令行细节可以参考官方文档：</p><ul><li><a href="https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html" target="_blank" rel="noopener noreferrer">Maven 构建生命周期说明</a></li><li><a href="https://maven.apache.org/ref/3.6.3/maven-embedder/cli.html" target="_blank" rel="noopener noreferrer">Maven 命令行参数说明</a></li></ul></blockquote><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://github.com/apache/maven" target="_blank" rel="noopener noreferrer">Maven Github</a></li><li><a href="https://maven.apache.org/ref/current" target="_blank" rel="noopener noreferrer">Maven 官方文档</a></li><li><a href="https://maven.apache.org/guides/getting-started/maven-in-five-minutes.html" target="_blank" rel="noopener noreferrer">Maven in 5 Minutes</a></li><li><a href="https://maven.apache.org/guides/getting-started/index.html" target="_blank" rel="noopener noreferrer">Maven Getting Started Guide</a></li><li><a href="http://www.oschina.net/question/158170_29368" target="_blank" rel="noopener noreferrer">maven 常见问题问答</a></li><li><a href="https://www.cnblogs.com/crazy-fox/archive/2012/02/09/2343722.html" target="_blank" rel="noopener noreferrer">常用 Maven 插件介绍</a></li></ul>`,162)]))}const r=i(l,[["render",t],["__file","index.html.vue"]]),k=JSON.parse('{"path":"/pages/e5b79f/","title":"Maven 快速入门","lang":"zh-CN","frontmatter":{"title":"Maven 快速入门","date":"2020-02-07T23:04:47.000Z","order":1,"categories":["Java","软件","构建","Maven"],"tags":["Java","构建","Maven"],"permalink":"/pages/e5b79f/","description":"Maven 快速入门 Maven 简介 Maven 是什么 Maven 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。 版本 - maven 有自己的版本定义和规则。 构建 - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。 输出物管理 - maven 可以管理项目构建的产物，并将其加...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/e5b79f/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Maven 快速入门"}],["meta",{"property":"og:description","content":"Maven 快速入门 Maven 简介 Maven 是什么 Maven 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。 版本 - maven 有自己的版本定义和规则。 构建 - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。 输出物管理 - maven 可以管理项目构建的产物，并将其加..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/20200108143017.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"构建"}],["meta",{"property":"article:tag","content":"Maven"}],["meta",{"property":"article:published_time","content":"2020-02-07T23:04:47.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Maven 快速入门\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200108143017.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200108143038.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/1555414103572.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/1555415549748.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/1555415806237.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195117.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195128.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195151.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195208.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195219.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20181127195243.png\\"],\\"datePublished\\":\\"2020-02-07T23:04:47.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"Maven 简介","slug":"maven-简介","link":"#maven-简介","children":[{"level":3,"title":"Maven 是什么","slug":"maven-是什么","link":"#maven-是什么","children":[]},{"level":3,"title":"Maven 的生命周期","slug":"maven-的生命周期","link":"#maven-的生命周期","children":[]},{"level":3,"title":"Maven 的标准工程结构","slug":"maven-的标准工程结构","link":"#maven-的标准工程结构","children":[]},{"level":3,"title":"Maven 的\\"约定优于配置\\"","slug":"maven-的-约定优于配置","link":"#maven-的-约定优于配置","children":[]},{"level":3,"title":"Maven 的版本规范","slug":"maven-的版本规范","link":"#maven-的版本规范","children":[]}]},{"level":2,"title":"Maven 安装","slug":"maven-安装","link":"#maven-安装","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"下载解压","slug":"下载解压","link":"#下载解压","children":[]},{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]},{"level":3,"title":"检测安装成功","slug":"检测安装成功","link":"#检测安装成功","children":[]},{"level":3,"title":"Maven 配置文件","slug":"maven-配置文件","link":"#maven-配置文件","children":[]}]},{"level":2,"title":"快速入门","slug":"快速入门","link":"#快速入门","children":[{"level":3,"title":"创建 Maven 工程","slug":"创建-maven-工程","link":"#创建-maven-工程","children":[]},{"level":3,"title":"在 Intellij 中创建 Maven 工程","slug":"在-intellij-中创建-maven-工程","link":"#在-intellij-中创建-maven-工程","children":[]},{"level":3,"title":"在 Eclipse 中创建 Maven 工程","slug":"在-eclipse-中创建-maven-工程","link":"#在-eclipse-中创建-maven-工程","children":[]}]},{"level":2,"title":"使用说明","slug":"使用说明","link":"#使用说明","children":[{"level":3,"title":"如何添加依赖","slug":"如何添加依赖","link":"#如何添加依赖","children":[]},{"level":3,"title":"如何寻找 jar 包","slug":"如何寻找-jar-包","link":"#如何寻找-jar-包","children":[]},{"level":3,"title":"如何使用 Maven 插件(Plugin)","slug":"如何使用-maven-插件-plugin","link":"#如何使用-maven-插件-plugin","children":[]},{"level":3,"title":"如何一次编译多个工程","slug":"如何一次编译多个工程","link":"#如何一次编译多个工程","children":[]},{"level":3,"title":"常用 Maven 插件","slug":"常用-maven-插件","link":"#常用-maven-插件","children":[]},{"level":3,"title":"Maven 命令","slug":"maven-命令","link":"#maven-命令","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":21.13,"words":6340},"filePathRelative":"posts/01.Java/11.软件/01.构建/01.Maven/01.Maven快速入门.md","localizedDate":"2020年2月7日","excerpt":"\\n<h2>Maven 简介</h2>\\n<h3>Maven 是什么</h3>\\n<p><a href=\\"https://github.com/apache/maven\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Maven</a> 是一个项目管理工具。它负责管理项目开发过程中的几乎所有的东西。</p>\\n<ul>\\n<li><strong>版本</strong> - maven 有自己的版本定义和规则。</li>\\n<li><strong>构建</strong> - maven 支持许多种的应用程序类型，对于每一种支持的应用程序类型都定义好了一组构建规则和工具集。</li>\\n<li><strong>输出物管理</strong> - maven 可以管理项目构建的产物，并将其加入到用户库中。这个功能可以用于项目组和其他部门之间的交付行为。</li>\\n<li><strong>依赖关系</strong> - maven 对依赖关系的特性进行细致的分析和划分，避免开发过程中的依赖混乱和相互污染行为</li>\\n<li><strong>文档和构建结果</strong> - maven 的 site 命令支持各种文档信息的发布，包括构建过程的各种输出，javadoc，产品文档等。</li>\\n<li><strong>项目关系</strong> - 一个大型的项目通常有几个小项目或者模块组成，用 maven 可以很方便地管理。</li>\\n<li><strong>移植性管理</strong> - maven 可以针对不同的开发场景，输出不同种类的输出结果。</li>\\n</ul>","autoDesc":true}');export{r as comp,k as data};
