import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,o as n}from"./app-CwOdZwR9.js";const l={};function t(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="memcached-快速入门" tabindex="-1"><a class="header-anchor" href="#memcached-快速入门"><span>Memcached 快速入门</span></a></h1><h2 id="memcached-简介" tabindex="-1"><a class="header-anchor" href="#memcached-简介"><span>Memcached 简介</span></a></h2><p>Memcached 是一个自由开源的，高性能，分布式内存对象缓存系统。</p><p>Memcached 是一种基于内存的 key-value 存储，用来存储小块的任意数据（字符串、对象）。这些数据可以是数据库调用、API 调用或者是页面渲染的结果。</p><p>Memcached 简洁而强大。它的简洁设计便于快速开发，减轻开发难度，解决了大数据量缓存的很多问题。它的 API 兼容大部分流行的开发语言。本质上，它是一个简洁的 key-value 存储系统。</p><h3 id="memcached-特性" tabindex="-1"><a class="header-anchor" href="#memcached-特性"><span>Memcached 特性</span></a></h3><p>memcached 作为高速运行的分布式缓存服务器，具有以下的特点。</p><ul><li>协议简单</li><li>基于 libevent 的事件处理</li><li>内置内存存储方式</li><li>memcached 不互相通信的分布式</li></ul><h2 id="memcached-命令" tabindex="-1"><a class="header-anchor" href="#memcached-命令"><span>Memcached 命令</span></a></h2><p>可以通过 telnet 命令并指定主机 ip 和端口来连接 Memcached 服务。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>telnet 127.0.0.1 11211</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Trying 127.0.0.1...</span></span>
<span class="line"><span>Connected to 127.0.0.1.</span></span>
<span class="line"><span>Escape character is &#39;^]&#39;.</span></span>
<span class="line"><span>set foo 0 0 3                                                   保存命令</span></span>
<span class="line"><span>bar                                                             数据</span></span>
<span class="line"><span>STORED                                                          结果</span></span>
<span class="line"><span>get foo                                                         取得命令</span></span>
<span class="line"><span>VALUE foo 0 3                                                   数据</span></span>
<span class="line"><span>bar                                                             数据</span></span>
<span class="line"><span>END                                                             结束行</span></span>
<span class="line"><span>quit                                                            退出</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java-连接-memcached" tabindex="-1"><a class="header-anchor" href="#java-连接-memcached"><span>Java 连接 Memcached</span></a></h2><p>使用 Java 程序连接 Memcached，需要在你的 classpath 中添加 Memcached jar 包。</p><p>本站 jar 包下载地址：<a href="https://www.runoob.com/try/download/spymemcached-2.10.3.jar" target="_blank" rel="noopener noreferrer">spymemcached-2.10.3.jar</a>。</p><p>Google Code jar 包下载地址：<a href="http://code.google.com/p/spymemcached/downloads/list" target="_blank" rel="noopener noreferrer">spymemcached-2.10.3.jar</a>（需要科学上网）。</p><p>以下程序假定 Memcached 服务的主机为 127.0.0.1，端口为 11211。</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> net.spy.memcached.MemcachedClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> java.net.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> MemcachedJava</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">   public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> static</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[] </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">      try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         // 本地连接 Memcached 服务</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">         MemcachedClient</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> mcc</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> MemcachedClient</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> InetSocketAddress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;127.0.0.1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">11211</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">         System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Connection to server sucessful.&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">         // 关闭连接</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">         mcc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">shutdown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Exception</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> ex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">){</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">         System</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">out</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">ex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() );</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://memcached.org/" target="_blank" rel="noopener noreferrer">Memcached 官网</a></li><li><a href="https://github.com/memcached/memcached/" target="_blank" rel="noopener noreferrer">Memcached Github</a></li><li><a href="https://www.runoob.com/memcached/memcached-tutorial.html" target="_blank" rel="noopener noreferrer">Memcached 教程</a></li></ul>`,19)]))}const d=i(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/pages/56cf9a/","title":"Memcached 快速入门","lang":"zh-CN","frontmatter":{"icon":"logos:memcached","title":"Memcached 快速入门","date":"2022-02-17T22:34:30.000Z","order":2,"categories":["数据库","KV数据库"],"tags":["数据库","KV数据库","Memcached"],"permalink":"/pages/56cf9a/","description":"Memcached 快速入门 Memcached 简介 Memcached 是一个自由开源的，高性能，分布式内存对象缓存系统。 Memcached 是一种基于内存的 key-value 存储，用来存储小块的任意数据（字符串、对象）。这些数据可以是数据库调用、API 调用或者是页面渲染的结果。 Memcached 简洁而强大。它的简洁设计便于快速开发，减...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/56cf9a/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Memcached 快速入门"}],["meta",{"property":"og:description","content":"Memcached 快速入门 Memcached 简介 Memcached 是一个自由开源的，高性能，分布式内存对象缓存系统。 Memcached 是一种基于内存的 key-value 存储，用来存储小块的任意数据（字符串、对象）。这些数据可以是数据库调用、API 调用或者是页面渲染的结果。 Memcached 简洁而强大。它的简洁设计便于快速开发，减..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T02:31:38.000Z"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"Memcached"}],["meta",{"property":"article:published_time","content":"2022-02-17T22:34:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T02:31:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Memcached 快速入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-17T22:34:30.000Z\\",\\"dateModified\\":\\"2025-02-18T02:31:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"Memcached 简介","slug":"memcached-简介","link":"#memcached-简介","children":[{"level":3,"title":"Memcached 特性","slug":"memcached-特性","link":"#memcached-特性","children":[]}]},{"level":2,"title":"Memcached 命令","slug":"memcached-命令","link":"#memcached-命令","children":[]},{"level":2,"title":"Java 连接 Memcached","slug":"java-连接-memcached","link":"#java-连接-memcached","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1739845898000,"updatedTime":1739845898000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":1.53,"words":460},"filePathRelative":"posts/02.database/05.KV数据库/02.Memcached.md","localizedDate":"2022年2月17日","excerpt":"\\n<h2>Memcached 简介</h2>\\n<p>Memcached 是一个自由开源的，高性能，分布式内存对象缓存系统。</p>\\n<p>Memcached 是一种基于内存的 key-value 存储，用来存储小块的任意数据（字符串、对象）。这些数据可以是数据库调用、API 调用或者是页面渲染的结果。</p>\\n<p>Memcached 简洁而强大。它的简洁设计便于快速开发，减轻开发难度，解决了大数据量缓存的很多问题。它的 API 兼容大部分流行的开发语言。本质上，它是一个简洁的 key-value 存储系统。</p>\\n<h3>Memcached 特性</h3>\\n<p>memcached 作为高速运行的分布式缓存服务器，具有以下的特点。</p>","autoDesc":true}');export{d as comp,r as data};
