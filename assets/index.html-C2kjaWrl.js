import{_ as l,c as i,b as n,e,d as t,f as a,r as s,o as h,h as p}from"./app-MqdbryXy.js";const c={},d={id:"zookeeper-原理",tabindex:"-1"},g={class:"header-anchor",href:"#zookeeper-原理"},Z={id:"zookeeper-java-api",tabindex:"-1"},u={class:"header-anchor",href:"#zookeeper-java-api"},k={id:"zookeeper-命令",tabindex:"-1"},m={class:"header-anchor",href:"#zookeeper-命令"},K={id:"zookeeper-运维",tabindex:"-1"},E={class:"header-anchor",href:"#zookeeper-运维"},f={id:"zookeeper-acl",tabindex:"-1"},b={class:"header-anchor",href:"#zookeeper-acl"};function _(B,o){const r=s("RouteLink");return h(),i("div",null,[o[5]||(o[5]=n('<h1 id="zookeeper" tabindex="-1"><a class="header-anchor" href="#zookeeper"><span>ZooKeeper</span></a></h1><blockquote><p>ZooKeeper 是 Apache 的顶级项目。<strong>ZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议</strong>。</p><p>ZooKeeper 主要用来解决分布式集群中应用系统的一致性问题，它能提供基于类似于文件系统的目录节点树方式的数据存储。但是 ZooKeeper 并不是用来专门存储数据的，它的作用主要是用来<strong>维护和监控存储数据的状态变化。通过监控这些数据状态的变化，从而可以达到基于数据的集群管理</strong>。</p><p>很多大名鼎鼎的框架都基于 ZooKeeper 来实现分布式高可用，如：Dubbo、Kafka 等。</p><p>ZooKeeper 官方支持 Java 和 C 的 Client API。ZooKeeper 社区为大多数语言（.NET，python 等）提供非官方 API。</p></blockquote><h2 id="📖-内容" tabindex="-1"><a class="header-anchor" href="#📖-内容"><span>📖 内容</span></a></h2>',3)),e("h3",d,[e("a",g,[e("span",null,[t(r,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/01.ZooKeeper%E5%8E%9F%E7%90%86.html"},{default:a(()=>o[0]||(o[0]=[p("ZooKeeper 原理")])),_:1})])])]),e("h3",Z,[e("a",u,[e("span",null,[t(r,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/02.ZooKeeperJavaApi.html"},{default:a(()=>o[1]||(o[1]=[p("ZooKeeper Java Api")])),_:1})])])]),e("h3",k,[e("a",m,[e("span",null,[t(r,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/03.ZooKeeper%E5%91%BD%E4%BB%A4.html"},{default:a(()=>o[2]||(o[2]=[p("ZooKeeper 命令")])),_:1})])])]),e("h3",K,[e("a",E,[e("span",null,[t(r,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/04.ZooKeeper%E8%BF%90%E7%BB%B4.html"},{default:a(()=>o[3]||(o[3]=[p("ZooKeeper 运维")])),_:1})])])]),e("h3",f,[e("a",b,[e("span",null,[t(r,{to:"/posts/15.%E5%88%86%E5%B8%83%E5%BC%8F/11.%E5%88%86%E5%B8%83%E5%BC%8F%E5%8D%8F%E5%90%8C/02.ZooKeeper/05.ZooKeeperAcl.html"},{default:a(()=>o[4]||(o[4]=[p("ZooKeeper Acl")])),_:1})])])]),o[6]||(o[6]=n('<h2 id="📚-资料" tabindex="-1"><a class="header-anchor" href="#📚-资料"><span>📚 资料</span></a></h2><ul><li><strong>官方</strong><ul><li><a href="http://zookeeper.apache.org/" target="_blank" rel="noopener noreferrer">ZooKeeper 官网</a></li><li><a href="https://cwiki.apache.org/confluence/display/ZOOKEEPER" target="_blank" rel="noopener noreferrer">ZooKeeper 官方文档</a></li><li><a href="https://github.com/apache/zookeeper" target="_blank" rel="noopener noreferrer">ZooKeeper Github</a></li><li><a href="http://curator.apache.org/" target="_blank" rel="noopener noreferrer">Apache Curator 官网</a></li></ul></li><li><strong>书籍</strong><ul><li><a href="https://item.jd.com/12109713.html" target="_blank" rel="noopener noreferrer">《Hadoop 权威指南（第四版）》</a></li><li><a href="https://item.jd.com/11622772.html" target="_blank" rel="noopener noreferrer">《从 Paxos 到 Zookeeper 分布式一致性原理与实践》</a></li></ul></li><li><strong>文章</strong><ul><li><a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-zookeeper/index.html" target="_blank" rel="noopener noreferrer">分布式服务框架 ZooKeeper -- 管理分布式环境中的数据</a></li><li><a href="https://www.cnblogs.com/felixzh/p/5869212.html" target="_blank" rel="noopener noreferrer">ZooKeeper 的功能以及工作原理</a></li><li><a href="https://github.com/heibaiying/BigData-Notes/blob/master/notes/ZooKeeper%E7%AE%80%E4%BB%8B%E5%8F%8A%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5.md" target="_blank" rel="noopener noreferrer">ZooKeeper 简介及核心概念</a></li><li><a href="https://draveness.me/zookeeper-chubby" target="_blank" rel="noopener noreferrer">详解分布式协调服务 ZooKeeper</a></li><li><a href="http://www.jasongj.com/zookeeper/fastleaderelection/" target="_blank" rel="noopener noreferrer">深入浅出 Zookeeper（一） Zookeeper 架构及 FastLeaderElection 机制</a></li><li><a href="https://www.slideshare.net/sauravhaloi/introduction-to-apache-zookeeper" target="_blank" rel="noopener noreferrer">Introduction to Apache ZooKeeper</a></li><li><a href="https://blog.csdn.net/wwwsq/article/details/7644445" target="_blank" rel="noopener noreferrer">Zookeeper 的优缺点</a></li></ul></li></ul><h2 id="🚪-传送" tabindex="-1"><a class="header-anchor" href="#🚪-传送"><span>🚪 传送</span></a></h2><p>◾ 💧 <a href="https://dunwu.github.io/waterdrop/" target="_blank" rel="noopener noreferrer">钝悟的 IT 知识图谱</a> ◾</p>',4))])}const x=l(c,[["render",_],["__file","index.html.vue"]]),A=JSON.parse('{"path":"/pages/1b41b6/","title":"ZooKeeper","lang":"zh-CN","frontmatter":{"title":"ZooKeeper","date":"2020-09-09T17:53:08.000Z","categories":["分布式","分布式协同","ZooKeeper"],"tags":["分布式","分布式协同"],"permalink":"/pages/1b41b6/","hidden":true,"index":false,"description":"ZooKeeper ZooKeeper 是 Apache 的顶级项目。ZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。 ZooKeeper 主要用来解决分...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/1b41b6/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"ZooKeeper"}],["meta",{"property":"og:description","content":"ZooKeeper ZooKeeper 是 Apache 的顶级项目。ZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议。 ZooKeeper 主要用来解决分..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"分布式协同"}],["meta",{"property":"article:published_time","content":"2020-09-09T17:53:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ZooKeeper\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-09-09T17:53:08.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"📖 内容","slug":"📖-内容","link":"#📖-内容","children":[{"level":3,"title":"ZooKeeper 原理","slug":"zookeeper-原理","link":"#zookeeper-原理","children":[]},{"level":3,"title":"ZooKeeper Java Api","slug":"zookeeper-java-api","link":"#zookeeper-java-api","children":[]},{"level":3,"title":"ZooKeeper 命令","slug":"zookeeper-命令","link":"#zookeeper-命令","children":[]},{"level":3,"title":"ZooKeeper 运维","slug":"zookeeper-运维","link":"#zookeeper-运维","children":[]},{"level":3,"title":"ZooKeeper Acl","slug":"zookeeper-acl","link":"#zookeeper-acl","children":[]}]},{"level":2,"title":"📚 资料","slug":"📚-资料","link":"#📚-资料","children":[]},{"level":2,"title":"🚪 传送","slug":"🚪-传送","link":"#🚪-传送","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":1.71,"words":513},"filePathRelative":"posts/15.分布式/11.分布式协同/02.ZooKeeper/README.md","localizedDate":"2020年9月9日","excerpt":"\\n<blockquote>\\n<p>ZooKeeper 是 Apache 的顶级项目。<strong>ZooKeeper 为分布式应用提供了高效且可靠的分布式协调服务，提供了诸如统一命名服务、配置管理和分布式锁等分布式的基础服务。在解决分布式数据一致性方面，ZooKeeper 并没有直接采用 Paxos 算法，而是采用了名为 ZAB 的一致性协议</strong>。</p>\\n<p>ZooKeeper 主要用来解决分布式集群中应用系统的一致性问题，它能提供基于类似于文件系统的目录节点树方式的数据存储。但是 ZooKeeper 并不是用来专门存储数据的，它的作用主要是用来<strong>维护和监控存储数据的状态变化。通过监控这些数据状态的变化，从而可以达到基于数据的集群管理</strong>。</p>\\n<p>很多大名鼎鼎的框架都基于 ZooKeeper 来实现分布式高可用，如：Dubbo、Kafka 等。</p>\\n<p>ZooKeeper 官方支持 Java 和 C 的 Client API。ZooKeeper 社区为大多数语言（.NET，python 等）提供非官方 API。</p>\\n</blockquote>","autoDesc":true}');export{x as comp,A as data};
