import{_ as s,c as a,b as e,o as l}from"./app-CYVqcaKq.js";const n={};function t(h,i){return l(),a("div",null,i[0]||(i[0]=[e(`<h1 id="elasticsearch-运维" tabindex="-1"><a class="header-anchor" href="#elasticsearch-运维"><span>Elasticsearch 运维</span></a></h1><blockquote><p><a href="https://github.com/elastic/elasticsearch" target="_blank" rel="noopener noreferrer">Elasticsearch</a> 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p></blockquote><h2 id="elasticsearch-安装" tabindex="-1"><a class="header-anchor" href="#elasticsearch-安装"><span>Elasticsearch 安装</span></a></h2><blockquote><p><a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener noreferrer">Elasticsearch 官方下载安装说明</a></p></blockquote><p>（1）下载解压</p><p>访问 <a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener noreferrer">官方下载地址</a> ，选择需要的版本，下载解压到本地。</p><p>（2）运行</p><p>运行 <code>bin/elasticsearch</code> (Windows 系统上运行 <code>bin\\elasticsearch.bat</code> )</p><p>（3）访问</p><p>执行 <code>curl http://localhost:9200/</code> 测试服务是否启动</p><h2 id="elasticsearch-集群规划" tabindex="-1"><a class="header-anchor" href="#elasticsearch-集群规划"><span>Elasticsearch 集群规划</span></a></h2><p>ElasticSearch 集群需要根据业务实际情况去合理规划。</p><p>需要考虑的问题点：</p><ul><li>集群部署几个节点？</li><li>有多少个索引？</li><li>每个索引有多大数据量？</li><li>每个索引有多少个分片？</li></ul><p>一个参考规划：</p><ul><li>3 台机器，每台机器是 6 核 64G 的。</li><li>我们 es 集群的日增量数据大概是 2000 万条，每天日增量数据大概是 500MB，每月增量数据大概是 6 亿，15G。目前系统已经运行了几个月，现在 es 集群里数据总量大概是 100G 左右。</li><li>目前线上有 5 个索引（这个结合你们自己业务来，看看自己有哪些数据可以放 es 的），每个索引的数据量大概是 20G，所以这个数据量之内，我们每个索引分配的是 8 个 shard，比默认的 5 个 shard 多了 3 个 shard。</li></ul><h2 id="elasticsearch-配置" tabindex="-1"><a class="header-anchor" href="#elasticsearch-配置"><span>Elasticsearch 配置</span></a></h2><p>ES 的默认配置文件为 <code>config/elasticsearch.yml</code></p><p>基本配置说明如下：</p><div class="language-yml line-numbers-mode" data-highlighter="shiki" data-ext="yml" data-title="yml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cluster.name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">elasticsearch</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">node.name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Franz Kafka&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#节点名，默认随机指定一个name列表中名字，该列表在es的jar包中config文件夹里name.txt文件中，其中有很多作者添加的有趣名字。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">node.master</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定该节点是否有资格被选举成为node，默认是true，es是默认集群中的第一台机器为master，如果这台机挂了就会重新选举master。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">node.data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#指定该节点是否存储索引数据，默认为true。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">index.number_of_shards</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置默认索引分片个数，默认为5片。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">index.number_of_replicas</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置默认索引副本个数，默认为1个副本。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path.conf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/path/to/conf</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置配置文件的存储路径，默认是es根目录下的config文件夹。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path.data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/path/to/data</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置索引数据的存储路径，默认是es根目录下的data文件夹，可以设置多个存储路径，用逗号隔开，例：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#path.data: /path/to/data1,/path/to/data2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path.work</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/path/to/work</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置临时文件的存储路径，默认是es根目录下的work文件夹。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path.logs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/path/to/logs</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置日志文件的存储路径，默认是es根目录下的logs文件夹</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path.plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/path/to/plugins</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置插件的存放路径，默认是es根目录下的plugins文件夹</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bootstrap.mlockall</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置为true来锁住内存。因为当jvm开始swapping时es的效率会降低，所以要保证它不swap，可以把#ES_MIN_MEM和ES_MAX_MEM两个环境变量设置成同一个值，并且保证机器有足够的内存分配给es。同时也要#允许elasticsearch的进程可以锁住内存，linux下可以通过\`ulimit -l unlimited\`命令。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">network.bind_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">192.168.0.1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置绑定的ip地址，可以是ipv4或ipv6的，默认为0.0.0.0。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">network.publish_host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">192.168.0.1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置其它节点和该节点交互的ip地址，如果不设置它会自动判断，值必须是个真实的ip地址。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">network.host</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">192.168.0.1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#这个参数是用来同时设置bind_host和publish_host上面两个参数。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">transport.tcp.port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9300</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置节点间交互的tcp端口，默认是9300。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">transport.tcp.compress</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置是否压缩tcp传输时的数据，默认为false，不压缩。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http.port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">9200</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置对外服务的http端口，默认为9200。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http.max_content_length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">100mb</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置内容的最大容量，默认100mb</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">http.enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#是否使用http协议对外提供服务，默认为true，开启。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gateway.type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">local</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#gateway的类型，默认为local即为本地文件系统，可以设置为本地文件系统，分布式文件系统，hadoop的#HDFS，和amazon的s3服务器，其它文件系统的设置方法下次再详细说。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gateway.recover_after_nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置集群中N个节点启动时进行数据恢复，默认为1。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gateway.recover_after_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">5m</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置初始化数据恢复进程的超时时间，默认是5分钟。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">gateway.expected_nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置这个集群中节点的数量，默认为2，一旦这N个节点启动，就会立即进行数据恢复。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cluster.routing.allocation.node_initial_primaries_recoveries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">4</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#初始化数据恢复时，并发恢复线程的个数，默认为4。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">cluster.routing.allocation.node_concurrent_recoveries</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">2</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#添加删除节点或负载均衡时并发恢复线程的个数，默认为4。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">indices.recovery.max_size_per_sec</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置数据恢复时限制的带宽，如入100mb，默认为0，即无限制。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">indices.recovery.concurrent_streams</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置这个参数来限制从其它分片恢复数据时最大同时打开并发流的个数，默认为5。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">discovery.zen.minimum_master_nodes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置这个参数来保证集群中的节点可以知道其它N个有master资格的节点。默认为1，对于大的集群来说，可以设置大一点的值（2-4）</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">discovery.zen.ping.timeout</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">3s</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置集群中自动发现其它节点时ping连接超时时间，默认为3秒，对于比较差的网络环境可以高点的值来防止自动发现时出错。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">discovery.zen.ping.multicast.enabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置是否打开多播发现节点，默认是true。</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">discovery.zen.ping.unicast.hosts</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;host1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;host2:port&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;host3[portX-portY]&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="elasticsearch-faq" tabindex="-1"><a class="header-anchor" href="#elasticsearch-faq"><span>Elasticsearch FAQ</span></a></h2><h3 id="elasticsearch-不允许以-root-权限来运行" tabindex="-1"><a class="header-anchor" href="#elasticsearch-不允许以-root-权限来运行"><span>elasticsearch 不允许以 root 权限来运行</span></a></h3><p>**问题：**在 Linux 环境中，elasticsearch 不允许以 root 权限来运行。</p><p>如果以 root 身份运行 elasticsearch，会提示这样的错误：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>can not run elasticsearch as root</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>**解决方法：**使用非 root 权限账号运行 elasticsearch</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建用户组</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">groupadd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elk</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 创建新用户，-g elk 设置其用户组为 elk，-p elk 设置其密码为 elk</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">useradd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elk</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elk</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 更改 /opt 文件夹及内部文件的所属用户及组为 elk:elk</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">chown</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -R</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elk:elk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 假设你的 elasticsearch 安装在 opt 目录下</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 切换账号</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">su</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> elk</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="vm-max-map-count-不低于-262144" tabindex="-1"><a class="header-anchor" href="#vm-max-map-count-不低于-262144"><span>vm.max_map_count 不低于 262144</span></a></h3><p><strong>问题：</strong><code>vm.max_map_count</code> 表示虚拟内存大小，它是一个内核参数。elasticsearch 默认要求 <code>vm.max_map_count</code> 不低于 262144。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方法：</strong></p><p>你可以执行以下命令，设置 <code>vm.max_map_count</code> ，但是重启后又会恢复为原值。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>sysctl -w vm.max_map_count=262144</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>持久性的做法是在 <code>/etc/sysctl.conf</code> 文件中修改 <code>vm.max_map_count</code> 参数：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>echo &quot;vm.max_map_count=262144&quot; &gt; /etc/sysctl.conf</span></span>
<span class="line"><span>sysctl -p</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>注意</strong></p><p>如果运行环境为 docker 容器，可能会限制执行 sysctl 来修改内核参数。</p><p>这种情况下，你只能选择直接修改宿主机上的参数了。</p></blockquote><h3 id="nofile-不低于-65536" tabindex="-1"><a class="header-anchor" href="#nofile-不低于-65536"><span>nofile 不低于 65536</span></a></h3><p><strong>问题：</strong> <code>nofile</code> 表示进程允许打开的最大文件数。elasticsearch 进程要求可以打开的最大文件数不低于 65536。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方法：</strong></p><p>在 <code>/etc/security/limits.conf</code> 文件中修改 <code>nofile</code> 参数：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>echo &quot;* soft nofile 65536&quot; &gt; /etc/security/limits.conf</span></span>
<span class="line"><span>echo &quot;* hard nofile 131072&quot; &gt; /etc/security/limits.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nproc-不低于-2048" tabindex="-1"><a class="header-anchor" href="#nproc-不低于-2048"><span>nproc 不低于 2048</span></a></h3><p><strong>问题：</strong> <code>nproc</code> 表示最大线程数。elasticsearch 要求最大线程数不低于 2048。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>max number of threads [1024] for user [user] is too low, increase to at least [2048]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>解决方法：</strong></p><p>在 <code>/etc/security/limits.conf</code> 文件中修改 <code>nproc</code> 参数：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>echo &quot;* soft nproc 2048&quot; &gt; /etc/security/limits.conf</span></span>
<span class="line"><span>echo &quot;* hard nproc 4096&quot; &gt; /etc/security/limits.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener noreferrer">Elasticsearch 官方下载安装说明</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/rpm.html#rpm" target="_blank" rel="noopener noreferrer">Install Elasticsearch with RPM</a></li><li><a href="http://siye1982.github.io/2015/09/17/es-optimize/" target="_blank" rel="noopener noreferrer">Elasticsearch 使用积累</a></li></ul>`,50)]))}const p=s(n,[["render",t],["__file","index.html.vue"]]),c=JSON.parse('{"path":"/pages/fdaf15/","title":"Elasticsearch 运维","lang":"zh-CN","frontmatter":{"title":"Elasticsearch 运维","date":"2020-06-16T07:10:44.000Z","order":20,"categories":["数据库","搜索引擎数据库","Elasticsearch"],"tags":["数据库","搜索引擎数据库","Elasticsearch","运维"],"permalink":"/pages/fdaf15/","description":"Elasticsearch 运维 Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。 Elasticsearch 安装 Elasticsearch 官方下载安装说明 （1）下载解压 访问 ...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/fdaf15/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Elasticsearch 运维"}],["meta",{"property":"og:description","content":"Elasticsearch 运维 Elasticsearch 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。 Elasticsearch 安装 Elasticsearch 官方下载安装说明 （1）下载解压 访问 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T02:31:38.000Z"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"搜索引擎数据库"}],["meta",{"property":"article:tag","content":"Elasticsearch"}],["meta",{"property":"article:tag","content":"运维"}],["meta",{"property":"article:published_time","content":"2020-06-16T07:10:44.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T02:31:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Elasticsearch 运维\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-06-16T07:10:44.000Z\\",\\"dateModified\\":\\"2025-02-18T02:31:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"Elasticsearch 安装","slug":"elasticsearch-安装","link":"#elasticsearch-安装","children":[]},{"level":2,"title":"Elasticsearch 集群规划","slug":"elasticsearch-集群规划","link":"#elasticsearch-集群规划","children":[]},{"level":2,"title":"Elasticsearch 配置","slug":"elasticsearch-配置","link":"#elasticsearch-配置","children":[]},{"level":2,"title":"Elasticsearch FAQ","slug":"elasticsearch-faq","link":"#elasticsearch-faq","children":[{"level":3,"title":"elasticsearch 不允许以 root 权限来运行","slug":"elasticsearch-不允许以-root-权限来运行","link":"#elasticsearch-不允许以-root-权限来运行","children":[]},{"level":3,"title":"vm.max_map_count 不低于 262144","slug":"vm-max-map-count-不低于-262144","link":"#vm-max-map-count-不低于-262144","children":[]},{"level":3,"title":"nofile 不低于 65536","slug":"nofile-不低于-65536","link":"#nofile-不低于-65536","children":[]},{"level":3,"title":"nproc 不低于 2048","slug":"nproc-不低于-2048","link":"#nproc-不低于-2048","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1739845898000,"updatedTime":1739845898000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":6.6,"words":1981},"filePathRelative":"posts/02.database/07.搜索引擎数据库/01.Elasticsearch/20.Elasticsearch运维.md","localizedDate":"2020年6月16日","excerpt":"\\n<blockquote>\\n<p><a href=\\"https://github.com/elastic/elasticsearch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Elasticsearch</a> 是一个分布式、RESTful 风格的搜索和数据分析引擎，能够解决不断涌现出的各种用例。 作为 Elastic Stack 的核心，它集中存储您的数据，帮助您发现意料之中以及意料之外的情况。</p>\\n</blockquote>\\n<h2>Elasticsearch 安装</h2>\\n<blockquote>\\n<p><a href=\\"https://www.elastic.co/cn/downloads/elasticsearch\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Elasticsearch 官方下载安装说明</a></p>\\n</blockquote>","autoDesc":true}');export{p as comp,c as data};
