import{_ as s,c as a,b as n,o as e}from"./app-BFfpq37r.js";const l={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="zipkin-快速入门" tabindex="-1"><a class="header-anchor" href="#zipkin-快速入门"><span>Zipkin 快速入门</span></a></h1><p><strong>Zipkin 是一个基于 Java 开发的、开源的、分布式实时数据跟踪系统（Distributed Tracking System）</strong>。它采集有助于解决服务架构中延迟问题的实时数据。</p><p>Zipkin 主要功能是聚集来自各个异构系统的实时监控数据。分布式跟踪系统还有其他比较成熟的实现，例如：Naver 的 Pinpoint、Apache 的 HTrace、阿里的鹰眼 Tracing、京东的 Hydra、新浪的 Watchman，美团点评的 CAT，skywalking 等。</p><p>Zipkin 基于 Google Dapper 的论文设计而来，由 Twitter 公司开发贡献。</p><h2 id="一、zipkin-简介" tabindex="-1"><a class="header-anchor" href="#一、zipkin-简介"><span>一、Zipkin 简介</span></a></h2><h3 id="特性" tabindex="-1"><a class="header-anchor" href="#特性"><span>特性</span></a></h3><p>如果日志文件中有跟踪 ID，则可以直接跳至该跟踪 ID。 否则，您可以基于属性进行查询，例如服务，操作名称，标签和持续时间。 将为您总结一些有趣的数据，例如在服务中花费的时间百分比以及操作是否失败。</p><p>Zipkin UI 还提供了一个依赖关系图，该关系图显示了每个应用程序中跟踪了多少个请求。这对于识别聚合行为（包括错误路径或对不赞成使用的服务的调用）很有帮助。</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200211161706.png" alt="Zipkin UI" tabindex="0" loading="lazy"><figcaption>Zipkin UI</figcaption></figure><h3 id="多平台" tabindex="-1"><a class="header-anchor" href="#多平台"><span>多平台</span></a></h3><p>Zipkin 官方支持 C#、Go、Java、JavaScript、Ruby、Scala、PHP 语言。</p><p>除此以外，社区还贡献了多种其他语言的支持，详情可以参考官方文档：<a href="https://zipkin.io/pages/tracers_instrumentation.html" target="_blank" rel="noopener noreferrer">Tracers and Instrumentation</a></p><h3 id="数据" tabindex="-1"><a class="header-anchor" href="#数据"><span>数据</span></a></h3><p>Zipkin 服务器捆绑了用于采集和存储数据的扩展。</p><p>默认情况下，数据可以通过 <code>Http</code>，<code>Kafka</code> 、<code>RabbitMQ</code> 或 RPC 传输。</p><p>并存储在内存中或 <code>MySQL</code>、<code>Cassandra</code> 或 <code>Elasticsearch</code> 中。</p><p>数据以 json 形式存储，可以参考：<a href="https://zipkin.io/zipkin-api/#/default/post_spans" target="_blank" rel="noopener noreferrer">Zipkin 官方的 Swagger API</a></p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200211162055.png" alt="Zipkin Swagger API" tabindex="0" loading="lazy"><figcaption>Zipkin Swagger API</figcaption></figure><h2 id="二、zipkin-安装" tabindex="-1"><a class="header-anchor" href="#二、zipkin-安装"><span>二、Zipkin 安装</span></a></h2><h3 id="docker" tabindex="-1"><a class="header-anchor" href="#docker"><span>Docker</span></a></h3><p>Docker 启动方式：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9411:9411</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openzipkin/zipkin</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h3><blockquote><p>注意：必须运行在 JDK8+ 环境</p></blockquote><p>Java 启动方式：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -sSL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://zipkin.io/quickstart.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zipkin.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="编译方式" tabindex="-1"><a class="header-anchor" href="#编译方式"><span>编译方式</span></a></h3><p>适用于需要订制化的场景。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># get the latest source</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/openzipkin/zipkin</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zipkin</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Build the server and also make its dependencies</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./mvnw</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -DskipTests</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --also-make</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -pl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zipkin-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clean</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># Run the server</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ./zipkin-server/target/zipkin-server-</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">*</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">exec.jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三、zipkin-架构" tabindex="-1"><a class="header-anchor" href="#三、zipkin-架构"><span>三、Zipkin 架构</span></a></h2><p>ZipKin 可以分为两部分，</p><ul><li>一部分是 Zipkin server，用来作为数据的采集存储、数据分析与展示；</li><li>另一部分是 Zipkin client 是 Zipkin 基于不同的语言及框架封装的一些列客户端工具，这些工具完成了追踪数据的生成与上报功能。</li></ul><p>架构如下：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200211155836.png" alt="Zipkin 架构" tabindex="0" loading="lazy"><figcaption>Zipkin 架构</figcaption></figure><h3 id="zipkin-server" tabindex="-1"><a class="header-anchor" href="#zipkin-server"><span>Zipkin Server</span></a></h3><p>Zipkin Server 主要包括四个模块：</p><ul><li><strong>Collector</strong> - 负责采集客户端传输的数据。</li><li><strong>Storage</strong> - 负责存储采集的数据。当前支持 Memory，MySQL，Cassandra，ElasticSearch 等，默认存储在内存中。</li><li><strong>API（Query）</strong> - 负责查询 Storage 中存储的数据。提供简单的 JSON API 获取数据，主要提供给 web UI 使用。</li><li><strong>UI</strong> - 提供简单的 web 界面。</li></ul><p>Instrumented Client 和 Instrumented Server，是指分布式架构中使用了 Trace 工具的两个应用，Client 会调用 Server 提供的服务，两者都会向 Zipkin 上报 Trace 相关信息。在 Client 和 Server 通过 Transport 上报 Trace 信息后，由 Zipkin 的 Collector 模块接收，并由 Storage 模块将数据存储在对应的存储介质中，然后 Zipkin 提供 API 供 UI 界面查询 Trace 跟踪信息。Non-Instrumented Server，指的是未使用 Trace 工具的 Server，显然它不会上报 Trace 信息。</p><h3 id="zipkin-client" tabindex="-1"><a class="header-anchor" href="#zipkin-client"><span>Zipkin Client</span></a></h3><ul><li><strong>Tracer</strong> - <code>Tracer</code> 存在于你的应用中，它负责采集关于已发生操作的实时元数据。它们通常会检测库，因此对于用户是透明的。例如，已检测的 Web 服务器记录它何时接收到请求，以及何时发送响应。收集的跟踪数据称为跨度（Span）。</li><li><strong>Instrumentation</strong> - Instrumentation 保证了生产环境的安全性和很少的开销。因此，它们仅在内部传播 ID，以告知接收方正在进行追踪。完成的 Span 将通过外部通信告知 Zipkin，类似于应用程序异步报告指标的方式。例如，当跟踪某个操作并且需要发出 http 请求时，会添加一些 header 来传播 ID。header 不用于发送详细信息，例如操作名称。</li><li><strong>Reporter</strong> - 能够将数据发送到 Zipkin 的检测应用程序中的组件，被称为 Reporter。Reporter 有多种传输方式，可以将跟踪数据发送到 Zipkin 采集器，后者将跟踪数据持久化保存到存储中。稍后，API 会查询存储以向 UI 提供渲染数据。</li></ul><p>以下是 Zipkin 的一个示例工作流：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">┌─────────────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ┌───────────────────────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ┌─────────────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ┌──────────────────┐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">│</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> User</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Code</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Trace</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Instrumentation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Http</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Client</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Zipkin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Collector</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">└─────────────┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> └───────────────────────┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  └─────────────┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  └──────────────────┘</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">           ┌─────────┐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ──┤GET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /foo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ├─▶</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">           └─────────┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> record</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tags</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ◀───┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                           ────┐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> trace</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> headers</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                           ◀───┘</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                               │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> record</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> timestamp</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ◀───┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             ┌─────────────────┐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ──┤GET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /foo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         ├─▶</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │X-B3-TraceId:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> aa</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ────┐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   │X-B3-SpanId:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 6b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             └─────────────────┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">         │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> invoke</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> request</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                                                         │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                                 ┌────────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">          ◀───┘</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ◀─────┤200</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ├───────</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                           ────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> └────────┘</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> record</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> duration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            ┌────────┐</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ◀───┘</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ◀──┤200</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> OK</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  ├──</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                         │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            └────────┘</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">       ┌────────────────────────────────┐</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">       │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                 │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ──┤</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> asynchronously</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> report</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> span</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     ├────▶</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                                │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                               │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;traceId&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;aa&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">              │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;id&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;6b&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                   │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;name&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;get&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;timestamp&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 1483945573944000,│</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;duration&quot;:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 386000,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">           │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  &quot;annotations&quot;:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [              </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">│</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             │--snip--</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">                        │</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                             └────────────────────────────────┘</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Instrumented client 和 server 是分别使用了 ZipKin Client 的服务，Zipkin Client 会根据配置将追踪数据发送到 Zipkin Server 中进行数据存储、分析和展示。</p><h2 id="四、zipkin-客户端" tabindex="-1"><a class="header-anchor" href="#四、zipkin-客户端"><span>四、Zipkin 客户端</span></a></h2><p><a href="https://github.com/openzipkin/brave" target="_blank" rel="noopener noreferrer">Brave</a> 是 Java 版的 zipkin 客户端。</p><p>一般不会手动编写 Trace 相关的代码，Brave 提供可一些开箱即用的库，帮助我们追踪一些特定的请求。比如：dubbo、grpc、servlet、mysql、httpClient、kafka、springMVC 等。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://zipkin.io/" target="_blank" rel="noopener noreferrer">Zipkin 官网</a></li><li><a href="https://github.com/openzipkin/zipkin" target="_blank" rel="noopener noreferrer">Zipkin Github</a></li><li><a href="https://github.com/openzipkin/brave" target="_blank" rel="noopener noreferrer">brave</a></li></ul>`,48)]))}const k=s(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/pages/0a8826/","title":"Zipkin 快速入门","lang":"zh-CN","frontmatter":{"title":"Zipkin 快速入门","date":"2020-03-23T22:56:45.000Z","order":3,"categories":["Java","软件","监控诊断"],"tags":["Java","监控","Zipkin"],"permalink":"/pages/0a8826/","description":"Zipkin 快速入门 Zipkin 是一个基于 Java 开发的、开源的、分布式实时数据跟踪系统（Distributed Tracking System）。它采集有助于解决服务架构中延迟问题的实时数据。 Zipkin 主要功能是聚集来自各个异构系统的实时监控数据。分布式跟踪系统还有其他比较成熟的实现，例如：Naver 的 Pinpoint、Apach...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/0a8826/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Zipkin 快速入门"}],["meta",{"property":"og:description","content":"Zipkin 快速入门 Zipkin 是一个基于 Java 开发的、开源的、分布式实时数据跟踪系统（Distributed Tracking System）。它采集有助于解决服务架构中延迟问题的实时数据。 Zipkin 主要功能是聚集来自各个异构系统的实时监控数据。分布式跟踪系统还有其他比较成熟的实现，例如：Naver 的 Pinpoint、Apach..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/20200211161706.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"监控"}],["meta",{"property":"article:tag","content":"Zipkin"}],["meta",{"property":"article:published_time","content":"2020-03-23T22:56:45.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Zipkin 快速入门\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200211161706.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200211162055.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200211155836.png\\"],\\"datePublished\\":\\"2020-03-23T22:56:45.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"一、Zipkin 简介","slug":"一、zipkin-简介","link":"#一、zipkin-简介","children":[{"level":3,"title":"特性","slug":"特性","link":"#特性","children":[]},{"level":3,"title":"多平台","slug":"多平台","link":"#多平台","children":[]},{"level":3,"title":"数据","slug":"数据","link":"#数据","children":[]}]},{"level":2,"title":"二、Zipkin 安装","slug":"二、zipkin-安装","link":"#二、zipkin-安装","children":[{"level":3,"title":"Docker","slug":"docker","link":"#docker","children":[]},{"level":3,"title":"Java","slug":"java","link":"#java","children":[]},{"level":3,"title":"编译方式","slug":"编译方式","link":"#编译方式","children":[]}]},{"level":2,"title":"三、Zipkin 架构","slug":"三、zipkin-架构","link":"#三、zipkin-架构","children":[{"level":3,"title":"Zipkin Server","slug":"zipkin-server","link":"#zipkin-server","children":[]},{"level":3,"title":"Zipkin Client","slug":"zipkin-client","link":"#zipkin-client","children":[]}]},{"level":2,"title":"四、Zipkin 客户端","slug":"四、zipkin-客户端","link":"#四、zipkin-客户端","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":4.5,"words":1351},"filePathRelative":"posts/01.Java/11.软件/03.监控诊断/03.Zipkin.md","localizedDate":"2020年3月23日","excerpt":"\\n<p><strong>Zipkin 是一个基于 Java 开发的、开源的、分布式实时数据跟踪系统（Distributed Tracking System）</strong>。它采集有助于解决服务架构中延迟问题的实时数据。</p>\\n<p>Zipkin 主要功能是聚集来自各个异构系统的实时监控数据。分布式跟踪系统还有其他比较成熟的实现，例如：Naver 的 Pinpoint、Apache 的 HTrace、阿里的鹰眼 Tracing、京东的 Hydra、新浪的 Watchman，美团点评的 CAT，skywalking 等。</p>\\n<p>Zipkin 基于 Google Dapper 的论文设计而来，由 Twitter 公司开发贡献。</p>","autoDesc":true}');export{k as comp,r as data};
