import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as c,o as n}from"./app-BIq6vVKW.js";const d={};function a(t,e){return n(),l("div",null,e[0]||(e[0]=[c('<h1 id="sql-cheat-sheet" tabindex="-1"><a class="header-anchor" href="#sql-cheat-sheet"><span>SQL Cheat Sheet</span></a></h1><h2 id="查找数据的查询" tabindex="-1"><a class="header-anchor" href="#查找数据的查询"><span>查找数据的查询</span></a></h2><h3 id="select-用于从数据库中选择数据" tabindex="-1"><a class="header-anchor" href="#select-用于从数据库中选择数据"><span><strong>SELECT</strong>: 用于从数据库中选择数据</span></a></h3><ul><li><code>SELECT</code> * <code>FROM</code> table_name;</li></ul><h3 id="distinct-用于过滤掉重复的值并返回指定列的行" tabindex="-1"><a class="header-anchor" href="#distinct-用于过滤掉重复的值并返回指定列的行"><span><strong>DISTINCT</strong>: 用于过滤掉重复的值并返回指定列的行</span></a></h3><ul><li><code>SELECT DISTINCT</code> column_name;</li></ul><h3 id="where-用于过滤记录-行" tabindex="-1"><a class="header-anchor" href="#where-用于过滤记录-行"><span><strong>WHERE</strong>: 用于过滤记录/行</span></a></h3><ul><li><code>SELECT</code> column1, column2 <code>FROM</code> table_name <code>WHERE</code> condition;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>AND</code> condition2;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>OR</code> condition2;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE NOT</code> condition;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>AND</code> (condition2 <code>OR</code> condition3);</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE EXISTS</code> (<code>SELECT</code> column_name <code>FROM</code> table_name <code>WHERE</code> condition);</li></ul><h3 id="order-by-用于结果集的排序-升序-asc-或者降序-desc" tabindex="-1"><a class="header-anchor" href="#order-by-用于结果集的排序-升序-asc-或者降序-desc"><span><strong>ORDER BY</strong>: 用于结果集的排序，升序（ASC）或者降序（DESC）</span></a></h3><ul><li><code>SELECT</code> * <code>FROM</code> table_name <code>ORDER BY</code> column;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>ORDER BY</code> column <code>DESC</code>;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>ORDER BY</code> column1 <code>ASC</code>, column2 <code>DESC</code>;</li></ul><h3 id="select-top-用于指定从表顶部返回的记录数" tabindex="-1"><a class="header-anchor" href="#select-top-用于指定从表顶部返回的记录数"><span><strong>SELECT TOP</strong>: 用于指定从表顶部返回的记录数</span></a></h3><ul><li><code>SELECT TOP</code> number columns_names <code>FROM</code> table_name <code>WHERE</code> condition;</li><li><code>SELECT TOP</code> percent columns_names <code>FROM</code> table_name <code>WHERE</code> condition;</li><li>并非所有数据库系统都支持<code>SELECT TOP</code>。 MySQL 中是<code>LIMIT</code>子句</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>LIMIT</code> offset, count;</li></ul><h3 id="like-用于搜索列中的特定模式-where-子句中使用的运算符" tabindex="-1"><a class="header-anchor" href="#like-用于搜索列中的特定模式-where-子句中使用的运算符"><span><strong>LIKE</strong>: 用于搜索列中的特定模式，WHERE 子句中使用的运算符</span></a></h3><ul><li>% (percent sign) 是一个表示零个，一个或多个字符的通配符</li><li>_ (underscore) 是一个表示单个字符通配符</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>LIKE</code> pattern;</li><li><code>LIKE</code> ‘a%’ （查找任何以“a”开头的值）</li><li><code>LIKE</code> ‘%a’ （查找任何以“a”结尾的值）</li><li><code>LIKE</code> ‘%or%’ （查找任何包含“or”的值）</li><li><code>LIKE</code> ‘_r%’ （查找任何第二位是“r”的值）</li><li><code>LIKE</code> ‘a*%*%’ （查找任何以“a”开头且长度至少为 3 的值）</li><li><code>LIKE</code> ‘[a-c]%’（查找任何以“a”或“b”或“c”开头的值）</li></ul><h3 id="in-用于在-where-子句中指定多个值的运算符" tabindex="-1"><a class="header-anchor" href="#in-用于在-where-子句中指定多个值的运算符"><span><strong>IN</strong>: 用于在 WHERE 子句中指定多个值的运算符</span></a></h3><ul><li>本质上，IN 运算符是多个 OR 条件的简写</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>IN</code> (value1, value2, …);</li><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>IN</code> (<code>SELECT STATEMENT</code>);</li></ul><h3 id="between-用于过滤给定范围的值的运算符" tabindex="-1"><a class="header-anchor" href="#between-用于过滤给定范围的值的运算符"><span><strong>BETWEEN</strong>: 用于过滤给定范围的值的运算符</span></a></h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table_name <code>WHERE</code> column_name <code>BETWEEN</code> value1 <code>AND</code> value2;</li><li><code>SELECT</code> * <code>FROM</code> Products <code>WHERE</code> (column_name <code>BETWEEN</code> value1 <code>AND</code> value2) <code>AND NOT</code> column_name2 <code>IN</code> (value3, value4);</li><li><code>SELECT</code> * <code>FROM</code> Products <code>WHERE</code> column_name <code>BETWEEN</code> #01/07/1999# AND #03/12/1999#;</li></ul><h3 id="null-代表一个字段没有值" tabindex="-1"><a class="header-anchor" href="#null-代表一个字段没有值"><span><strong>NULL</strong>: 代表一个字段没有值</span></a></h3><ul><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> column_name <code>IS NULL</code>;</li><li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> column_name <code>IS NOT NULL</code>;</li></ul><h3 id="as-用于给表或者列分配别名" tabindex="-1"><a class="header-anchor" href="#as-用于给表或者列分配别名"><span><strong>AS</strong>: 用于给表或者列分配别名</span></a></h3><ul><li><code>SELECT</code> column_name <code>AS</code> alias_name <code>FROM</code> table_name;</li><li><code>SELECT</code> column_name <code>FROM</code> table_name <code>AS</code> alias_name;</li><li><code>SELECT</code> column_name <code>AS</code> alias_name1, column_name2 <code>AS</code> alias_name2;</li><li><code>SELECT</code> column_name1, column_name2 + ‘, ‘ + column_name3 <code>AS</code> alias_name;</li></ul><h3 id="union-用于组合两个或者多个-select-语句的结果集的运算符" tabindex="-1"><a class="header-anchor" href="#union-用于组合两个或者多个-select-语句的结果集的运算符"><span><strong>UNION</strong>: 用于组合两个或者多个 SELECT 语句的结果集的运算符</span></a></h3><ul><li>每个 SELECT 语句必须拥有相同的列数</li><li>列必须拥有相似的数据类型</li><li>每个 SELECT 语句中的列也必须具有相同的顺序</li><li><code>SELECT</code> columns_names <code>FROM</code> table1 <code>UNION SELECT</code> column_name <code>FROM</code> table2;</li><li><code>UNION</code> 仅允许选择不同的值, <code>UNION ALL</code> 允许重复</li></ul><h3 id="any-all-用于检查-where-或-having-子句中使用的子查询条件的运算符" tabindex="-1"><a class="header-anchor" href="#any-all-用于检查-where-或-having-子句中使用的子查询条件的运算符"><span><strong>ANY|ALL</strong>: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符</span></a></h3><ul><li><code>ANY</code> 如果任何子查询值满足条件，则返回 true。</li><li><code>ALL</code> 如果所有子查询值都满足条件，则返回 true。</li><li><code>SELECT</code> columns_names <code>FROM</code> table1 <code>WHERE</code> column_name operator (<code>ANY</code>|<code>ALL</code>) (<code>SELECT</code> column_name <code>FROM</code> table_name <code>WHERE</code> condition);</li></ul><h3 id="group-by-通常与聚合函数-count-max-min-sum-avg-一起使用-用于将结果集分组为一列或多列" tabindex="-1"><a class="header-anchor" href="#group-by-通常与聚合函数-count-max-min-sum-avg-一起使用-用于将结果集分组为一列或多列"><span><strong>GROUP BY</strong>: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列</span></a></h3><ul><li><code>SELECT</code> column_name1, COUNT(column_name2) <code>FROM</code> table_name <code>WHERE</code> condition <code>GROUP BY</code> column_name1 <code>ORDER BY</code> COUNT(column_name2) DESC;</li></ul><h3 id="having-having-子句指定-select-语句应仅返回聚合值满足指定条件的行。它被添加到-sql-语言中-因为-where-关键字不能与聚合函数一起使用。" tabindex="-1"><a class="header-anchor" href="#having-having-子句指定-select-语句应仅返回聚合值满足指定条件的行。它被添加到-sql-语言中-因为-where-关键字不能与聚合函数一起使用。"><span><strong>HAVING</strong>: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为 WHERE 关键字不能与聚合函数一起使用。</span></a></h3><ul><li><code>SELECT</code> <code>COUNT</code>(column_name1), column_name2 <code>FROM</code> table <code>GROUP BY</code> column_name2 <code>HAVING</code> <code>COUNT(</code>column_name1<code>)</code> &gt; 5;</li></ul><h2 id="修改数据的查询" tabindex="-1"><a class="header-anchor" href="#修改数据的查询"><span>修改数据的查询</span></a></h2><h3 id="insert-into-用于在表中插入新记录-行" tabindex="-1"><a class="header-anchor" href="#insert-into-用于在表中插入新记录-行"><span><strong>INSERT INTO</strong>: 用于在表中插入新记录/行</span></a></h3><ul><li><code>INSERT INTO</code> table_name (column1, column2) <code>VALUES</code> (value1, value2);</li><li><code>INSERT INTO</code> table_name <code>VALUES</code> (value1, value2 …);</li></ul><h3 id="update-用于修改表中的现有记录-行" tabindex="-1"><a class="header-anchor" href="#update-用于修改表中的现有记录-行"><span><strong>UPDATE</strong>: 用于修改表中的现有记录/行</span></a></h3><ul><li><code>UPDATE</code> table_name <code>SET</code> column1 = value1, column2 = value2 <code>WHERE</code> condition;</li><li><code>UPDATE</code> table_name <code>SET</code> column_name = value;</li></ul><h3 id="delete-用于删除表中的现有记录-行" tabindex="-1"><a class="header-anchor" href="#delete-用于删除表中的现有记录-行"><span><strong>DELETE</strong>: 用于删除表中的现有记录/行</span></a></h3><ul><li><code>DELETE FROM</code> table_name <code>WHERE</code> condition;</li><li><code>DELETE</code> * <code>FROM</code> table_name;</li></ul><h2 id="聚合查询" tabindex="-1"><a class="header-anchor" href="#聚合查询"><span>聚合查询</span></a></h2><h3 id="count-返回出现次数" tabindex="-1"><a class="header-anchor" href="#count-返回出现次数"><span><strong>COUNT</strong>: 返回出现次数</span></a></h3><ul><li><code>SELECT COUNT (DISTINCT</code> column_name<code>)</code>;</li></ul><h3 id="min-and-max-返回所选列的最小-最大值" tabindex="-1"><a class="header-anchor" href="#min-and-max-返回所选列的最小-最大值"><span><strong>MIN() and MAX()</strong>: 返回所选列的最小/最大值</span></a></h3><ul><li><code>SELECT MIN (</code>column_names<code>) FROM</code> table_name <code>WHERE</code> condition;</li><li><code>SELECT MAX (</code>column_names<code>) FROM</code> table_name <code>WHERE</code> condition;</li></ul><h3 id="avg-返回数字列的平均值" tabindex="-1"><a class="header-anchor" href="#avg-返回数字列的平均值"><span><strong>AVG()</strong>: 返回数字列的平均值</span></a></h3><ul><li><code>SELECT AVG (</code>column_name<code>) FROM</code> table_name <code>WHERE</code> condition;</li></ul><h3 id="sum-返回数值列的总和" tabindex="-1"><a class="header-anchor" href="#sum-返回数值列的总和"><span><strong>SUM()</strong>: 返回数值列的总和</span></a></h3><ul><li><code>SELECT SUM (</code>column_name<code>) FROM</code> table_name <code>WHERE</code> condition;</li></ul><h2 id="连接查询" tabindex="-1"><a class="header-anchor" href="#连接查询"><span>连接查询</span></a></h2><h3 id="inner-join-内连接-返回在两张表中具有匹配值的记录" tabindex="-1"><a class="header-anchor" href="#inner-join-内连接-返回在两张表中具有匹配值的记录"><span><strong>INNER JOIN</strong>: 内连接，返回在两张表中具有匹配值的记录</span></a></h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>INNER JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li><li><code>SELECT</code> table1.column_name1, table2.column_name2, table3.column_name3 <code>FROM</code> ((table1 <code>INNER JOIN</code> table2 <code>ON</code> relationship) <code>INNER JOIN</code> table3 <code>ON</code> relationship);</li></ul><h3 id="left-outer-join-左外连接-返回左表-table1-中的所有记录-以及右表中的匹配记录-table2" tabindex="-1"><a class="header-anchor" href="#left-outer-join-左外连接-返回左表-table1-中的所有记录-以及右表中的匹配记录-table2"><span><strong>LEFT (OUTER) JOIN</strong>: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）</span></a></h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>LEFT JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li></ul><h3 id="right-outer-join-右外连接-返回右表-table2-中的所有记录-以及左表-table1-中匹配的记录" tabindex="-1"><a class="header-anchor" href="#right-outer-join-右外连接-返回右表-table2-中的所有记录-以及左表-table1-中匹配的记录"><span><strong>RIGHT (OUTER) JOIN</strong>: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录</span></a></h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>RIGHT JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li></ul><h3 id="full-outer-join-全外连接-全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-null-填充。" tabindex="-1"><a class="header-anchor" href="#full-outer-join-全外连接-全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-null-填充。"><span><strong>FULL (OUTER) JOIN</strong>: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。</span></a></h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 <code>FULL OUTER JOIN</code> table2 <code>ON</code> table1.column_name=table2.column_name;</li></ul><h3 id="self-join-自连接-表自身连接" tabindex="-1"><a class="header-anchor" href="#self-join-自连接-表自身连接"><span><strong>Self JOIN</strong>: 自连接，表自身连接</span></a></h3><ul><li><code>SELECT</code> column_names <code>FROM</code> table1 T1, table1 T2 <code>WHERE</code> condition;</li></ul><h2 id="视图查询" tabindex="-1"><a class="header-anchor" href="#视图查询"><span>视图查询</span></a></h2><h3 id="create-创建视图" tabindex="-1"><a class="header-anchor" href="#create-创建视图"><span><strong>CREATE</strong>: 创建视图</span></a></h3><ul><li><code>CREATE VIEW</code> view_name <code>AS SELECT</code> column1, column2 <code>FROM</code> table_name <code>WHERE</code> condition;</li></ul><h3 id="select-检索视图" tabindex="-1"><a class="header-anchor" href="#select-检索视图"><span><strong>SELECT</strong>: 检索视图</span></a></h3><ul><li><code>SELECT</code> * <code>FROM</code> view_name;</li></ul><h3 id="drop-删除视图" tabindex="-1"><a class="header-anchor" href="#drop-删除视图"><span><strong>DROP</strong>: 删除视图</span></a></h3><ul><li><code>DROP VIEW</code> view_name;</li></ul><h2 id="修改表的查询" tabindex="-1"><a class="header-anchor" href="#修改表的查询"><span>修改表的查询</span></a></h2><h3 id="add-添加字段" tabindex="-1"><a class="header-anchor" href="#add-添加字段"><span><strong>ADD</strong>: 添加字段</span></a></h3><ul><li><code>ALTER TABLE</code> table_name <code>ADD</code> column_name column_definition;</li></ul><h3 id="modify-修改字段数据类型" tabindex="-1"><a class="header-anchor" href="#modify-修改字段数据类型"><span><strong>MODIFY</strong>: 修改字段数据类型</span></a></h3><ul><li><code>ALTER TABLE</code> table_name <code>MODIFY</code> column_name column_type;</li></ul><h3 id="drop-删除字段" tabindex="-1"><a class="header-anchor" href="#drop-删除字段"><span><strong>DROP</strong>: 删除字段</span></a></h3><ul><li><code>ALTER TABLE</code> table_name <code>DROP COLUMN</code> column_name;</li></ul>',71)]))}const r=o(d,[["render",a],["__file","index.html.vue"]]),E=JSON.parse('{"path":"/pages/e438a7/","title":"SQL Cheat Sheet","lang":"zh-CN","frontmatter":{"title":"SQL Cheat Sheet","date":"2022-07-16T14:17:08.000Z","order":99,"categories":["数据库","关系型数据库","综合"],"tags":["数据库","关系型数据库","SQL"],"permalink":"/pages/e438a7/","description":"SQL Cheat Sheet 查找数据的查询 SELECT: 用于从数据库中选择数据 SELECT * FROM table_name; DISTINCT: 用于过滤掉重复的值并返回指定列的行 SELECT DISTINCT column_name; WHERE: 用于过滤记录/行 SELECT column1, column2 FROM table...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/e438a7/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"SQL Cheat Sheet"}],["meta",{"property":"og:description","content":"SQL Cheat Sheet 查找数据的查询 SELECT: 用于从数据库中选择数据 SELECT * FROM table_name; DISTINCT: 用于过滤掉重复的值并返回指定列的行 SELECT DISTINCT column_name; WHERE: 用于过滤记录/行 SELECT column1, column2 FROM table..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T02:31:38.000Z"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"关系型数据库"}],["meta",{"property":"article:tag","content":"SQL"}],["meta",{"property":"article:published_time","content":"2022-07-16T14:17:08.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T02:31:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL Cheat Sheet\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-16T14:17:08.000Z\\",\\"dateModified\\":\\"2025-02-18T02:31:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"查找数据的查询","slug":"查找数据的查询","link":"#查找数据的查询","children":[{"level":3,"title":"SELECT: 用于从数据库中选择数据","slug":"select-用于从数据库中选择数据","link":"#select-用于从数据库中选择数据","children":[]},{"level":3,"title":"DISTINCT: 用于过滤掉重复的值并返回指定列的行","slug":"distinct-用于过滤掉重复的值并返回指定列的行","link":"#distinct-用于过滤掉重复的值并返回指定列的行","children":[]},{"level":3,"title":"WHERE: 用于过滤记录/行","slug":"where-用于过滤记录-行","link":"#where-用于过滤记录-行","children":[]},{"level":3,"title":"ORDER BY: 用于结果集的排序，升序（ASC）或者降序（DESC）","slug":"order-by-用于结果集的排序-升序-asc-或者降序-desc","link":"#order-by-用于结果集的排序-升序-asc-或者降序-desc","children":[]},{"level":3,"title":"SELECT TOP: 用于指定从表顶部返回的记录数","slug":"select-top-用于指定从表顶部返回的记录数","link":"#select-top-用于指定从表顶部返回的记录数","children":[]},{"level":3,"title":"LIKE: 用于搜索列中的特定模式，WHERE 子句中使用的运算符","slug":"like-用于搜索列中的特定模式-where-子句中使用的运算符","link":"#like-用于搜索列中的特定模式-where-子句中使用的运算符","children":[]},{"level":3,"title":"IN: 用于在 WHERE 子句中指定多个值的运算符","slug":"in-用于在-where-子句中指定多个值的运算符","link":"#in-用于在-where-子句中指定多个值的运算符","children":[]},{"level":3,"title":"BETWEEN: 用于过滤给定范围的值的运算符","slug":"between-用于过滤给定范围的值的运算符","link":"#between-用于过滤给定范围的值的运算符","children":[]},{"level":3,"title":"NULL: 代表一个字段没有值","slug":"null-代表一个字段没有值","link":"#null-代表一个字段没有值","children":[]},{"level":3,"title":"AS: 用于给表或者列分配别名","slug":"as-用于给表或者列分配别名","link":"#as-用于给表或者列分配别名","children":[]},{"level":3,"title":"UNION: 用于组合两个或者多个 SELECT 语句的结果集的运算符","slug":"union-用于组合两个或者多个-select-语句的结果集的运算符","link":"#union-用于组合两个或者多个-select-语句的结果集的运算符","children":[]},{"level":3,"title":"ANY|ALL: 用于检查 WHERE 或 HAVING 子句中使用的子查询条件的运算符","slug":"any-all-用于检查-where-或-having-子句中使用的子查询条件的运算符","link":"#any-all-用于检查-where-或-having-子句中使用的子查询条件的运算符","children":[]},{"level":3,"title":"GROUP BY: 通常与聚合函数（COUNT，MAX，MIN，SUM，AVG）一起使用，用于将结果集分组为一列或多列","slug":"group-by-通常与聚合函数-count-max-min-sum-avg-一起使用-用于将结果集分组为一列或多列","link":"#group-by-通常与聚合函数-count-max-min-sum-avg-一起使用-用于将结果集分组为一列或多列","children":[]},{"level":3,"title":"HAVING: HAVING 子句指定 SELECT 语句应仅返回聚合值满足指定条件的行。它被添加到 SQL 语言中，因为 WHERE 关键字不能与聚合函数一起使用。","slug":"having-having-子句指定-select-语句应仅返回聚合值满足指定条件的行。它被添加到-sql-语言中-因为-where-关键字不能与聚合函数一起使用。","link":"#having-having-子句指定-select-语句应仅返回聚合值满足指定条件的行。它被添加到-sql-语言中-因为-where-关键字不能与聚合函数一起使用。","children":[]}]},{"level":2,"title":"修改数据的查询","slug":"修改数据的查询","link":"#修改数据的查询","children":[{"level":3,"title":"INSERT INTO: 用于在表中插入新记录/行","slug":"insert-into-用于在表中插入新记录-行","link":"#insert-into-用于在表中插入新记录-行","children":[]},{"level":3,"title":"UPDATE: 用于修改表中的现有记录/行","slug":"update-用于修改表中的现有记录-行","link":"#update-用于修改表中的现有记录-行","children":[]},{"level":3,"title":"DELETE: 用于删除表中的现有记录/行","slug":"delete-用于删除表中的现有记录-行","link":"#delete-用于删除表中的现有记录-行","children":[]}]},{"level":2,"title":"聚合查询","slug":"聚合查询","link":"#聚合查询","children":[{"level":3,"title":"COUNT: 返回出现次数","slug":"count-返回出现次数","link":"#count-返回出现次数","children":[]},{"level":3,"title":"MIN() and MAX(): 返回所选列的最小/最大值","slug":"min-and-max-返回所选列的最小-最大值","link":"#min-and-max-返回所选列的最小-最大值","children":[]},{"level":3,"title":"AVG(): 返回数字列的平均值","slug":"avg-返回数字列的平均值","link":"#avg-返回数字列的平均值","children":[]},{"level":3,"title":"SUM(): 返回数值列的总和","slug":"sum-返回数值列的总和","link":"#sum-返回数值列的总和","children":[]}]},{"level":2,"title":"连接查询","slug":"连接查询","link":"#连接查询","children":[{"level":3,"title":"INNER JOIN: 内连接，返回在两张表中具有匹配值的记录","slug":"inner-join-内连接-返回在两张表中具有匹配值的记录","link":"#inner-join-内连接-返回在两张表中具有匹配值的记录","children":[]},{"level":3,"title":"LEFT (OUTER) JOIN: 左外连接，返回左表（table1）中的所有记录，以及右表中的匹配记录（table2）","slug":"left-outer-join-左外连接-返回左表-table1-中的所有记录-以及右表中的匹配记录-table2","link":"#left-outer-join-左外连接-返回左表-table1-中的所有记录-以及右表中的匹配记录-table2","children":[]},{"level":3,"title":"RIGHT (OUTER) JOIN: 右外连接，返回右表（table2）中的所有记录，以及左表（table1）中匹配的记录","slug":"right-outer-join-右外连接-返回右表-table2-中的所有记录-以及左表-table1-中匹配的记录","link":"#right-outer-join-右外连接-返回右表-table2-中的所有记录-以及左表-table1-中匹配的记录","children":[]},{"level":3,"title":"FULL (OUTER) JOIN: 全外连接，全连接是左右外连接的并集. 连接表包含被连接的表的所有记录, 如果缺少匹配的记录, 以 NULL 填充。","slug":"full-outer-join-全外连接-全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-null-填充。","link":"#full-outer-join-全外连接-全连接是左右外连接的并集-连接表包含被连接的表的所有记录-如果缺少匹配的记录-以-null-填充。","children":[]},{"level":3,"title":"Self JOIN: 自连接，表自身连接","slug":"self-join-自连接-表自身连接","link":"#self-join-自连接-表自身连接","children":[]}]},{"level":2,"title":"视图查询","slug":"视图查询","link":"#视图查询","children":[{"level":3,"title":"CREATE: 创建视图","slug":"create-创建视图","link":"#create-创建视图","children":[]},{"level":3,"title":"SELECT: 检索视图","slug":"select-检索视图","link":"#select-检索视图","children":[]},{"level":3,"title":"DROP: 删除视图","slug":"drop-删除视图","link":"#drop-删除视图","children":[]}]},{"level":2,"title":"修改表的查询","slug":"修改表的查询","link":"#修改表的查询","children":[{"level":3,"title":"ADD: 添加字段","slug":"add-添加字段","link":"#add-添加字段","children":[]},{"level":3,"title":"MODIFY: 修改字段数据类型","slug":"modify-修改字段数据类型","link":"#modify-修改字段数据类型","children":[]},{"level":3,"title":"DROP: 删除字段","slug":"drop-删除字段","link":"#drop-删除字段","children":[]}]}],"git":{"createdTime":1739845898000,"updatedTime":1739845898000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":4.24,"words":1272},"filePathRelative":"posts/02.database/03.关系型数据库/01.综合/99.SqlCheatSheet.md","localizedDate":"2022年7月16日","excerpt":"\\n<h2>查找数据的查询</h2>\\n<h3><strong>SELECT</strong>: 用于从数据库中选择数据</h3>\\n<ul>\\n<li><code>SELECT</code> * <code>FROM</code> table_name;</li>\\n</ul>\\n<h3><strong>DISTINCT</strong>: 用于过滤掉重复的值并返回指定列的行</h3>\\n<ul>\\n<li><code>SELECT DISTINCT</code> column_name;</li>\\n</ul>\\n<h3><strong>WHERE</strong>: 用于过滤记录/行</h3>\\n<ul>\\n<li><code>SELECT</code> column1, column2 <code>FROM</code> table_name <code>WHERE</code> condition;</li>\\n<li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>AND</code> condition2;</li>\\n<li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>OR</code> condition2;</li>\\n<li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE NOT</code> condition;</li>\\n<li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE</code> condition1 <code>AND</code> (condition2 <code>OR</code> condition3);</li>\\n<li><code>SELECT</code> * <code>FROM</code> table_name <code>WHERE EXISTS</code> (<code>SELECT</code> column_name <code>FROM</code> table_name <code>WHERE</code> condition);</li>\\n</ul>","autoDesc":true}');export{r as comp,E as data};
