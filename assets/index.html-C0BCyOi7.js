import{_ as t,c as i,b as n,o as r}from"./app-D4aAnUWn.js";const a={};function o(l,e){return r(),i("div",null,e[0]||(e[0]=[n('<h1 id="用户数据报协议-udp" tabindex="-1"><a class="header-anchor" href="#用户数据报协议-udp"><span>用户数据报协议 UDP</span></a></h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/1559263939493.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>UDP 是无连接的。数据报（类似于数据包）只在数据报级别有保证。数据报可能会无序的到达目的地，也有可能会遗失。UDP 不支持拥塞控制。虽然不如 TCP 那样有保证，但 UDP 通常效率更高。</p><p>UDP 可以通过广播将数据报发送至子网内的所有设备。这对 <a href="https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol" target="_blank" rel="noopener noreferrer">DHCP</a> 很有用，因为子网内的设备还没有分配 IP 地址，而 IP 对于 TCP 是必须的。</p><p>UDP 可靠性更低但适合用在网络电话、视频聊天，流媒体和实时多人游戏上。</p><p>以下情况使用 UDP 代替 TCP：</p><ul><li>你需要低延迟</li><li>相对于数据丢失更糟的是数据延迟</li><li>你想实现自己的错误校正方法</li></ul><h3 id="udp-特点" tabindex="-1"><a class="header-anchor" href="#udp-特点"><span>UDP 特点</span></a></h3><ol><li><strong>无连接的</strong>，即发送数据之前不需要建立连接，因此减少了开销和发送数据之前的时延。</li><li><strong>不保证可靠交付</strong>，因此主机不需要为此复杂的连接状态表</li><li><strong>面向报文的</strong>，意思是 UDP 对应用层交下来的报文，既不合并，也不拆分，而是保留这些报文的边界，在添加首部后向下交给 IP 层。</li><li><strong>没有阻塞控制</strong>，因此网络出现的拥塞不会使发送方的发送速率降低。</li><li><strong>支持一对一、一对多、多对一和多对多的交互通信</strong>，也即是提供广播和多播的功能。</li><li><strong>首部开销小</strong>，首部只有 8 个字节，分为四部分。</li></ol><h3 id="udp-应用场景" tabindex="-1"><a class="header-anchor" href="#udp-应用场景"><span>UDP 应用场景</span></a></h3><ol><li>名字转换（DNS）</li><li>文件传送（TFTP）</li><li>路由选择协议（RIP）</li><li>IP 地址配置（BOOTP，DHTP）</li><li>网络管理（SNMP）</li><li>远程文件服务（NFS）</li><li>IP 电话</li><li>流式多媒体通信</li></ol><h2 id="udp-报文" tabindex="-1"><a class="header-anchor" href="#udp-报文"><span>UDP 报文</span></a></h2><p>UDP 数据报分为数据字段和首部字段。<br> 首部字段只有 8 个字节，由四个字段组成，每个字段的长度是 2 个字节。</p><p><strong>首部各字段意义</strong>：</p><ol><li><strong>源端口</strong>：源端口号，在需要对方回信时选用，不需要时可全 0.</li><li><strong>目的端口</strong>：目的端口号，在终点交付报文时必须要使用到。</li><li><strong>长度</strong>：UDP 用户数据报的长度，在只有首部的情况，其最小值是 8 。</li><li><strong>检验和</strong>：检测 UDP 用户数据报在传输中是否有错，有错就丢弃。</li></ol>',16)]))}const s=t(a,[["render",o],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/pages/4eee26/","title":"用户数据报协议 UDP","lang":"zh-CN","frontmatter":{"title":"用户数据报协议 UDP","date":"2019-05-31T11:51:00.000Z","order":4,"categories":["网络","网络协议"],"tags":["网络","网络协议","UDP"],"permalink":"/pages/4eee26/","description":"用户数据报协议 UDP 简介 imgimg UDP 是无连接的。数据报（类似于数据包）只在数据报级别有保证。数据报可能会无序的到达目的地，也有可能会遗失。UDP 不支持拥塞控制。虽然不如 TCP 那样有保证，但 UDP 通常效率更高。 UDP 可以通过广播将数据报发送至子网内的所有设备。这对 DHCP 很有用，因为子网内的设备还没有分配 IP 地址，而...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/4eee26/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"用户数据报协议 UDP"}],["meta",{"property":"og:description","content":"用户数据报协议 UDP 简介 imgimg UDP 是无连接的。数据报（类似于数据包）只在数据报级别有保证。数据报可能会无序的到达目的地，也有可能会遗失。UDP 不支持拥塞控制。虽然不如 TCP 那样有保证，但 UDP 通常效率更高。 UDP 可以通过广播将数据报发送至子网内的所有设备。这对 DHCP 很有用，因为子网内的设备还没有分配 IP 地址，而..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/dunwu/images/master/snap/1559263939493.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"网络"}],["meta",{"property":"article:tag","content":"网络协议"}],["meta",{"property":"article:tag","content":"UDP"}],["meta",{"property":"article:published_time","content":"2019-05-31T11:51:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用户数据报协议 UDP\\",\\"image\\":[\\"https://raw.githubusercontent.com/dunwu/images/master/snap/1559263939493.png\\"],\\"datePublished\\":\\"2019-05-31T11:51:00.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[{"level":3,"title":"UDP 特点","slug":"udp-特点","link":"#udp-特点","children":[]},{"level":3,"title":"UDP 应用场景","slug":"udp-应用场景","link":"#udp-应用场景","children":[]}]},{"level":2,"title":"UDP 报文","slug":"udp-报文","link":"#udp-报文","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":2.2,"words":659},"filePathRelative":"posts/13.网络/02.网络协议/04.UDP.md","localizedDate":"2019年5月31日","excerpt":"\\n<h2>简介</h2>\\n<figure><img src=\\"https://raw.githubusercontent.com/dunwu/images/master/snap/1559263939493.png\\" alt=\\"img\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>img</figcaption></figure>\\n<p>UDP 是无连接的。数据报（类似于数据包）只在数据报级别有保证。数据报可能会无序的到达目的地，也有可能会遗失。UDP 不支持拥塞控制。虽然不如 TCP 那样有保证，但 UDP 通常效率更高。</p>\\n<p>UDP 可以通过广播将数据报发送至子网内的所有设备。这对 <a href=\\"https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">DHCP</a> 很有用，因为子网内的设备还没有分配 IP 地址，而 IP 对于 TCP 是必须的。</p>","autoDesc":true}');export{s as comp,g as data};
