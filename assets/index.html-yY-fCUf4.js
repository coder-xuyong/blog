import{_ as e,c as s,b as a,o as n}from"./app-MqdbryXy.js";const t={};function h(l,i){return n(),s("div",null,i[0]||(i[0]=[a(`<h1 id="初识-python" tabindex="-1"><a class="header-anchor" href="#初识-python"><span>初识 Python</span></a></h1><h2 id="python-简介" tabindex="-1"><a class="header-anchor" href="#python-简介"><span>Python 简介</span></a></h2><p>Python 是一种广泛使用的解释型、高级和通用的编程语言。Python 支持多种编程范型，包括结构化、过程式、反射式、面向对象和函数式编程。它拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且其本身拥有一个巨大而广泛的标准库。</p><h3 id="python-历史" tabindex="-1"><a class="header-anchor" href="#python-历史"><span>Python 历史</span></a></h3><p>1991 年，Python 的第一个解释器诞生。</p><p>1994 年，Python 1.0 版本发布。它包含了异常处理、函数和模块等基本特性。</p><p>2000 年，Python 2.0 版本发布。它引入了新的特性，如<a href="https://zh.wikipedia.org/wiki/%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC%E5%BC%8F" target="_blank" rel="noopener noreferrer">列表推导式</a>、垃圾回收机制等。</p><p>2008 年，Python 3.0 版本发布。它进行了重大修订而不能完全后向兼容。</p><p>2020 年，Python 2.0 停止更新。</p><h3 id="python-应用" tabindex="-1"><a class="header-anchor" href="#python-应用"><span>Python 应用</span></a></h3><p>Python 在以下领域都有用武之地。</p><ul><li>后端开发 - Python / Java / Go / PHP</li><li>DevOps - Python / Shell / Ruby</li><li>数据采集 - Python / C++ / Java</li><li>量化交易 - Python / C++ / R</li><li>数据科学 - Python / R / Julia / Matlab</li><li>机器学习 - Python / R / C++ / Julia</li><li>自动化测试 - Python / Shell</li></ul><h2 id="python-开发环境" tabindex="-1"><a class="header-anchor" href="#python-开发环境"><span>Python 开发环境</span></a></h2><p>目前，Python 有两个版本，一个是 2.x 版，一个是 3.x 版，这两个版本是不兼容的。由于 3.x 版本越来越普及，所以推荐安装 3.x 版本。</p><h3 id="安装-python" tabindex="-1"><a class="header-anchor" href="#安装-python"><span>安装 Python</span></a></h3><h4 id="linux" tabindex="-1"><a class="header-anchor" href="#linux"><span>Linux</span></a></h4><p>Linux 环境自带了 Python 2.x 版本，但是如果要更新到 3.x 的版本，可以在 <a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">Python 官网</a> 下载 Python 的源代码并通过源代码构建安装的方式进行安装，具体的步骤如下所示（以 CentOS 为例）：</p><p>（1）安装依赖库（因为没有这些依赖库可能在源代码构件安装时因为缺失底层依赖库而失败）。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">yum</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gcc</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zlib-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bzip2-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openssl-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ncurses-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sqlite-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> readline-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tk-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gdbm-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> db4-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libpcap-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xz-devel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> libffi-devel</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>（2）下载 Python 源代码并解压缩到指定目录。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://www.python.org/ftp/python/3.7.6/Python-3.7.6.tar.xz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">xz</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Python-3.7.6.tar.xz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -xvf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Python-3.7.6.tar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）切换至 Python 源代码目录并执行下面的命令进行配置和安装。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Python-3.7.6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./configure</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --prefix=/usr/local/python37</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --enable-optimizations</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）修改 .bash_profile 文件</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ~</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .bash_profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>配置 PATH 环境变量并使其生效</p><div class="language-powershell line-numbers-mode" data-highlighter="shiki" data-ext="powershell" data-title="powershell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ... 此处省略上面的代码 ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">export PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PATH</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">usr</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">local</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">python37</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ... 此处省略下面的代码 ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（5）激活环境变量</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">source</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .bash_profile</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="mac" tabindex="-1"><a class="header-anchor" href="#mac"><span>Mac</span></a></h4><p>Mac 系统自带的 Python 版本是 2.7。要安装 Python 3.x，有两个方法：</p><p>方法一、从 <a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">Python 官网</a> 下载 Python 的<a href="https://www.python.org/downloads/" target="_blank" rel="noopener noreferrer">安装程序</a>，下载后双击运行并安装。</p><p>方法二、如果安装了 <a href="https://brew.sh/" target="_blank" rel="noopener noreferrer">Homebrew</a>，直接通过命令 <code>brew install python3</code> 安装即可。</p><h4 id="windows" tabindex="-1"><a class="header-anchor" href="#windows"><span>Windows</span></a></h4><p>从 <a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">Python 官网</a> 下载合适的 Windows 安装版本（64 位还是 32 位），下载后双击运行并安装。</p><blockquote><p>注：要勾选 <code>Add Python 3.x to PATH</code> 选项，将安装路径自动添加到环境变量，否则需要自行配置。</p></blockquote><h3 id="运行-python" tabindex="-1"><a class="header-anchor" href="#运行-python"><span>运行 Python</span></a></h3><p>执行以下命令可以检查 python 版本：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>python --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>直接执行 python 命令可以进入交互式环境。</p><h3 id="第一个程序" tabindex="-1"><a class="header-anchor" href="#第一个程序"><span>第一个程序</span></a></h3><p>新建一个 <code>hello.py</code> 文件，内容如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;hello world&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在终端执行如下命令：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">python</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hello.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>打印如下内容</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>hello world</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="python-开发工具" tabindex="-1"><a class="header-anchor" href="#python-开发工具"><span>Python 开发工具</span></a></h2><h3 id="pycharm" tabindex="-1"><a class="header-anchor" href="#pycharm"><span>PyCharm</span></a></h3><p>PyCharm 是由 JetBrains 打造的一款 Python IDE，支持 macOS、 Windows、 Linux 系统。</p><p>我认为，<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener noreferrer">PyCharm</a> 是最好用的 Python IDE，功能丰富，UI 很酷，缺点是正版比较贵。</p><figure><img src="https://www.jetbrains.com/pycharm/img/screenshots/code-completion_animation.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="vscode" tabindex="-1"><a class="header-anchor" href="#vscode"><span>VSCode</span></a></h3><p><a href="https://github.com/microsoft/vscode" target="_blank" rel="noopener noreferrer">VSCode</a>（全称：Visual Studio Code）是一款由微软开发且跨平台的免费源代码编辑器，VSCode 开发环境非常简单易用。</p><h3 id="pip" tabindex="-1"><a class="header-anchor" href="#pip"><span>pip</span></a></h3><p>pip 是 Python 包管理工具，该工具提供了对 Python 包的查找、下载、安装、卸载的功能。</p><p>目前最新的 Python 版本已经预装了 pip。</p><p><strong>查看是否已经安装 pip</strong>，可以使用以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip --version</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>下载安装包</strong>，可以使用以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip install some-package-name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>卸载安装包</strong>，可以使用以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip uninstall some-package-name</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>查看已安装的包</strong>，可以使用以下命令：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="ipython" tabindex="-1"><a class="header-anchor" href="#ipython"><span>IPython</span></a></h3><p>IPython 是一种基于 Python 的交互式解释器。相较于原生的 Python 交互式环境，IPython 提供了更为强大的编辑和交互功能。可以通过 Python 的包管理工具 pip 安装 IPython，具体的操作如下所示。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip install ipython</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>pip3 install ipython</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="anaconda" tabindex="-1"><a class="header-anchor" href="#anaconda"><span>Anaconda</span></a></h3><p>Anaconda 是一个集成的数据科学和机器学习环境，其中包括了 Python 解释器以及大量常用的数据科学库和工具。Anaconda 发行版包含了 Python。</p><p>Anaconda 包及其依赖项和环境的管理工具为 conda 命令，与传统的 Python pip 工具相比 Anaconda 的conda 可以更方便地在不同环境之间进行切换，环境管理较为简单。</p><p>Anaconda详细安装与介绍参考：<a href="https://www.runoob.com/python-qt/anaconda-tutorial.html" target="_blank" rel="noopener noreferrer">Anaconda 教程。</a></p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://zh.wikipedia.org/wiki/Python" target="_blank" rel="noopener noreferrer">维基百科-Python</a></li></ul>`,76)]))}const p=e(t,[["render",h],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/pages/c518fe/","title":"初识 Python","lang":"zh-CN","frontmatter":{"title":"初识 Python","categories":["Python"],"tags":["Python"],"date":"2024-03-28T08:20:21.000Z","permalink":"/pages/c518fe/","description":"初识 Python Python 简介 Python 是一种广泛使用的解释型、高级和通用的编程语言。Python 支持多种编程范型，包括结构化、过程式、反射式、面向对象和函数式编程。它拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且其本身拥有一个巨大而广泛的标准库。 Python 历史 1991 年，Python 的第一个解释器诞生。 199...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/c518fe/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"初识 Python"}],["meta",{"property":"og:description","content":"初识 Python Python 简介 Python 是一种广泛使用的解释型、高级和通用的编程语言。Python 支持多种编程范型，包括结构化、过程式、反射式、面向对象和函数式编程。它拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且其本身拥有一个巨大而广泛的标准库。 Python 历史 1991 年，Python 的第一个解释器诞生。 199..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.jetbrains.com/pycharm/img/screenshots/code-completion_animation.gif"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2024-03-28T08:20:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初识 Python\\",\\"image\\":[\\"https://www.jetbrains.com/pycharm/img/screenshots/code-completion_animation.gif\\"],\\"datePublished\\":\\"2024-03-28T08:20:21.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"Python 简介","slug":"python-简介","link":"#python-简介","children":[{"level":3,"title":"Python 历史","slug":"python-历史","link":"#python-历史","children":[]},{"level":3,"title":"Python 应用","slug":"python-应用","link":"#python-应用","children":[]}]},{"level":2,"title":"Python 开发环境","slug":"python-开发环境","link":"#python-开发环境","children":[{"level":3,"title":"安装 Python","slug":"安装-python","link":"#安装-python","children":[]},{"level":3,"title":"运行 Python","slug":"运行-python","link":"#运行-python","children":[]},{"level":3,"title":"第一个程序","slug":"第一个程序","link":"#第一个程序","children":[]}]},{"level":2,"title":"Python 开发工具","slug":"python-开发工具","link":"#python-开发工具","children":[{"level":3,"title":"PyCharm","slug":"pycharm","link":"#pycharm","children":[]},{"level":3,"title":"VSCode","slug":"vscode","link":"#vscode","children":[]},{"level":3,"title":"pip","slug":"pip","link":"#pip","children":[]},{"level":3,"title":"IPython","slug":"ipython","link":"#ipython","children":[]},{"level":3,"title":"Anaconda","slug":"anaconda","link":"#anaconda","children":[]}]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":4.21,"words":1262},"filePathRelative":"posts/编程/03.Python/01.基础特性/00.初识Python.md","localizedDate":"2024年3月28日","excerpt":"\\n<h2>Python 简介</h2>\\n<p>Python 是一种广泛使用的解释型、高级和通用的编程语言。Python 支持多种编程范型，包括结构化、过程式、反射式、面向对象和函数式编程。它拥有动态类型系统和垃圾回收功能，能够自动管理内存使用，并且其本身拥有一个巨大而广泛的标准库。</p>\\n<h3>Python 历史</h3>\\n<p>1991 年，Python 的第一个解释器诞生。</p>\\n<p>1994 年，Python 1.0 版本发布。它包含了异常处理、函数和模块等基本特性。</p>\\n<p>2000 年，Python 2.0 版本发布。它引入了新的特性，如<a href=\\"https://zh.wikipedia.org/wiki/%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC%E5%BC%8F\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">列表推导式</a>、垃圾回收机制等。</p>","autoDesc":true}');export{p as comp,d as data};
