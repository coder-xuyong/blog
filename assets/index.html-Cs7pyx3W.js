import{_ as i,c as e,b as a,o as n}from"./app-thRMtbH9.js";const l={};function t(d,s){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="redis-运维" tabindex="-1"><a class="header-anchor" href="#redis-运维"><span>Redis 运维</span></a></h1><blockquote><p><strong>Redis</strong> 是一个高性能的 key-value 数据库。</p><p>SET 操作每秒钟 110000 次；GET 操作每秒钟 81000 次。</p></blockquote><h2 id="redis-安装" tabindex="-1"><a class="header-anchor" href="#redis-安装"><span>Redis 安装</span></a></h2><h3 id="window-下安装" tabindex="-1"><a class="header-anchor" href="#window-下安装"><span>Window 下安装</span></a></h3><p><strong>下载地址：</strong><a href="https://github.com/MSOpenTech/redis/releases" target="_blank" rel="noopener noreferrer">https://github.com/MSOpenTech/redis/releases</a>。</p><p>Redis 支持 32 位和 64 位。这个需要根据你系统平台的实际情况选择，这里我们下载 <strong>Redis-x64-xxx.zip</strong>压缩包到 C 盘，解压后，将文件夹重新命名为 <strong>redis</strong>。</p><p>打开一个 <strong>cmd</strong> 窗口 使用 cd 命令切换目录到 <strong>C:\\redis</strong> 运行 <strong>redis-server.exe redis.windows.conf</strong> 。</p><p>如果想方便的话，可以把 redis 的路径加到系统的环境变量里，这样就省得再输路径了，后面的那个 redis.windows.conf 可以省略，如果省略，会启用默认的。</p><p>这时候另启一个 cmd 窗口，原来的不要关闭，不然就无法访问服务端了。</p><p>切换到 redis 目录下运行 <strong>redis-cli.exe -h 127.0.0.1 -p 6379</strong> 。</p><h3 id="linux-下安装" tabindex="-1"><a class="header-anchor" href="#linux-下安装"><span>Linux 下安装</span></a></h3><p><strong>下载地址：</strong> <a href="http://redis.io/download%EF%BC%8C%E4%B8%8B%E8%BD%BD%E6%9C%80%E6%96%B0%E6%96%87%E6%A1%A3%E7%89%88%E6%9C%AC%E3%80%82" target="_blank" rel="noopener noreferrer">http://redis.io/download，下载最新文档版本。</a></p><p>下载、解压、编译 Redis</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> http://download.redis.io/releases/redis-5.0.4.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> xzf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-5.0.4.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-5.0.4</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">make</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了编译 Redis 源码，你需要 gcc-c++和 tcl。如果你的系统是 CentOS，可以直接执行命令：<code>yum install -y gcc-c++ tcl</code> 来安装。</p><p>进入到解压后的 <code>src</code> 目录，通过如下命令启动 Redis:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">src/redis-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>您可以使用内置的客户端与 Redis 进行交互:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> src/redis-cli</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> foo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bar</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OK</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> foo</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">&quot;bar&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ubuntu-下安装" tabindex="-1"><a class="header-anchor" href="#ubuntu-下安装"><span>Ubuntu 下安装</span></a></h3><p>在 Ubuntu 系统安装 Redis 可以使用以下命令:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt-get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="开机启动" tabindex="-1"><a class="header-anchor" href="#开机启动"><span>开机启动</span></a></h3><ul><li>开机启动配置：<code>echo &quot;/usr/local/bin/redis-server /etc/redis.conf&quot; &gt;&gt; /etc/rc.local</code></li></ul><h3 id="开放防火墙端口" tabindex="-1"><a class="header-anchor" href="#开放防火墙端口"><span>开放防火墙端口</span></a></h3><ul><li>添加规则：<code>iptables -I INPUT -p tcp -m tcp --dport 6379 -j ACCEPT</code></li><li>保存规则：<code>service iptables save</code></li><li>重启 iptables：<code>service iptables restart</code></li></ul><h3 id="redis-安装脚本" tabindex="-1"><a class="header-anchor" href="#redis-安装脚本"><span>Redis 安装脚本</span></a></h3><blockquote><p>CentOS7 环境安装脚本：<a href="https://github.com/dunwu/linux-tutorial/tree/master/codes/linux/soft" target="_blank" rel="noopener noreferrer">软件运维配置脚本集合</a></p></blockquote><p><strong>安装说明</strong></p><ul><li>采用编译方式安装 Redis, 并将其注册为 systemd 服务</li><li>安装路径为：<code>/usr/local/redis</code></li><li>默认下载安装 <code>5.0.4</code> 版本，端口号为：<code>6379</code>，密码为空</li></ul><p><strong>使用方法</strong></p><ul><li>默认安装 - 执行以下任意命令即可：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/redis-install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -qO-</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitee.com/turnon/linux-tutorial/raw/master/codes/linux/soft/redis-install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bash</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>自定义安装 - 下载脚本到本地，并按照以下格式执行：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-install.sh</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [version] [port] [password]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>参数说明：</p><ul><li><code>version</code> - redis 版本号</li><li><code>port</code> - redis 服务端口号</li><li><code>password</code> - 访问密码</li></ul><h2 id="redis-单机使用和配置" tabindex="-1"><a class="header-anchor" href="#redis-单机使用和配置"><span>Redis 单机使用和配置</span></a></h2><h3 id="启动-redis" tabindex="-1"><a class="header-anchor" href="#启动-redis"><span>启动 Redis</span></a></h3><p><strong>启动 redis 服务</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/src</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./redis-server</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>启动 redis 客户端</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/src</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./redis-cli</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>查看 redis 是否启动</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis-cli</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>以上命令将打开以下终端：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:637</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">9&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>127.0.0.1 是本机 IP ，6379 是 redis 服务端口。现在我们输入 PING 命令。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:637</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">9&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ping</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PONG</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>以上说明我们已经成功启动了 redis。</p><h3 id="redis-常见配置" tabindex="-1"><a class="header-anchor" href="#redis-常见配置"><span>Redis 常见配置</span></a></h3><blockquote><p>Redis 默认的配置文件是根目录下的 <code>redis.conf</code> 文件。</p><p>如果需要指定特定文件作为配置文件，需要使用命令： <code>./redis-server -c xxx.conf</code></p><p>每次修改配置后，需要重启才能生效。</p><p>Redis 官方默认配置：</p><ul><li>自描述文档 <a href="https://raw.githubusercontent.com/antirez/redis/2.8/redis.conf" target="_blank" rel="noopener noreferrer">redis.conf for Redis 2.8</a></li><li>自描述文档 <a href="https://raw.githubusercontent.com/antirez/redis/2.6/redis.conf" target="_blank" rel="noopener noreferrer">redis.conf for Redis 2.6</a>.</li><li>自描述文档 <a href="https://raw.githubusercontent.com/antirez/redis/2.4/redis.conf" target="_blank" rel="noopener noreferrer">redis.conf for Redis 2.4</a>.</li></ul><p>自 Redis2.6 起就可以直接通过命令行传递 Redis 配置参数。这种方法可以用于测试。自 Redis2.6 起就可以直接通过命令行传递 Redis 配置参数。这种方法可以用于测试。</p></blockquote><h3 id="设为守护进程" tabindex="-1"><a class="header-anchor" href="#设为守护进程"><span>设为守护进程</span></a></h3><p>Redis 默认以非守护进程方式启动，而通常我们会将 Redis 设为守护进程启动方式，配置：<code>daemonize yes</code></p><h4 id="远程访问" tabindex="-1"><a class="header-anchor" href="#远程访问"><span>远程访问</span></a></h4><p>Redis 默认绑定 127.0.0.1，这样就只能本机才能访问，若要 Redis 允许远程访问，需要配置：<code>bind 0.0.0.0</code></p><h4 id="设置密码" tabindex="-1"><a class="header-anchor" href="#设置密码"><span>设置密码</span></a></h4><p>Redis 默认访问不需要密码，如果需要设置密码，需要如下配置：</p><ul><li><code>protected-mode yes</code></li><li><code>requirepass &lt;密码&gt;</code></li></ul><h4 id="配置参数表" tabindex="-1"><a class="header-anchor" href="#配置参数表"><span>配置参数表</span></a></h4><table><thead><tr><th style="text-align:left;">配置项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>daemonize no</code></td><td style="text-align:left;">Redis 默认不是以守护进程的方式运行，可以通过该配置项修改，使用 yes 启用守护进程（Windows 不支持守护线程的配置为 no ）</td></tr><tr><td style="text-align:left;"><code>pidfile /var/run/redis.pid</code></td><td style="text-align:left;">当 Redis 以守护进程方式运行时，Redis 默认会把 pid 写入 /var/run/redis.pid 文件，可以通过 pidfile 指定</td></tr><tr><td style="text-align:left;"><code>port 6379</code></td><td style="text-align:left;">指定 Redis 监听端口，默认端口为 6379，作者在自己的一篇博文中解释了为什么选用 6379 作为默认端口，因为 6379 在手机按键上 MERZ 对应的号码，而 MERZ 取自意大利歌女 Alessia Merz 的名字</td></tr><tr><td style="text-align:left;"><code>bind 127.0.0.1</code></td><td style="text-align:left;">绑定的主机地址</td></tr><tr><td style="text-align:left;"><code>timeout 300</code></td><td style="text-align:left;">当客户端闲置多长时间后关闭连接，如果指定为 0，表示关闭该功能</td></tr><tr><td style="text-align:left;"><code>loglevel notice</code></td><td style="text-align:left;">指定日志记录级别，Redis 总共支持四个级别：debug、verbose、notice、warning，默认为 notice</td></tr><tr><td style="text-align:left;"><code>logfile stdout</code></td><td style="text-align:left;">日志记录方式，默认为标准输出，如果配置 Redis 为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给 /dev/null</td></tr><tr><td style="text-align:left;"><code>databases 16</code></td><td style="text-align:left;">设置数据库的数量，默认数据库为 0，可以使用 SELECT 命令在连接上指定数据库 id</td></tr><tr><td style="text-align:left;"><code>save &lt;seconds&gt; &lt;changes&gt;</code> Redis 默认配置文件中提供了三个条件：<strong>save 900 1</strong>、<strong>save 300 10</strong>、<strong>save 60 10000</strong> 分别表示 900 秒（15 分钟）内有 1 个更改，300 秒（5 分钟）内有 10 个更改以及 60 秒内有 10000 个更改。</td><td style="text-align:left;">指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合</td></tr><tr><td style="text-align:left;"><code>rdbcompression yes</code></td><td style="text-align:left;">指定存储至本地数据库时是否压缩数据，默认为 yes，Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大</td></tr><tr><td style="text-align:left;"><code>dbfilename dump.rdb</code></td><td style="text-align:left;">指定本地数据库文件名，默认值为 dump.rdb</td></tr><tr><td style="text-align:left;"><code>dir ./</code></td><td style="text-align:left;">指定本地数据库存放目录</td></tr><tr><td style="text-align:left;"><code>slaveof &lt;masterip&gt; &lt;masterport&gt;</code></td><td style="text-align:left;">设置当本机为 slav 服务时，设置 master 服务的 IP 地址及端口，在 Redis 启动时，它会自动从 master 进行数据同步</td></tr><tr><td style="text-align:left;"><code>masterauth &lt;master-password&gt;</code></td><td style="text-align:left;">当 master 服务设置了密码保护时，slav 服务连接 master 的密码</td></tr><tr><td style="text-align:left;"><code>requirepass foobared</code></td><td style="text-align:left;">设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 <code>AUTH &lt;password&gt;</code> 命令提供密码，默认关闭</td></tr><tr><td style="text-align:left;"><code>maxclients 128</code></td><td style="text-align:left;">设置同一时间最大客户端连接数，默认无限制，Redis 可以同时打开的客户端连接数为 Redis 进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis 会关闭新的连接并向客户端返回 max number of clients reached 错误信息</td></tr><tr><td style="text-align:left;"><code>maxmemory &lt;bytes&gt;</code></td><td style="text-align:left;">指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区</td></tr><tr><td style="text-align:left;"><code>appendonly no</code></td><td style="text-align:left;">指定是否在每次更新操作后进行日志记录，Redis 在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。因为 redis 本身同步数据文件是按上面 save 条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为 no</td></tr><tr><td style="text-align:left;"><code>appendfilename appendonly.aof</code></td><td style="text-align:left;">指定更新日志文件名，默认为 appendonly.aof</td></tr><tr><td style="text-align:left;"><code>appendfsync everysec</code></td><td style="text-align:left;">指定更新日志条件，共有 3 个可选值：<strong>no</strong>：表示等操作系统进行数据缓存同步到磁盘（快）<strong>always</strong>：表示每次更新操作后手动调用 fsync() 将数据写到磁盘（慢，安全）<strong>everysec</strong>：表示每秒同步一次（折中，默认值）</td></tr><tr><td style="text-align:left;"><code>vm-enabled no</code></td><td style="text-align:left;">指定是否启用虚拟内存机制，默认值为 no，简单的介绍一下，VM 机制将数据分页存放，由 Redis 将访问量较少的页即冷数据 swap 到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析 Redis 的 VM 机制）</td></tr><tr><td style="text-align:left;"><code>vm-swap-file /tmp/redis.swap</code></td><td style="text-align:left;">虚拟内存文件路径，默认值为 /tmp/redis.swap，不可多个 Redis 实例共享</td></tr><tr><td style="text-align:left;"><code>vm-max-memory 0</code></td><td style="text-align:left;">将所有大于 vm-max-memory 的数据存入虚拟内存，无论 vm-max-memory 设置多小，所有索引数据都是内存存储的(Redis 的索引数据 就是 keys)，也就是说，当 vm-max-memory 设置为 0 的时候，其实是所有 value 都存在于磁盘。默认值为 0</td></tr><tr><td style="text-align:left;"><code>vm-page-size 32</code></td><td style="text-align:left;">Redis swap 文件分成了很多的 page，一个对象可以保存在多个 page 上面，但一个 page 上不能被多个对象共享，vm-page-size 是要根据存储的 数据大小来设定的，作者建议如果存储很多小对象，page 大小最好设置为 32 或者 64bytes；如果存储很大大对象，则可以使用更大的 page，如果不确定，就使用默认值</td></tr><tr><td style="text-align:left;"><code>vm-pages 134217728</code></td><td style="text-align:left;">设置 swap 文件中的 page 数量，由于页表（一种表示页面空闲或使用的 bitmap）是在放在内存中的，，在磁盘上每 8 个 pages 将消耗 1byte 的内存。</td></tr><tr><td style="text-align:left;"><code>vm-max-threads 4</code></td><td style="text-align:left;">设置访问 swap 文件的线程数,最好不要超过机器的核数,如果设置为 0,那么所有对 swap 文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为 4</td></tr><tr><td style="text-align:left;"><code>glueoutputbuf yes</code></td><td style="text-align:left;">设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启</td></tr><tr><td style="text-align:left;"><code>hash-max-zipmap-entries 64 hash-max-zipmap-value 512</code></td><td style="text-align:left;">指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法</td></tr><tr><td style="text-align:left;"><code>activerehashing yes</code></td><td style="text-align:left;">指定是否激活重置哈希，默认为开启（后面在介绍 Redis 的哈希算法时具体介绍）</td></tr><tr><td style="text-align:left;"><code>include /path/to/local.conf</code></td><td style="text-align:left;">指定包含其它的配置文件，可以在同一主机上多个 Redis 实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件</td></tr></tbody></table><h3 id="压力测试" tabindex="-1"><a class="header-anchor" href="#压力测试"><span>压力测试</span></a></h3><blockquote><p>参考官方文档：<a href="https://redis.io/topics/benchmarks" target="_blank" rel="noopener noreferrer">How fast is Redis?</a></p></blockquote><p>Redis 自带了一个性能测试工具：<code>redis-benchmark</code></p><p><strong>（1）基本测试</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis-benchmark</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><code>-q</code> 表示静默（quiet）执行</li><li><code>-n 100000</code> 请求 10 万次</li></ul><p><strong>（2）测试指定读写指令</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-benchmark</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set,lpush</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SET:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 74239.05</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> per</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> second</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LPUSH:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 79239.30</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> per</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> second</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>（3）测试 pipeline 模式下指定读写指令</strong></p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">redis-benchmark</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1000000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set,get</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -P</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -q</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SET:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 403063.28</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> per</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> second</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GET:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 508388.41</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> requests</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> per</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> second</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="redis-集群使用和配置" tabindex="-1"><a class="header-anchor" href="#redis-集群使用和配置"><span>Redis 集群使用和配置</span></a></h2><p>Redis 3.0 后支持集群模式。</p><h3 id="集群规划" tabindex="-1"><a class="header-anchor" href="#集群规划"><span>集群规划</span></a></h3><p><code>Redis</code> 集群一般由 <strong>多个节点</strong> 组成，节点数量至少为 <code>6</code> 个，才能保证组成 <strong>完整高可用</strong> 的集群。</p><figure><img src="https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0d1c392?w=1467&amp;h=803&amp;f=png&amp;s=43428" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>理想情况当然是所有节点各自在不同的机器上，首先于资源，本人在部署 Redis 集群时，只得到 3 台服务器。所以，我计划每台服务器部署 2 个 Redis 节点。</p><p>【示例】最简高可用 Redis 集群规划</p><p>机器配置：16G 内存 + 8 核 CPU + 1T 磁盘</p><p>Redis 进程分配 10 G 内存。一般线上生产环境，Redis 的内存尽量不要超过 10g，超过 10g 可能会有问题。</p><p>集群拓扑：三主三从；三哨兵，每个哨兵监听所有主节点。</p><p>估算性能：</p><ul><li>容量：三主，占用 30 G 内存，所以最大存储容量为 30 G。假设每条数据记录平均 大小为 10 K，则最大能存储 300 万条数据。</li><li>吞吐量：单机一般 TPS/QPS 为 五万到八万左右。假设为五万，那么三主三从架构理论上能达到 TPS 15 万，QPS 30 万。</li></ul><h3 id="部署集群" tabindex="-1"><a class="header-anchor" href="#部署集群"><span>部署集群</span></a></h3><blockquote><p>Redis 集群节点的安装与单节点服务相同，差异仅在于部署方式。</p><p>注意：为了演示方便，本示例将所有 Redis 集群节点都部署在一台机器上，实际生产环境中，基本都会将节点部署在不同机器上。要求更高的，可能还要考虑多机房部署。</p></blockquote><p>（1）创建节点目录</p><p>我个人偏好将软件放在 <code>/opt</code> 目录下，在我的机器中，Redis 都安装在 <code>/usr/local/redis</code> 目录下。所以，下面的命令和配置都假设 Redis 安装目录为 <code>/usr/local/redis</code> 。</p><p>确保机器上已经安装了 Redis 后，执行以下命令，创建 Redis 集群节点实例目录：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7002</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7003</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7004</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7005</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7006</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）配置集群节点</p><p>每个实例目录下，新建 <code>redis.conf</code> 配置文件。</p><p>实例配置模板以 7001 节点为例（其他节点，完全替换配置中的端口号 7001 即可），如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 端口号</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7001</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 绑定的主机端口（0.0.0.0 表示允许远程访问）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bind</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 以守护进程方式启动</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">daemonize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开启集群模式</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cluster-enabled</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 集群的配置，配置文件首次启动自动生成</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cluster-config-file</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7001/7001.conf</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 请求超时时间，设置 10 秒</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cluster-node-timeout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 开启 AOF 持久化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendonly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 数据存放目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7001</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 进程文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pidfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7001/7001.pid</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 日志文件</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">logfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/7001/7001.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）批量启动 Redis 节点</p><p>Redis 的 utils/create-cluster 目录下自带了一个名为 create-cluster 的脚本工具，可以利用它来新建、启动、停止、重启 Redis 节点。</p><p>脚本中有几个关键参数：</p><ul><li><code>PORT</code>=30000 - 初始端口号</li><li><code>TIMEOUT</code>=2000 - 超时时间</li><li><code>NODES</code>=6 - 节点数</li><li><code>REPLICAS</code>=1 - 备份数</li></ul><p>脚本中的每个命令项会根据初始端口号，以及设置的节点数，遍历的去执行操作。</p><p>由于前面的规划中，节点端口是从 7001 ~ 7006，所以需要将 PORT 变量设为 7000。</p><p>脚本中启动每个 Redis 节点是通过指定命令行参数来配置属性。所以，我们需要改一下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PORT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">7000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TIMEOUT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">2000</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">NODES</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">6</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ENDPORT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$((</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PORT+NODES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;start&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">then</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    while</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [ $((</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PORT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ENDPORT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ]; </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">do</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        PORT</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">$((</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PORT+1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">        echo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Starting </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">$PORT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        /usr/local/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">\${</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PORT</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/redis.conf</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    done</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    exit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">fi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>好了，在每台服务器上，都执行 <code>./create-cluster start</code> 来启动节点。</p><p>然后，通过 ps 命令来确认 Redis 进程是否已经工作：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># root @ dbClusterDev01 in /usr/local/redis/conf [11:07:55]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      4604</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 11:07</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:7001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [cluster]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      4609</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 11:07</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:7002</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [cluster]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      4614</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 11:07</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:7003</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [cluster]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      4619</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 11:07</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:7004</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [cluster]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      4624</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 11:07</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:7005</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [cluster]</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">root</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      4629</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">     1</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 11:07</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ?</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        00:00:00</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /opt/redis/src/redis-server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.0.0.0:7006</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [cluster]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）启动集群</p><p>通过 <code>redis-cli --cluster create</code> 命令可以自动配置集群，如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">./redis-cli</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cluster</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7001</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7002</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.2:7003</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.2:7004</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.3:7005</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.3:7006</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --cluster-replicas</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>redis-cluster 会根据设置的节点数和副本数自动分片（分配 Hash 虚拟槽 slot），如果满意，输入 yes ，直接开始分片。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Performing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> hash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> slots</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> allocation</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nodes...</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Master[0]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Slots</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5460</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Master[1]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Slots</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5461</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10922</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Master[2]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">Slots</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10923</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16383</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Adding</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> replica</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.2:7004</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Adding</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> replica</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.3:7006</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.2:7003</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Adding</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> replica</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7002</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.3:7005</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b721235997deb6b9a7a2be690b5b9663db8057c6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:[0-5460]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5461 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bda9b7036df0bbefe601bda4ce45d3787a2e9bd9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7002</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   replicates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3623fff69b5243ed18c02a2fbb6f53069b0f1505</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 91523c0391a044da6cc9f53bb965aabe89502187</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.2:7003</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:[5461-10922]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5462 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9d899cbe49dead7b8c4f769920cdb75714a441ae</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.2:7004</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   replicates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b721235997deb6b9a7a2be690b5b9663db8057c6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3623fff69b5243ed18c02a2fbb6f53069b0f1505</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.3:7005</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:[10923-16383]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5461 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a2869dc153ea4977ca790b76483574a5d56cb40e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.3:7006</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   replicates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 91523c0391a044da6cc9f53bb965aabe89502187</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Can</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> I</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> above</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration?</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (type </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;yes&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> accept</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">): yes</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Nodes</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> configuration</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> updated</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Assign</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> different</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> epoch</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> each</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> node</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sending</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CLUSTER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MEET</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> messages</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> join</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cluster</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Waiting</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> the</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cluster</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> join</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">....</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Performing</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Cluster</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Check</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (using </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">node</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7001</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b721235997deb6b9a7a2be690b5b9663db8057c6</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:[0-5460]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5461 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> additional</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> replica</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a2869dc153ea4977ca790b76483574a5d56cb40e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7006</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) slave</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   replicates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 91523c0391a044da6cc9f53bb965aabe89502187</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 91523c0391a044da6cc9f53bb965aabe89502187</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7003</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:[5461-10922]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5462 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> additional</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> replica</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">M:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3623fff69b5243ed18c02a2fbb6f53069b0f1505</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7005</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:[10923-16383]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (5461 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) master</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> additional</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> replica</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 9d899cbe49dead7b8c4f769920cdb75714a441ae</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7004</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) slave</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   replicates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b721235997deb6b9a7a2be690b5b9663db8057c6</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> bda9b7036df0bbefe601bda4ce45d3787a2e9bd9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 127.0.0.1:7002</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   slots:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (0 </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">slots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) slave</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   replicates</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3623fff69b5243ed18c02a2fbb6f53069b0f1505</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[OK] All nodes agree about slots configuration.</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> for</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> open</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> slots...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;&gt;&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Check</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> slots</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> coverage...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[OK] All 16384 slots covered.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（5）日常维护操作</p><ul><li>关闭集群 - <code>./create-cluster stop</code></li><li>检查集群是否健康（指定任意节点即可）：<code>./redis-cli --cluster check &lt;ip:port&gt;</code></li><li>尝试修复集群节点：<code>./redis-cli --cluster fix &lt;ip:port&gt;</code></li></ul><h3 id="部署哨兵" tabindex="-1"><a class="header-anchor" href="#部署哨兵"><span>部署哨兵</span></a></h3><p>redis-cluster 实现了 Redis 的分片、复制。</p><p>但 redis-cluster 没有解决故障转移问题，一旦任意分片的 Master 节点宕机、网络不通，就会导致 redis-cluster 的集群不能工作。为了解决高可用的问题，Redis 提供了 Redis 哨兵来监控 Redis 节点状态，并且会在 Master 宕机时，发起选举，将这个 Master 的一个 Slave 节点选举为 Master。</p><p>（1）创建节点目录</p><p>我个人偏好将软件放在 <code>/opt</code> 目录下，在我的机器中，Redis 都安装在 <code>/usr/local/redis</code> 目录下。所以，下面的命令和配置都假设 Redis 安装目录为 <code>/usr/local/redis</code> 。</p><p>确保机器上已经安装了 Redis 后，执行以下命令，创建 Redis 集群节点实例目录：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/27001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/27002</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mkdir</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/27003</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）配置集群节点</p><p>每个实例目录下，新建 <code>redis.conf</code> 配置文件。</p><p>实例配置模板以 7001 节点为例（其他节点，完全替换配置中的端口号 7001 即可），如下：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 27001</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">daemonize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sentinel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> monitor</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-master</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 172.22.6.3</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 7001</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sentinel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> down-after-milliseconds</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-master</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 5000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sentinel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failover-timeout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-master</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 900000</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sentinel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> parallel-syncs</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> redis-master</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#sentinel auth-pass redis-master 123456</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">logfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/local/redis/conf/27001/27001.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）批量启动哨兵节点</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>/opt/redis/src/redis-sentinel /usr/local/redis/conf/27001/sentinel.conf</span></span>
<span class="line"><span>/opt/redis/src/redis-sentinel /usr/local/redis/conf/27002/sentinel.conf</span></span>
<span class="line"><span>/opt/redis/src/redis-sentinel /usr/local/redis/conf/27003/sentinel.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="扩容" tabindex="-1"><a class="header-anchor" href="#扩容"><span>扩容</span></a></h3><p>（1）查看信息</p><p>进入任意节点</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>./redis-cli -h 172.22.6.3 -p 7001</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>cluster info 查看集群节点状态</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>172.22.6.3:7001&gt; cluster nodes</span></span>
<span class="line"><span>f158bf70bb2767cac271ce4efcfc14ba0b7ca98b 172.22.6.3:7006@17006 slave e7aa182e756b76ec85b471797db9b66e4b2da725 0 1594528179000 6 connected</span></span>
<span class="line"><span>f348e67648460c7a800120d69b4977bf2e4524cb 172.22.6.3:7001@17001 myself,master - 0 1594528179000 1 connected 0-5460</span></span>
<span class="line"><span>52601e2d4af0e64b83f4cc6d20e8316d0ac38b99 172.22.6.3:7004@17004 slave 4802fafe897160c46392c6e569d6f5e466cca696 0 1594528178000 4 connected</span></span>
<span class="line"><span>c6c6a68674ae8aac3c6ec792c8af4dc1228c6c31 172.22.6.3:7005@17005 slave f348e67648460c7a800120d69b4977bf2e4524cb 0 1594528179852 5 connected</span></span>
<span class="line"><span>e7aa182e756b76ec85b471797db9b66e4b2da725 172.22.6.3:7002@17002 master - 0 1594528178000 2 connected 5461-10922</span></span>
<span class="line"><span>4802fafe897160c46392c6e569d6f5e466cca696 172.22.6.3:7003@17003 master - 0 1594528178000 3 connected 10923-16383</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>cluster info 查看集群信息</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>172.22.6.3:7001&gt; cluster info</span></span>
<span class="line"><span>cluster_state:ok</span></span>
<span class="line"><span>cluster_slots_assigned:16384</span></span>
<span class="line"><span>cluster_slots_ok:16384</span></span>
<span class="line"><span>cluster_slots_pfail:0</span></span>
<span class="line"><span>cluster_slots_fail:0</span></span>
<span class="line"><span>cluster_known_nodes:6</span></span>
<span class="line"><span>cluster_size:3</span></span>
<span class="line"><span>cluster_current_epoch:6</span></span>
<span class="line"><span>cluster_my_epoch:1</span></span>
<span class="line"><span>cluster_stats_messages_ping_sent:3406</span></span>
<span class="line"><span>cluster_stats_messages_pong_sent:3569</span></span>
<span class="line"><span>cluster_stats_messages_publish_sent:5035</span></span>
<span class="line"><span>cluster_stats_messages_sent:12010</span></span>
<span class="line"><span>cluster_stats_messages_ping_received:3564</span></span>
<span class="line"><span>cluster_stats_messages_pong_received:3406</span></span>
<span class="line"><span>cluster_stats_messages_meet_received:5</span></span>
<span class="line"><span>cluster_stats_messages_publish_received:5033</span></span>
<span class="line"><span>cluster_stats_messages_received:12008</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）添加节点到集群</p><p>将已启动的节点实例添加到集群中</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>redis-cli --cluster add-node 127.0.0.1:7007 127.0.0.1:7008</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>添加主节点</strong></p><p>添加一组主节点</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>./redis-cli --cluster add-node 172.22.6.3:7007 172.22.6.3:7001</span></span>
<span class="line"><span>./redis-cli --cluster add-node 172.22.6.3:7008 172.22.6.3:7001</span></span>
<span class="line"><span>./redis-cli --cluster add-node 172.22.6.3:7009 172.22.6.3:7001</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看节点状态</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>172.22.6.3:7001&gt; cluster nodes</span></span>
<span class="line"><span>f158bf70bb2767cac271ce4efcfc14ba0b7ca98b 172.22.6.3:7006@17006 slave e7aa182e756b76ec85b471797db9b66e4b2da725 0 1594529342575 6 connected</span></span>
<span class="line"><span>f348e67648460c7a800120d69b4977bf2e4524cb 172.22.6.3:7001@17001 myself,master - 0 1594529340000 1 connected 0-5460</span></span>
<span class="line"><span>55cacf121662833a4a19dbeb4a5df712cfedf77f 172.22.6.3:7009@17009 master - 0 1594529342000 0 connected</span></span>
<span class="line"><span>c6c6a68674ae8aac3c6ec792c8af4dc1228c6c31 172.22.6.3:7005@17005 slave f348e67648460c7a800120d69b4977bf2e4524cb 0 1594529341573 5 connected</span></span>
<span class="line"><span>4802fafe897160c46392c6e569d6f5e466cca696 172.22.6.3:7003@17003 master - 0 1594529343577 3 connected 10923-16383</span></span>
<span class="line"><span>e7aa182e756b76ec85b471797db9b66e4b2da725 172.22.6.3:7002@17002 master - 0 1594529342000 2 connected 5461-10922</span></span>
<span class="line"><span>e5ba78fe629115977a74fbbe1478caf8868d6d55 172.22.6.3:7007@17007 master - 0 1594529341000 0 connected</span></span>
<span class="line"><span>52601e2d4af0e64b83f4cc6d20e8316d0ac38b99 172.22.6.3:7004@17004 slave 4802fafe897160c46392c6e569d6f5e466cca696 0 1594529340000 4 connected</span></span>
<span class="line"><span>79d4fffc2cec210556c3b4c44e63ab506e87eda3 172.22.6.3:7008@17008 master - 0 1594529340000 7 connected</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现，新加入的三个主节点，还没有分配哈希槽，所以，暂时还无法访问。</p><p><strong>添加从节点</strong></p><p>--slave：设置该参数，则新节点以 slave 的角色加入集群<br> --master-id：这个参数需要设置了--slave 才能生效，--master-id 用来指定新节点的 master 节点。如果不设置该参数，则会随机为节点选择 master 节点。</p><p>语法</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>redis-cli --cluster add-node  新节点IP地址：端口    存在节点IP：端口 --cluster-slave （从节点） --cluster-master-id （master节点的ID）</span></span>
<span class="line"><span>redis-cli --cluster add-node   10.42.141.119:6379  10.42.166.105:6379  --cluster-slave   --cluster-master-id  dfa238fff8a7a49230cff7eb74f573f5645c8ec5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>示例</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>./redis-cli --cluster add-node 172.22.6.3:7010 172.22.6.3:7007 --cluster-slave</span></span>
<span class="line"><span>./redis-cli --cluster add-node 172.22.6.3:7011 172.22.6.3:7008 --cluster-slave</span></span>
<span class="line"><span>./redis-cli --cluster add-node 172.22.6.3:7012 172.22.6.3:7009 --cluster-slave</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看状态</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>172.22.6.3:7001&gt; cluster nodes</span></span>
<span class="line"><span>ef5c1b9ce4cc795dc12b2c1e8736a572647b4c3e 172.22.6.3:7011@17011 slave 79d4fffc2cec210556c3b4c44e63ab506e87eda3 0 1594529492043 7 connected</span></span>
<span class="line"><span>f158bf70bb2767cac271ce4efcfc14ba0b7ca98b 172.22.6.3:7006@17006 slave e7aa182e756b76ec85b471797db9b66e4b2da725 0 1594529491943 6 connected</span></span>
<span class="line"><span>f348e67648460c7a800120d69b4977bf2e4524cb 172.22.6.3:7001@17001 myself,master - 0 1594529488000 1 connected 0-5460</span></span>
<span class="line"><span>5140d1129ed850df59c51cf818c4eb74545d9959 172.22.6.3:7010@17010 slave e5ba78fe629115977a74fbbe1478caf8868d6d55 0 1594529488000 0 connected</span></span>
<span class="line"><span>55cacf121662833a4a19dbeb4a5df712cfedf77f 172.22.6.3:7009@17009 master - 0 1594529488000 8 connected</span></span>
<span class="line"><span>c6c6a68674ae8aac3c6ec792c8af4dc1228c6c31 172.22.6.3:7005@17005 slave f348e67648460c7a800120d69b4977bf2e4524cb 0 1594529490000 5 connected</span></span>
<span class="line"><span>4802fafe897160c46392c6e569d6f5e466cca696 172.22.6.3:7003@17003 master - 0 1594529489939 3 connected 10923-16383</span></span>
<span class="line"><span>e7aa182e756b76ec85b471797db9b66e4b2da725 172.22.6.3:7002@17002 master - 0 1594529491000 2 connected 5461-10922</span></span>
<span class="line"><span>e5ba78fe629115977a74fbbe1478caf8868d6d55 172.22.6.3:7007@17007 master - 0 1594529490942 0 connected</span></span>
<span class="line"><span>52601e2d4af0e64b83f4cc6d20e8316d0ac38b99 172.22.6.3:7004@17004 slave 4802fafe897160c46392c6e569d6f5e466cca696 0 1594529491000 4 connected</span></span>
<span class="line"><span>02e9f57b5b45c350dc57acf1c8efa8db136db7b7 172.22.6.3:7012@17012 master - 0 1594529489000 0 connected</span></span>
<span class="line"><span>79d4fffc2cec210556c3b4c44e63ab506e87eda3 172.22.6.3:7008@17008 master - 0 1594529489000 7 connected</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分配哈希槽</p><p>执行 <code>./redis-cli --cluster rebalance 172.22.6.3:7001 --cluster-threshold 1 --cluster-use-empty-masters</code></p><p>参数说明：</p><p>rebalance：表明让 Redis 自动根据节点数进行均衡哈希槽分配。</p><p>--cluster-use-empty-masters：表明</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200712125827.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>执行结束后，查看状态：</p><figure><img src="https://raw.githubusercontent.com/dunwu/images/master/snap/20200712130234.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="redis-命令" tabindex="-1"><a class="header-anchor" href="#redis-命令"><span>Redis 命令</span></a></h2><h3 id="通用命令" tabindex="-1"><a class="header-anchor" href="#通用命令"><span>通用命令</span></a></h3><blockquote><p>命令详细用法，请参考 <a href="https://redis.io/commands" target="_blank" rel="noopener noreferrer"><strong>Redis 命令官方文档</strong></a></p><p>搬迁两张 cheat sheet 图，原址：<a href="https://www.cheatography.com/tasjaevan/cheat-sheets/redis/" target="_blank" rel="noopener noreferrer">https://www.cheatography.com/tasjaevan/cheat-sheets/redis/</a></p></blockquote><figure><img src="https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0b8ea57?w=2230&amp;h=2914&amp;f=png&amp;s=246433" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><figure><img src="https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0e9ba3c?w=2229&amp;h=2890&amp;f=png&amp;s=192997" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h3 id="集群命令" tabindex="-1"><a class="header-anchor" href="#集群命令"><span>集群命令</span></a></h3><ul><li><strong>集群</strong><ul><li><code>cluster info</code> - 打印集群的信息</li><li><code>cluster nodes</code> - 列出集群当前已知的所有节点（ node），以及这些节点的相关信息。</li></ul></li><li><strong>节点</strong><ul><li><code>cluster meet &lt;ip&gt; &lt;port&gt;</code> - 将 ip 和 port 所指定的节点添加到集群当中，让它成为集群的一份子。</li><li><code>cluster forget &lt;node_id&gt;</code> - 从集群中移除 node_id 指定的节点。</li><li><code>cluster replicate &lt;node_id&gt;</code> - 将当前节点设置为 node_id 指定的节点的从节点。</li><li><code>cluster saveconfig</code> - 将节点的配置文件保存到硬盘里面。</li></ul></li><li><strong>槽(slot)</strong><ul><li><code>cluster addslots &lt;slot&gt; [slot ...]</code> - 将一个或多个槽（ slot）指派（ assign）给当前节点。</li><li><code>cluster delslots &lt;slot&gt; [slot ...]</code> - 移除一个或多个槽对当前节点的指派。</li><li><code>cluster flushslots</code> - 移除指派给当前节点的所有槽，让当前节点变成一个没有指派任何槽的节点。</li><li><code>cluster setslot &lt;slot&gt; node &lt;node_id&gt;</code> - 将槽 slot 指派给 node_id 指定的节点，如果槽已经指派给另一个节点，那么先让另一个节点删除该槽&gt;，然后再进行指派。</li><li><code>cluster setslot &lt;slot&gt; migrating &lt;node_id&gt;</code> - 将本节点的槽 slot 迁移到 node_id 指定的节点中。</li><li><code>cluster setslot &lt;slot&gt; importing &lt;node_id&gt;</code> - 从 node_id 指定的节点中导入槽 slot 到本节点。</li><li><code>cluster setslot &lt;slot&gt; stable</code> - 取消对槽 slot 的导入（ import）或者迁移（ migrate）。</li></ul></li><li><strong>键</strong><ul><li><code>cluster keyslot &lt;key&gt;</code> - 计算键 key 应该被放置在哪个槽上。</li><li><code>cluster countkeysinslot &lt;slot&gt;</code> - 返回槽 slot 目前包含的键值对数量。</li><li><code>cluster getkeysinslot &lt;slot&gt; &lt;count&gt;</code> - 返回 count 个 slot 槽中的键。</li></ul></li></ul><h3 id="重新分片" tabindex="-1"><a class="header-anchor" href="#重新分片"><span>重新分片</span></a></h3><p>添加节点：./redis-cli --cluster add-node 192.168.1.136:7007 192.168.1.136:7001 --cluster-slave</p><p>redis-cli --cluster reshard 172.22.6.3 7001</p><h2 id="客户端" tabindex="-1"><a class="header-anchor" href="#客户端"><span>客户端</span></a></h2><p>推荐使用 <a href="https://github.com/uglide/RedisDesktopManager" target="_blank" rel="noopener noreferrer"><strong>RedisDesktopManager</strong></a></p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><strong>官网</strong><ul><li><a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis 官网</a></li><li><a href="https://github.com/antirez/redis" target="_blank" rel="noopener noreferrer">Redis Github</a></li><li><a href="http://redis.cn/" target="_blank" rel="noopener noreferrer">Redis 官方文档中文版</a></li></ul></li><li><strong>书籍</strong><ul><li><a href="https://item.jd.com/11791607.html" target="_blank" rel="noopener noreferrer">《Redis 实战》</a></li><li><a href="https://item.jd.com/11486101.html" target="_blank" rel="noopener noreferrer">《Redis 设计与实现》</a></li></ul></li><li><strong>教程</strong><ul><li><a href="http://redisdoc.com/" target="_blank" rel="noopener noreferrer">Redis 命令参考</a></li></ul></li><li><strong>文章</strong><ul><li><a href="https://juejin.im/post/5b8fc5536fb9a05d2d01fb11" target="_blank" rel="noopener noreferrer">深入剖析 Redis 系列(三) - Redis 集群模式搭建与原理详解</a></li></ul></li></ul>`,171)]))}const p=i(l,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/pages/537098/","title":"Redis 运维","lang":"zh-CN","frontmatter":{"icon":"logos:redis","title":"Redis 运维","date":"2020-06-24T10:45:38.000Z","order":41,"categories":["数据库","KV数据库","Redis"],"tags":["数据库","KV数据库","Redis","运维"],"permalink":"/pages/537098/","description":"Redis 运维 Redis 是一个高性能的 key-value 数据库。 SET 操作每秒钟 110000 次；GET 操作每秒钟 81000 次。 Redis 安装 Window 下安装 下载地址：https://github.com/MSOpenTech/redis/releases。 Redis 支持 32 位和 64 位。这个需要根据你系统平...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/537098/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Redis 运维"}],["meta",{"property":"og:description","content":"Redis 运维 Redis 是一个高性能的 key-value 数据库。 SET 操作每秒钟 110000 次；GET 操作每秒钟 81000 次。 Redis 安装 Window 下安装 下载地址：https://github.com/MSOpenTech/redis/releases。 Redis 支持 32 位和 64 位。这个需要根据你系统平..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0d1c392?w=1467&h=803&f=png&s=43428"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-18T02:31:38.000Z"}],["meta",{"property":"article:tag","content":"数据库"}],["meta",{"property":"article:tag","content":"KV数据库"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"运维"}],["meta",{"property":"article:published_time","content":"2020-06-24T10:45:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-18T02:31:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis 运维\\",\\"image\\":[\\"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0d1c392?w=1467&h=803&f=png&s=43428\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200712125827.png\\",\\"https://raw.githubusercontent.com/dunwu/images/master/snap/20200712130234.png\\",\\"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0b8ea57?w=2230&h=2914&f=png&s=246433\\",\\"https://user-gold-cdn.xitu.io/2019/10/10/16db5250b0e9ba3c?w=2229&h=2890&f=png&s=192997\\"],\\"datePublished\\":\\"2020-06-24T10:45:38.000Z\\",\\"dateModified\\":\\"2025-02-18T02:31:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"Redis 安装","slug":"redis-安装","link":"#redis-安装","children":[{"level":3,"title":"Window 下安装","slug":"window-下安装","link":"#window-下安装","children":[]},{"level":3,"title":"Linux 下安装","slug":"linux-下安装","link":"#linux-下安装","children":[]},{"level":3,"title":"Ubuntu 下安装","slug":"ubuntu-下安装","link":"#ubuntu-下安装","children":[]},{"level":3,"title":"开机启动","slug":"开机启动","link":"#开机启动","children":[]},{"level":3,"title":"开放防火墙端口","slug":"开放防火墙端口","link":"#开放防火墙端口","children":[]},{"level":3,"title":"Redis 安装脚本","slug":"redis-安装脚本","link":"#redis-安装脚本","children":[]}]},{"level":2,"title":"Redis 单机使用和配置","slug":"redis-单机使用和配置","link":"#redis-单机使用和配置","children":[{"level":3,"title":"启动 Redis","slug":"启动-redis","link":"#启动-redis","children":[]},{"level":3,"title":"Redis 常见配置","slug":"redis-常见配置","link":"#redis-常见配置","children":[]},{"level":3,"title":"设为守护进程","slug":"设为守护进程","link":"#设为守护进程","children":[]},{"level":3,"title":"压力测试","slug":"压力测试","link":"#压力测试","children":[]}]},{"level":2,"title":"Redis 集群使用和配置","slug":"redis-集群使用和配置","link":"#redis-集群使用和配置","children":[{"level":3,"title":"集群规划","slug":"集群规划","link":"#集群规划","children":[]},{"level":3,"title":"部署集群","slug":"部署集群","link":"#部署集群","children":[]},{"level":3,"title":"部署哨兵","slug":"部署哨兵","link":"#部署哨兵","children":[]},{"level":3,"title":"扩容","slug":"扩容","link":"#扩容","children":[]}]},{"level":2,"title":"Redis 命令","slug":"redis-命令","link":"#redis-命令","children":[{"level":3,"title":"通用命令","slug":"通用命令","link":"#通用命令","children":[]},{"level":3,"title":"集群命令","slug":"集群命令","link":"#集群命令","children":[]},{"level":3,"title":"重新分片","slug":"重新分片","link":"#重新分片","children":[]}]},{"level":2,"title":"客户端","slug":"客户端","link":"#客户端","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1739845898000,"updatedTime":1739845898000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":18.76,"words":5628},"filePathRelative":"posts/02.database/05.KV数据库/01.Redis/41.Redis运维.md","localizedDate":"2020年6月24日","excerpt":"\\n<blockquote>\\n<p><strong>Redis</strong> 是一个高性能的 key-value 数据库。</p>\\n<p>SET 操作每秒钟 110000 次；GET 操作每秒钟 81000 次。</p>\\n</blockquote>\\n<h2>Redis 安装</h2>\\n<h3>Window 下安装</h3>\\n<p><strong>下载地址：</strong><a href=\\"https://github.com/MSOpenTech/redis/releases\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://github.com/MSOpenTech/redis/releases</a>。</p>","autoDesc":true}');export{p as comp,r as data};
