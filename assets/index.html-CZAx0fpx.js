import{_ as i,c as a,b as e,o as l}from"./app-kzyIs9AF.js";const h={};function t(n,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="oh-my-zsh-应用" tabindex="-1"><a class="header-anchor" href="#oh-my-zsh-应用"><span>oh-my-zsh 应用</span></a></h1><h2 id="zsh-简介" tabindex="-1"><a class="header-anchor" href="#zsh-简介"><span>Zsh 简介</span></a></h2><h3 id="zsh-是什么" tabindex="-1"><a class="header-anchor" href="#zsh-是什么"><span>Zsh 是什么</span></a></h3><p>使用 Linux 的人都知道：<strong>*Shell* 是一个用 C 语言编写的程序,它是用户使用 Linux 的桥梁。_Shell* 既是一种命令语言,又是一种程序设计语言</strong>。</p><p>Shell 的类型有很多种，linux 下默认的是 bash，虽然 bash 的功能已经很强大，但对于以懒惰为美德的程序员来说，bash 的提示功能不够强大，界面也不够炫，并非理想工具。</p><p><a href="http://www.zsh.org/" target="_blank" rel="noopener noreferrer"><strong>Zsh</strong></a> 也是一种 Shell（据传说 99% 的 Bash 操作 和 Zsh 是相同的），它的功能极其强大，只是配置过于复杂，起初只有极客才在用。后来，出现了一个名叫 <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener noreferrer"><strong>oh-my-zsh</strong></a> 的开源项目，使用 zsh 就变得十分简易了。</p><h2 id="zsh-安装" tabindex="-1"><a class="header-anchor" href="#zsh-安装"><span>Zsh 安装</span></a></h2><h3 id="环境要求" tabindex="-1"><a class="header-anchor" href="#环境要求"><span>环境要求</span></a></h3><ul><li>CentOS 6.7 64 bit</li><li>root 用户</li></ul><h3 id="安装-zsh" tabindex="-1"><a class="header-anchor" href="#安装-zsh"><span>安装 zsh</span></a></h3><ul><li>先看下你的 CentOS 支持哪些 shell：<code>cat /etc/shells</code>，正常结果应该是这样的：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/sbin/nologin</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/dash</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/tcsh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/bin/csh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果已经有 zsh ，那么我们就不必安装了。</p><ul><li>CentOS 安装：<code>sudo yum install -y zsh</code></li><li>Ubuntu 安装：<code>sudo apt-get install -y zsh</code></li><li>检查系统的 shell：<code>cat /etc/shells</code>，你会发现多了一个：<code>/bin/zsh</code></li></ul><h3 id="安装-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#安装-oh-my-zsh"><span>安装 oh-my-zsh</span></a></h3><p>使用 <a href="http://www.zsh.org/" target="_blank" rel="noopener noreferrer"><strong>Zsh</strong></a>，怎么能离开灵魂伴侣 <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener noreferrer"><strong>oh-my-zsh</strong></a>？</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 安装 oh-my-zsh</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wget</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -O</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置-oh-my-zsh" tabindex="-1"><a class="header-anchor" href="#配置-oh-my-zsh"><span>配置 oh-my-zsh</span></a></h3><h4 id="插件" tabindex="-1"><a class="header-anchor" href="#插件"><span>插件</span></a></h4><blockquote><p>oh-my-zsh 插件太多，不一一列举，请参考：<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins" target="_blank" rel="noopener noreferrer">oh-my-zsh 插件列表</a></p></blockquote><ul><li>启用 oh-my-zsh 中自带的插件。</li><li>查看 oh-my-zsh 插件数：<code>ls -l /root/.oh-my-zsh/plugins |grep &quot;^d&quot;|wc -l</code></li><li>编辑配置文件：<code>vim /root/.zshrc</code></li><li>插件推荐： <ul><li><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noopener noreferrer"><code>zsh-autosuggestions</code></a><ul><li>这个插件会对历史命令一些补全，类似 fish 终端</li><li>安装，复制该命令：<code>git clone https://github.com/zsh-users/zsh-autosuggestions \${ZSH_CUSTOM:-\\~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions</code> - 编辑：<code>vim \\~/.zshrc</code>，找到这一行，后括号里面的后面添加：<code>plugins=( 前面的一些插件名称，换行，加上：zsh-autosuggestions)</code> - 刷新下配置：<code>source \\~/.zshrc</code></li></ul></li><li>extract <ul><li>功能强大的解压插件，所有类型的文件解压一个命令 x 全搞定，再也不需要去记 tar 后面到底是哪几个参数了。</li></ul></li><li>z <ul><li>强大的目录自动跳转命令，会记忆你曾经进入过的目录，用模糊匹配快速进入你想要的目录。</li></ul></li><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noopener noreferrer"><code>zsh-syntax-highlighting</code></a><ul><li>这个插件会对终端命令高亮显示,比如正确的拼写会是绿色标识,否则是红色,另外对于一些 shell 输出语句也会有高亮显示,算是不错的辅助插件</li><li>安装，复制该命令：<code>git clone https://github.com/zsh-users/zsh-syntax-highlighting.git \${ZSH_CUSTOM:-\\~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting</code></li><li>编辑：<code>vim \\~/.zshrc</code>，找到这一行，后括号里面的后面添加：<code>plugins=( 前面的一些插件名称，换行，加上：zsh-syntax-highlighting)</code> - 刷新下配置：<code>source \\~/.zshrc</code></li></ul></li><li><a href="https://github.com/mfaerevaag/wd" target="_blank" rel="noopener noreferrer"><code>wd</code></a><ul><li>简单地讲就是给指定目录映射一个全局的名字，以后方便直接跳转到这个目录，比如：</li><li>编辑配置文件，添加上 wd 的名字：<code>vim /root/.zshrc</code></li><li>我常去目录：<strong>/opt/setups</strong>，每次进入该目录下都需要这样：<code>cd /opt/setups</code></li><li>现在用 wd 给他映射一个快捷方式：<code>cd /opt/setups ; wd add setups</code></li><li>以后我在任何目录下只要运行：<code>wd setups</code> 就自动跑到 /opt/setups 目录下了</li></ul></li><li><a href="https://github.com/wting/autojump" target="_blank" rel="noopener noreferrer"><code>autojump</code></a><ul><li>这个插件会记录你常去的那些目录，然后做一下权重记录，你可以用这个命令看到你的习惯：<code>j --stat</code>，如果这个里面有你的记录，那你就只要敲最后一个文件夹名字即可进入，比如我个人习惯的 program：<code>j program</code>，就可以直接到：<code>/usr/program</code></li><li>插件下载：<code>wget https://github.com/downloads/wting/autojump/autojump_v21.1.2.tar.gz</code></li><li>解压：<code>tar zxvf autojump_v21.1.2.tar.gz</code></li><li>进入解压后目录并安装：<code>cd autojump_v21.1.2/ ; ./install.sh</code></li><li>再执行下这个：<code>source /etc/profile.d/autojump.sh</code></li><li>编辑配置文件，添加上 autojump 的名字：<code>vim /root/.zshrc</code></li></ul></li></ul></li></ul><h4 id="主题" tabindex="-1"><a class="header-anchor" href="#主题"><span>主题</span></a></h4><blockquote><p>oh-my-zsh 主题太多，不一一列举，请参考：<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes" target="_blank" rel="noopener noreferrer">oh-my-zsh 主题列表</a></p></blockquote><ul><li>查看 oh-my-zsh 主题数：<code>ls -l /root/.oh-my-zsh/themes |grep &quot;^-&quot;|wc -l</code></li><li>个人比较推荐的是（排名有先后）： <ul><li><code>ys</code></li><li><code>agnoster</code></li><li><code>avit</code></li><li><code>blinks</code></li></ul></li><li>编辑配置文件：<code>vim /root/.zshrc</code></li><li>配置好新主题需要重新连接 shell 才能看到效果</li></ul><p>zsh 效果如下：</p><figure><img src="https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h2 id="快捷键" tabindex="-1"><a class="header-anchor" href="#快捷键"><span>快捷键</span></a></h2><ul><li>呃，这个其实可以不用讲的，你自己用的时候你自己会发现的，各种便捷，特别是用 Tab 多的人一定会有各种惊喜的。</li><li>使用 ctrl-r 来搜索命令历史记录。按完此快捷键后，可以输入关键命令词语，如果历史记录有含有此词语会显示出来。</li><li>命令别名： - 在命令行中输入 alias 可以查看已经有的命令别名 - 自己新增一些别名，编辑文件：<code>vim \\~/.zshrc</code>，在文件加入下面格式的命令，比如以下是网友提供的一些思路：</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cls</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;clear&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ll</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ls -l&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> la</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;ls -a&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> grep</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;grep --color=auto&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> html</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 在命令行直接输入后缀为 html 的文件名，会在 Vim 中打开</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> rb</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">     # 在命令行直接输入 ruby 文件，会在 Vim 中打开</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> py</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">      # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> js</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> c</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> java</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> txt</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;vim&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> gz</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;tar -xzvf&#39;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 在命令行直接输入后缀为 gz 的文件名，会自动解压打开</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> tgz</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;tar -xzvf&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> zip</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;unzip&#39;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">alias</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -s</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> bz2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;tar -xjvf&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ul><li><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener noreferrer">oh-my-zsh Github</a></li></ul>`,31)]))}const o=i(h,[["render",t],["__file","index.html.vue"]]),p=JSON.parse('{"path":"/pages/078b3e/","title":"zsh","lang":"zh-CN","frontmatter":{"title":"zsh","date":"2019-07-11T16:52:00.000Z","order":"09","categories":["操作系统","Linux","工具"],"tags":["操作系统","Linux","工具","Zsh"],"permalink":"/pages/078b3e/","description":"oh-my-zsh 应用 Zsh 简介 Zsh 是什么 使用 Linux 的人都知道：*Shell* 是一个用 C 语言编写的程序,它是用户使用 Linux 的桥梁。_Shell* 既是一种命令语言,又是一种程序设计语言。 Shell 的类型有很多种，linux 下默认的是 bash，虽然 bash 的功能已经很强大，但对于以懒惰为美德的程序员来说，b...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/078b3e/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"zsh"}],["meta",{"property":"og:description","content":"oh-my-zsh 应用 Zsh 简介 Zsh 是什么 使用 Linux 的人都知道：*Shell* 是一个用 C 语言编写的程序,它是用户使用 Linux 的桥梁。_Shell* 既是一种命令语言,又是一种程序设计语言。 Shell 的类型有很多种，linux 下默认的是 bash，虽然 bash 的功能已经很强大，但对于以懒惰为美德的程序员来说，b..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"操作系统"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"工具"}],["meta",{"property":"article:tag","content":"Zsh"}],["meta",{"property":"article:published_time","content":"2019-07-11T16:52:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"zsh\\",\\"image\\":[\\"https://cloud.githubusercontent.com/assets/2618447/6316862/70f58fb6-ba03-11e4-82c9-c083bf9a6574.png\\"],\\"datePublished\\":\\"2019-07-11T16:52:00.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"Zsh 简介","slug":"zsh-简介","link":"#zsh-简介","children":[{"level":3,"title":"Zsh 是什么","slug":"zsh-是什么","link":"#zsh-是什么","children":[]}]},{"level":2,"title":"Zsh 安装","slug":"zsh-安装","link":"#zsh-安装","children":[{"level":3,"title":"环境要求","slug":"环境要求","link":"#环境要求","children":[]},{"level":3,"title":"安装 zsh","slug":"安装-zsh","link":"#安装-zsh","children":[]},{"level":3,"title":"安装 oh-my-zsh","slug":"安装-oh-my-zsh","link":"#安装-oh-my-zsh","children":[]},{"level":3,"title":"配置 oh-my-zsh","slug":"配置-oh-my-zsh","link":"#配置-oh-my-zsh","children":[]}]},{"level":2,"title":"快捷键","slug":"快捷键","link":"#快捷键","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":4.74,"words":1421},"filePathRelative":"posts/14.操作系统/02.Linux/02.工具/09.zsh.md","localizedDate":"2019年7月11日","excerpt":"\\n<h2>Zsh 简介</h2>\\n<h3>Zsh 是什么</h3>\\n<p>使用 Linux 的人都知道：<strong>*Shell* 是一个用 C 语言编写的程序,它是用户使用 Linux 的桥梁。_Shell* 既是一种命令语言,又是一种程序设计语言</strong>。</p>\\n<p>Shell 的类型有很多种，linux 下默认的是 bash，虽然 bash 的功能已经很强大，但对于以懒惰为美德的程序员来说，bash 的提示功能不够强大，界面也不够炫，并非理想工具。</p>\\n<p><a href=\\"http://www.zsh.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><strong>Zsh</strong></a> 也是一种 Shell（据传说 99% 的 Bash 操作 和 Zsh 是相同的），它的功能极其强大，只是配置过于复杂，起初只有极客才在用。后来，出现了一个名叫 <a href=\\"https://github.com/robbyrussell/oh-my-zsh\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><strong>oh-my-zsh</strong></a> 的开源项目，使用 zsh 就变得十分简易了。</p>","autoDesc":true}');export{o as comp,p as data};
