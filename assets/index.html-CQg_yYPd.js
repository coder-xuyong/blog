import{_ as l,c as s,b as o,e as a,d as n,h as t,f as i,r as p,o as h}from"./app-YpXT1RvH.js";const f={};function c(u,e){const r=p("RouteLink");return h(),s("div",null,[e[4]||(e[4]=o('<h1 id="java-序列化工具" tabindex="-1"><a class="header-anchor" href="#java-序列化工具"><span>Java 序列化工具</span></a></h1><p>Java 官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代 Java 自身的序列化机制。 如果想详细了解 Java 自身序列化方式，可以参考：<a href="https://dunwu.github.io/waterdrop/pages/2b2f0f/" target="_blank" rel="noopener noreferrer">Java 序列化</a></p><p>序列化库技术选型：</p><ul><li><a href="https://github.com/apache/thrift" target="_blank" rel="noopener noreferrer">thrift</a>、<a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noopener noreferrer">protobuf</a> - 适用于对性能敏感，对开发体验要求不高的内部系统。</li><li><a href="http://hessian.caucho.com/doc/hessian-overview.xtp" target="_blank" rel="noopener noreferrer">hessian</a> - 适用于对开发体验敏感，性能有要求的内外部系统。</li><li><a href="https://github.com/FasterXML/jackson" target="_blank" rel="noopener noreferrer">jackson</a>、<a href="https://github.com/google/gson" target="_blank" rel="noopener noreferrer">gson</a>、<a href="https://github.com/alibaba/fastjson" target="_blank" rel="noopener noreferrer">fastjson</a> - 适用于对序列化后的数据要求有良好的可读性（转为 json 、xml 形式）。</li></ul><h2 id="内容" tabindex="-1"><a class="header-anchor" href="#内容"><span>内容</span></a></h2>',5)),a("ul",null,[a("li",null,[n(r,{to:"/posts/01.Java/12.%E5%B7%A5%E5%85%B7/01.IO/01.JSON%E5%BA%8F%E5%88%97%E5%8C%96.html"},{default:i(()=>e[0]||(e[0]=[t("JSON")])),_:1}),e[1]||(e[1]=t(" - Fastjson、Jackson、Gson"))]),a("li",null,[n(r,{to:"/posts/01.Java/12.%E5%B7%A5%E5%85%B7/01.IO/02.%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%BA%8F%E5%88%97%E5%8C%96.html"},{default:i(()=>e[2]||(e[2]=[t("二进制")])),_:1}),e[3]||(e[3]=t(" - Protobuf、Thrift、Hessian、Kryo、FST"))])]),e[5]||(e[5]=o('<h2 id="资料" tabindex="-1"><a class="header-anchor" href="#资料"><span>资料</span></a></h2><ul><li><a href="https://github.com/apache/thrift" target="_blank" rel="noopener noreferrer">Thrift Github</a></li><li><a href="https://github.com/protocolbuffers/protobuf" target="_blank" rel="noopener noreferrer">Protobuf Github</a></li><li><a href="http://hessian.caucho.com/doc/hessian-overview.xtp" target="_blank" rel="noopener noreferrer">Hessian 官网</a></li><li><a href="https://github.com/alibaba/fastjson" target="_blank" rel="noopener noreferrer">Fastjson Github</a></li><li><a href="https://github.com/FasterXML/jackson" target="_blank" rel="noopener noreferrer">Jackson Github</a></li><li><a href="https://github.com/google/gson" target="_blank" rel="noopener noreferrer">Gson Github</a></li></ul>',2))])}const b=l(f,[["render",c],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/pages/08b504/","title":"Java 序列化工具","lang":"zh-CN","frontmatter":{"title":"Java 序列化工具","date":"2022-02-17T22:34:30.000Z","categories":["Java","工具","IO"],"tags":["Java","IO","序列化"],"permalink":"/pages/08b504/","hidden":true,"index":false,"description":"Java 序列化工具 Java 官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代 Java 自身的序列化机制。 如果想详细了解 Java 自身序列化方式，可以参考：Java 序列化 序列化库技术选型： thrift、protobuf - 适用于对性能敏感，对开发体验要求不高的内部系统。 hessian - 适用于对开发体验敏...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/pages/08b504/"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"Java 序列化工具"}],["meta",{"property":"og:description","content":"Java 序列化工具 Java 官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代 Java 自身的序列化机制。 如果想详细了解 Java 自身序列化方式，可以参考：Java 序列化 序列化库技术选型： thrift、protobuf - 适用于对性能敏感，对开发体验要求不高的内部系统。 hessian - 适用于对开发体验敏..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-10T02:14:26.000Z"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"IO"}],["meta",{"property":"article:tag","content":"序列化"}],["meta",{"property":"article:published_time","content":"2022-02-17T22:34:30.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-10T02:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 序列化工具\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-17T22:34:30.000Z\\",\\"dateModified\\":\\"2025-06-10T02:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"内容","slug":"内容","link":"#内容","children":[]},{"level":2,"title":"资料","slug":"资料","link":"#资料","children":[]}],"git":{"createdTime":1749521666000,"updatedTime":1749521666000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":1,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":0.86,"words":259},"filePathRelative":"posts/01.Java/12.工具/01.IO/README.md","localizedDate":"2022年2月17日","excerpt":"\\n<p>Java 官方的序列化存在许多问题，因此，很多人更愿意使用优秀的第三方序列化工具来替代 Java 自身的序列化机制。 如果想详细了解 Java 自身序列化方式，可以参考：<a href=\\"https://dunwu.github.io/waterdrop/pages/2b2f0f/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Java 序列化</a></p>\\n<p>序列化库技术选型：</p>\\n<ul>\\n<li><a href=\\"https://github.com/apache/thrift\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">thrift</a>、<a href=\\"https://github.com/protocolbuffers/protobuf\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">protobuf</a> - 适用于对性能敏感，对开发体验要求不高的内部系统。</li>\\n<li><a href=\\"http://hessian.caucho.com/doc/hessian-overview.xtp\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">hessian</a> - 适用于对开发体验敏感，性能有要求的内外部系统。</li>\\n<li><a href=\\"https://github.com/FasterXML/jackson\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">jackson</a>、<a href=\\"https://github.com/google/gson\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">gson</a>、<a href=\\"https://github.com/alibaba/fastjson\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">fastjson</a> - 适用于对序列化后的数据要求有良好的可读性（转为 json 、xml 形式）。</li>\\n</ul>","autoDesc":true}');export{b as comp,m as data};
