import{_ as e,c as i,b as a,o as n}from"./app-CizSx3bm.js";const t={};function l(c,s){return n(),i("div",null,s[0]||(s[0]=[a(`<h2 id="union-和-union-all" tabindex="-1"><a class="header-anchor" href="#union-和-union-all"><span>UNION 和 UNION ALL</span></a></h2><p><code>union</code> 用于把来自多个 <code>select</code> 语句的结果组合到一个结果集合中。</p><p>语法为：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  column,......from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">union</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [all]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  column,......</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> from table2</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在多个 <code>select</code> 语句中，对应的列应该具有相同的字段属性，且第一个 <code>select</code> 语句中被使用的字段名称也被用于结果的字段名称。</p><p><strong>union 与 union all 的区别</strong></p><p>当使用 <code>union</code> 时，mysql 会把结果集中重复的记录删掉，而使用 <code>union all</code> ，mysql 会把所有的记录返回，且效率高于 <code>union</code> 。</p><h2 id="find-in-set" tabindex="-1"><a class="header-anchor" href="#find-in-set"><span>FIND_IN_SET</span></a></h2><p><code>FIND_IN_SET()</code> 是MySQL用于字符串查找的函数。</p><p>语法为 <code>FIND_IN_SET(str, strlist)</code>，其中 <code>str</code> 是要查找的目标字符串，<code>strlist</code> 是逗号分隔的字符串列表。</p><p>该函数在 <code>strlist</code> 中查找 <code>str</code>。若找到，返回 <code>str</code> 在 <code>strlist</code> 中的位置（从1开始计数）；若未找到，返回0 。若 <code>str</code> 或 <code>strlist</code> 为 <code>NULL</code>，则返回 <code>NULL</code>。</p><h2 id="concat" tabindex="-1"><a class="header-anchor" href="#concat"><span>concat</span></a></h2><p>用于将多个字符串连接成一个字符串。</p><p>语法为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">concat</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(str1, str2,...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>返回结果为连接参数产生的字符串，如果有任何一个参数为null，则返回值为null。</p><h2 id="concat-ws" tabindex="-1"><a class="header-anchor" href="#concat-ws"><span>concat_ws</span></a></h2><p>concat()一样，将多个字符串连接成一个字符串，但是可以一次性指定分隔符～（concat_ws就是concat with separator）</p><p>语法：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">concat_ws(separator, str1, str2, ...)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>第一个参数指定分隔符。需要注意的是分隔符不能为null，如果为null，则返回结果为null。</p><h2 id="group-concat" tabindex="-1"><a class="header-anchor" href="#group-concat"><span>GROUP_CONCAT</span></a></h2><p>用于将group by产生的同一个分组中的值连接起来，返回一个字符串结果。</p><p>语法为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">group_concat( </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[distinct]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 要连接的字段 </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">[order by 排序字段 asc/desc ]</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> [separator &#39;分隔符&#39;]</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> )</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>通过使用distinct可以排除重复值；如果希望对结果中的值进行排序，可以使用order by子句；separator是一个字符串值，缺省为一个逗号。</p><h2 id="exists" tabindex="-1"><a class="header-anchor" href="#exists"><span>EXISTS</span></a></h2><p>EXISTS 运算符用于判断查询子句是否有记录，如果有一条或多条记录存在返回 True，否则返回 False。</p><p>语法为：</p><div class="language-sql line-numbers-mode" data-highlighter="shiki" data-ext="sql" data-title="sql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> column_name(s)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table_name1</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> EXISTS</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">SELECT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> column_name </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">FROM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> table_name2 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">WHERE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> condition);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>table_name1 和 table_name2 一般情况是不同的表（也能一样），condition 里面是可以进行连表操作的</p><p>注：可以和 NOT 一起使用</p><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><blockquote><p><a href="https://www.cnblogs.com/alex0702/p/10767005.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/alex0702/p/10767005.html</a><br><a href="https://www.cnblogs.com/duhuo/p/14829575.html" target="_blank" rel="noopener noreferrer">https://www.cnblogs.com/duhuo/p/14829575.html</a></p></blockquote>`,34)]))}const h=e(t,[["render",l],["__file","01.mysql常见函数.html.vue"]]),o=JSON.parse('{"path":"/2025/02/10/01.mysql%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0.html","title":"MySQL 常见函数","lang":"zh-CN","frontmatter":{"title":"MySQL 常见函数","icon":"fa-solid fa-ghost","date":"2025-02-10T00:00:00.000Z","lastUpdated":true,"order":2,"isOriginal":true,"author":[{"name":"xuyong","url":"https://github.com/coder-xuyong"}],"category":["mysql"],"tag":["mysql"],"sticky":false,"star":true,"permalinkPattern":":year/:month/:day/:slug.html","cover":"https://fastcdn.mihoyo.com/content-v2/hk4e/129667/c2cf4a117398e656a2556274be0fc7c0_8848675056761899792.png","description":"UNION 和 UNION ALL union 用于把来自多个 select 语句的结果组合到一个结果集合中。 语法为： 在多个 select 语句中，对应的列应该具有相同的字段属性，且第一个 select 语句中被使用的字段名称也被用于结果的字段名称。 union 与 union all 的区别 当使用 union 时，mysql 会把结果集中重复的...","head":[["meta",{"property":"og:url","content":"https://coder-xuyong.github.io/blog/2025/02/10/01.mysql%E5%B8%B8%E8%A7%81%E5%87%BD%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"coder-xuyong"}],["meta",{"property":"og:title","content":"MySQL 常见函数"}],["meta",{"property":"og:description","content":"UNION 和 UNION ALL union 用于把来自多个 select 语句的结果组合到一个结果集合中。 语法为： 在多个 select 语句中，对应的列应该具有相同的字段属性，且第一个 select 语句中被使用的字段名称也被用于结果的字段名称。 union 与 union all 的区别 当使用 union 时，mysql 会把结果集中重复的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://fastcdn.mihoyo.com/content-v2/hk4e/129667/c2cf4a117398e656a2556274be0fc7c0_8848675056761899792.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-01T08:12:55.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://fastcdn.mihoyo.com/content-v2/hk4e/129667/c2cf4a117398e656a2556274be0fc7c0_8848675056761899792.png"}],["meta",{"name":"twitter:image:alt","content":"MySQL 常见函数"}],["meta",{"property":"article:author","content":"xuyong"}],["meta",{"property":"article:tag","content":"mysql"}],["meta",{"property":"article:published_time","content":"2025-02-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-01T08:12:55.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL 常见函数\\",\\"image\\":[\\"https://fastcdn.mihoyo.com/content-v2/hk4e/129667/c2cf4a117398e656a2556274be0fc7c0_8848675056761899792.png\\"],\\"datePublished\\":\\"2025-02-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-01T08:12:55.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xuyong\\",\\"url\\":\\"https://github.com/coder-xuyong\\"}]}"]]},"headers":[{"level":2,"title":"UNION 和 UNION ALL","slug":"union-和-union-all","link":"#union-和-union-all","children":[]},{"level":2,"title":"FIND_IN_SET","slug":"find-in-set","link":"#find-in-set","children":[]},{"level":2,"title":"concat","slug":"concat","link":"#concat","children":[]},{"level":2,"title":"concat_ws","slug":"concat-ws","link":"#concat-ws","children":[]},{"level":2,"title":"GROUP_CONCAT","slug":"group-concat","link":"#group-concat","children":[]},{"level":2,"title":"EXISTS","slug":"exists","link":"#exists","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1739845898000,"updatedTime":1740816775000,"contributors":[{"name":"XuYong","username":"XuYong","email":"1299461580@qq.com","commits":2,"url":"https://github.com/XuYong"}]},"readingTime":{"minutes":2.03,"words":610},"filePathRelative":"posts/pre02.mysql/01.mysql常见函数.md","localizedDate":"2025年2月10日","excerpt":"<h2>UNION 和 UNION ALL</h2>\\n<p><code>union</code> 用于把来自多个 <code>select</code>  语句的结果组合到一个结果集合中。</p>\\n<p>语法为：</p>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">select</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">  column,......from</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> table1</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">union</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> [all]</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">select</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">  column,......</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> from table2</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">...</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,o as data};
